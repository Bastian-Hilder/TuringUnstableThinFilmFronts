(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    584955,      12617]
NotebookOptionsPosition[    574360,      12445]
NotebookOutlinePosition[    574837,      12464]
CellTagsIndexPosition[    574794,      12461]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.920110601251301*^9, 3.920110604200283*^9}, {
  3.92011071607186*^9, 3.920110766606695*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"081d0261-24be-d04b-b5a4-01bd8bbc0a17"],

Cell[CellGroupData[{

Cell["2d patterns in thermocapillary model", "Title",
 CellChangeTimes->{{3.920105876782734*^9, 3.920105878099621*^9}, {
  3.9201059107262135`*^9, 
  3.920105940576048*^9}},ExpressionUUID->"f9a79562-215e-bc4a-9044-\
3635053324e9"],

Cell["\<\
Here, we calculate the coefficients on the center manifold, which determines \
stationary 2d patterns. We distinguish two cases: hexagonal lattices and \
square lattices. The coefficients on the center manifold are then written as \
plain text to external files.\
\>", "Text",
 CellChangeTimes->{{3.92010594480904*^9, 3.920106048303438*^9}, {
  3.924000942881378*^9, 3.924000949539833*^9}, {3.9240009863012276`*^9, 
  3.9240010156609554`*^9}, {3.936711508688492*^9, 
  3.93671152061248*^9}},ExpressionUUID->"8b07a863-b14b-dc46-8522-\
808f22765afd"],

Cell[CellGroupData[{

Cell["Set up the model", "Section",
 CellChangeTimes->{{3.920106171089504*^9, 
  3.920106188752001*^9}},ExpressionUUID->"555cdbed-604c-8a41-adbf-\
098cbae06c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Vector", " ", "field", " ", 
     RowBox[{"s", ".", "t", ".", " ", "U_t"}]}], " ", "=", " ", 
    RowBox[{"F", 
     RowBox[{"(", "U", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"h_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"-", 
        RowBox[{"Div", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"h", "^", "3"}], "/", "3"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Grad", "[", 
               RowBox[{
                RowBox[{"Laplacian", "[", 
                 RowBox[{"h", ",", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}], "-", 
              RowBox[{"g", "*", 
               RowBox[{"Grad", "[", 
                RowBox[{"h", ",", 
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"M", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"h", "^", "2"}], "/", "2"}], ")"}], "*", 
            RowBox[{"Grad", "[", 
             RowBox[{
              RowBox[{"h", "-", "T"}], ",", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Div", "[", 
            RowBox[{
             RowBox[{"h", "*", 
              RowBox[{"Grad", "[", 
               RowBox[{"T", ",", 
                RowBox[{"{", 
                 RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"h", ",", "x1"}], "]"}], "^", "2"}], "+", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"h", ",", "x2"}], "]"}], "^", "2"}]}], ")"}]}], "+", 
          RowBox[{"\[Beta]", "*", 
           RowBox[{"(", 
            RowBox[{"T", "-", "h"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"h", "^", "3"}], "/", "3"}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Grad", "[", 
                 RowBox[{
                  RowBox[{"Laplacian", "[", 
                   RowBox[{"h", ",", 
                    RowBox[{"{", 
                    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}], "-", 
                RowBox[{"g", "*", 
                 RowBox[{"Grad", "[", 
                  RowBox[{"h", ",", 
                   RowBox[{"{", 
                    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]}], ")"}]}], 
             "+", 
             RowBox[{"M", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"h", "^", "2"}], "/", "2"}], ")"}], "*", 
              RowBox[{"Grad", "[", 
               RowBox[{
                RowBox[{"h", "-", "T"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]}], ")"}], ".", 
           RowBox[{"Grad", "[", 
            RowBox[{
             RowBox[{"T", "-", "h"}], ",", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}], "+", 
          RowBox[{"Div", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"h", "^", "4"}], "/", "8"}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Grad", "[", 
                 RowBox[{
                  RowBox[{"Laplacian", "[", 
                   RowBox[{"h", ",", 
                    RowBox[{"{", 
                    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}], "-", 
                RowBox[{"g", "*", 
                 RowBox[{"Grad", "[", 
                  RowBox[{"h", ",", 
                   RowBox[{"{", 
                    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]}], ")"}]}], 
             "+", 
             RowBox[{"M", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"h", "^", "3"}], "/", "6"}], ")"}], "*", 
              RowBox[{"Grad", "[", 
               RowBox[{
                RowBox[{"h", "-", "T"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}], ")"}]}], "}"}]}], 
     "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQnSG+PorJ9K3jlValGBCtsVf9NojecSeLmxlIP1x5
jB9EB0Z9kQTRO7MNdUD0v92zwXSG/0VLEO3a12ELoi/MTHIC0TwMO+JBtOmK
kDQQfeJ1P5j27LOdAaLPvOaaA6L/ypUuANEzOkXWgej8kxf3gOj/83fuBdE6
if/PgOhfvmJXQHQKc+oNEF0h5vsORG9oYPgGoj/4S3wH0UvTTf6A6K0mZ/+B
aFvnmcwsQHrFg11geqngYx0QHbHmvT6IFlv2Zfl7i7eOL3JjVoLo6hC3eyD6
1rxdYPqbZXjAJyBdueJVIIi+ErNKwcUGSF9+rAiiAZLHkzQ=
  "],
 CellLabel->"In[72]:=",ExpressionUUID->"a5d7a4dd-0dfc-6d49-afa6-7e65a13daf36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"linearisation", " ", "about", " ", "U_", "0"}], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"L", "[", 
     RowBox[{"h_", ",", "T_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"\[Epsilon]", "*", "h"}]}], ",", 
         RowBox[{"1", "+", 
          RowBox[{"\[Epsilon]", "*", "T"}]}]}], "]"}], ",", "\[Epsilon]"}], 
      "]"}], "/.", 
     RowBox[{"\[Epsilon]", "->", "0"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lhat", "[", 
     RowBox[{"k1_", ",", "k2_"}], "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"k1", "*", "x1"}], "+", 
                   RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}], ",", "0"}], 
              "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "I"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"k1", "*", "x1"}], "+", 
                 RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}]}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{"I", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"k1", "*", "x1"}], "+", 
                   RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}]}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "I"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"k1", "*", "x1"}], "+", 
                 RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}]}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"k1", "*", "x1"}], "+", 
                   RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}], ",", "0"}], 
              "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "I"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"k1", "*", "x1"}], "+", 
                 RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}]}], ")"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L", "[", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{"I", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"k1", "*", "x1"}], "+", 
                   RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}]}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "I"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"k1", "*", "x1"}], "+", 
                 RowBox[{"k2", "*", "x2"}]}], ")"}]}], "]"}]}], ")"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Fourier", " ", "symbol", " ", "of", " ", "linearisation"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LhatAbs", "[", "k_", "]"}], ":=", 
    RowBox[{"Lhat", "[", 
     RowBox[{"k", ",", "0"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9201095998844986`*^9, 3.920109607673977*^9}, {
   3.9221725056137953`*^9, 3.9221725202055464`*^9}, {3.923910937950167*^9, 
   3.9239109858601036`*^9}, {3.9341837293241*^9, 3.9341837511156855`*^9}, 
   3.934183852844985*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"87cc1c85-a298-404e-b0a2-66f55126ea90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"quadratic", " ", "nonlinearity"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"N2", "[", 
     RowBox[{"h1_", ",", "h2_", ",", "T1_", ",", "T2_"}], "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"F", "[", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{"\[Epsilon]", "*", "h1"}], "+", 
              RowBox[{"\[Delta]", "*", "h2"}]}], ",", 
             RowBox[{"1", "+", 
              RowBox[{"\[Epsilon]", "*", "T1"}], "+", 
              RowBox[{"\[Delta]", "*", "T2"}]}]}], "]"}], ",", "\[Epsilon]"}],
           "]"}], ",", "\[Delta]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", "->", "0"}], ",", 
        RowBox[{"\[Delta]", "->", "0"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"diagonal", " ", "part"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N2Diag", "[", 
     RowBox[{"h_", ",", "T_"}], "]"}], ":=", 
    RowBox[{"N2", "[", 
     RowBox[{"h", ",", "h", ",", "T", ",", "T"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.920109613572462*^9, 3.9201096922201176`*^9}, {
  3.9201097980728836`*^9, 3.9201098893964996`*^9}, {3.920110001126995*^9, 
  3.920110049077616*^9}, {3.9221658328181143`*^9, 3.922165853999314*^9}, {
  3.922170782786335*^9, 3.922170792971628*^9}, {3.922170889673637*^9, 
  3.922170910967235*^9}, {3.923911000895504*^9, 3.9239110095132313`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"fb588a36-25c3-384e-b99f-0dae1e465de1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"cubic", " ", "nonlinearity"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"N3", "[", 
     RowBox[{
     "h1_", ",", "h2_", ",", "h3_", ",", "T1_", ",", "T2_", ",", "T3_"}], 
     "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "6"}], ")"}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"F", "[", 
              RowBox[{
               RowBox[{"1", "+", 
                RowBox[{"\[Epsilon]", "*", "h1"}], "+", 
                RowBox[{"\[Delta]", "*", "h2"}], "+", 
                RowBox[{"\[Gamma]", "*", "h3"}]}], ",", 
               RowBox[{"1", "+", 
                RowBox[{"\[Epsilon]", "*", "T1"}], "+", 
                RowBox[{"\[Delta]", "*", "T2"}], "+", 
                RowBox[{"\[Gamma]", "*", "T3"}]}]}], "]"}], ",", 
             "\[Epsilon]"}], "]"}], ",", "\[Delta]"}], "]"}], ",", 
         "\[Gamma]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", "->", "0"}], ",", 
        RowBox[{"\[Delta]", "->", "0"}], ",", 
        RowBox[{"\[Gamma]", "->", "0"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"diagonal", " ", "part"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N3Diag", "[", 
     RowBox[{"h_", ",", "T_"}], "]"}], ":=", 
    RowBox[{"N3", "[", 
     RowBox[{"h", ",", "h", ",", "h", ",", "T", ",", "T", ",", "T"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.920110033667496*^9, 3.9201101822599382`*^9}, {
  3.9221708998954024`*^9, 3.922170902117572*^9}, {3.923911014590527*^9, 
  3.923911019506813*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9dbb3040-353f-e148-a65c-62a8e361d9da"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues and eigenvectors", "Section",
 CellChangeTimes->{{3.9201101997970505`*^9, 3.920110238658043*^9}, {
  3.9201113628137016`*^9, 
  3.920111363980454*^9}},ExpressionUUID->"5f74fc80-f33d-e246-9a51-\
8ea5ef757ce9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Determine", " ", "coefficient", " ", "functions", " ", "a_", "1", " ", 
     "and", " ", "a_", "0"}], ",", " ", 
    RowBox[{
    "given", " ", "by", " ", "the", " ", "first", " ", "and", " ", "zeroth", 
     " ", "order", " ", "terms", " ", "of", " ", "the", " ", "determinant"}], 
    ",", " ", "respectively"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a1", "[", "k_", "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Det", "[", 
        RowBox[{
         RowBox[{"LhatAbs", "[", "k", "]"}], "-", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "2", "]"}], "*", "\[Lambda]"}]}], 
        "]"}], ",", "\[Lambda]", ",", "1"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a0", "[", "k_", "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Det", "[", 
        RowBox[{
         RowBox[{"LhatAbs", "[", "k", "]"}], "-", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "2", "]"}], "*", "\[Lambda]"}]}], 
        "]"}], ",", "\[Lambda]", ",", "0"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.92011024362718*^9, 3.920110244636982*^9}, {
  3.920110338041968*^9, 3.920110499456911*^9}, {3.920110555925799*^9, 
  3.920110565002106*^9}, {3.923911044147696*^9, 3.923911088620943*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"706a0990-fa32-0943-b470-c0b2ff980d4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Critical", " ", "Marangoni", " ", "and", " ", "wave", " ", 
    RowBox[{"number", " ", "--"}], " ", "monotonic", " ", "instability"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mmc", "[", "k_", "]"}], ":=", 
    RowBox[{"M", "/.", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"a0", "[", "k", "]"}], "==", "0"}], ",", "M"}], "]"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"kmc", "=", 
    RowBox[{"k", "/.", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Mmc", "[", "k", "]"}], ",", "k"}], "]"}], "==", "0"}], 
         ",", "k"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"note", ":", " ", 
     RowBox[{"\[Beta]", "<", "72"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Mcrit", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Mmc", "[", "kmc", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9201105255331745`*^9, 3.920110552630142*^9}, {
  3.920110777962796*^9, 3.920110859819271*^9}, {3.920110904187002*^9, 
  3.920110961707707*^9}, {3.92011100836607*^9, 3.920111043752918*^9}, {
  3.920111084628498*^9, 3.920111094864899*^9}, {3.92011120441276*^9, 
  3.920111257425684*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"a3d399ca-b3ea-a743-b1df-9f721c7f33c3"],

Cell[BoxData[
 SqrtBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"g", " ", "\[Beta]"}], "+", 
     RowBox[{"6", " ", 
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
        "\[Beta]"}]]}]}], 
    RowBox[{
     RowBox[{"-", "72"}], "+", "\[Beta]"}]]}]]], "Output",
 CellChangeTimes->{
  3.92011096372242*^9, {3.9201110211152706`*^9, 3.920111044133623*^9}, 
   3.920111097934162*^9, 3.920111223372497*^9, {3.920111311728174*^9, 
   3.920111314341414*^9}, 3.9203875247086344`*^9, 3.9204375020677*^9, 
   3.9221624669954505`*^9, 3.922170542086439*^9, 3.922170916073069*^9, 
   3.9222015601246223`*^9, 3.922241858432207*^9, 3.923899261104664*^9, 
   3.923913568484314*^9, 3.923996938502432*^9, 3.930299280307145*^9, 
   3.9327396109876366`*^9, 3.9329193911765137`*^9, 3.934378371608531*^9, 
   3.935918596983592*^9, 3.936018726532795*^9, 3.9361621406904774`*^9, 
   3.9367114260810757`*^9, 3.936713679487404*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"167a8ee3-1f9d-4b3c-a5a8-0a7e829bb47e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"48", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}]}], "+", 
     RowBox[{"12", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "\[Beta]"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
           "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"72", "+", "g"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{
  3.92011096372242*^9, {3.9201110211152706`*^9, 3.920111044133623*^9}, 
   3.920111097934162*^9, 3.920111223372497*^9, {3.920111311728174*^9, 
   3.920111314341414*^9}, 3.9203875247086344`*^9, 3.9204375020677*^9, 
   3.9221624669954505`*^9, 3.922170542086439*^9, 3.922170916073069*^9, 
   3.9222015601246223`*^9, 3.922241858432207*^9, 3.923899261104664*^9, 
   3.923913568484314*^9, 3.923996938502432*^9, 3.930299280307145*^9, 
   3.9327396109876366`*^9, 3.9329193911765137`*^9, 3.934378371608531*^9, 
   3.935918596983592*^9, 3.936018726532795*^9, 3.9361621406904774`*^9, 
   3.9367114260810757`*^9, 3.936713708389456*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"bb54c753-6cde-4c25-820d-98c2e15d32f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Eigenvectors", " ", "at", " ", "critical", " ", "wave", " ", "numbers", 
    " ", "and", " ", "projection", " ", "operator"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coefficient", " ", "for", " ", "eigenvector", " ", "phi_"}], "+", 
    RowBox[{"(", "k", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"1", "-", 
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"k", "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", "M"}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "coefficient", " ", "for", " ", "adjoint", " ", "eigenvector", " ", 
      RowBox[{"phi", "^"}], "*", "_"}], "+", 
     RowBox[{"(", "k", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"alphaTilde", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "6"}], ")"}], "*", 
          RowBox[{"k", "^", "2"}], "*", 
          RowBox[{"(", 
           RowBox[{"6", "+", "M"}], ")"}]}], "+", "\[Beta]"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "^", "2"}], "*", "M"}], ")"}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"aminus", "=", 
    RowBox[{"amin", "/.", 
     RowBox[{
      RowBox[{
       RowBox[{"FullSimplify", "[", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], " ", "amin", "*", " ", 
             SuperscriptBox["k", "2"], "*", " ", "M"}], "-", 
            RowBox[{
             FractionBox["1", "6"], " ", 
             SuperscriptBox["k", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", "M"}], ")"}]}], "-", "\[Beta]"}], "\[Equal]", 
           RowBox[{"a1", "[", "k", "]"}]}], ",", "amin"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"PhiPlus", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Alpha]"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"Phim0", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"PhiP", "=", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"NullSpace", "[", 
       RowBox[{
        RowBox[{"LhatAbs", "[", "kmc", "]"}], "/.", 
        RowBox[{"M", "->", "Mcrit"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"PhiPadj", "=", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"NullSpace", "[", 
       RowBox[{
        RowBox[{"Adjugate", "[", 
         RowBox[{"LhatAbs", "[", "kmc", "]"}], "]"}], "/.", 
        RowBox[{"M", "->", "Mcrit"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PPlus", "[", "U_", "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"(", 
      RowBox[{"PhiPadj", ".", "U"}], ")"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PPlusNormalized", "[", "U_", "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"PhiPadj", ".", "U"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"PhiP", ".", "PhiPadj"}], ")"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.920111369840376*^9, 3.920111396058845*^9}, {
   3.9201118408763685`*^9, 3.92011185477895*^9}, {3.920112567212279*^9, 
   3.920112569316273*^9}, {3.920114392109539*^9, 3.9201144056318855`*^9}, {
   3.920114438288014*^9, 3.9201147129005995`*^9}, {3.920114755978071*^9, 
   3.920114781049448*^9}, 3.920114851336293*^9, {3.920387483918972*^9, 
   3.9203875100482607`*^9}, {3.922161971998124*^9, 3.922162021206125*^9}, {
   3.922162143747033*^9, 3.922162148372837*^9}, {3.922162426455931*^9, 
   3.922162439472453*^9}, {3.922172497162589*^9, 3.9221724999271927`*^9}, {
   3.923911127889252*^9, 3.923911170581951*^9}, {3.923912394240127*^9, 
   3.923912394680269*^9}, {3.923912425025949*^9, 3.923912425423324*^9}, {
   3.9239126369104443`*^9, 3.92391267551902*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"00ada7e1-fafe-8446-b79e-46271c6e3094"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"g", "+", 
      SuperscriptBox["k", "2"]}], ")"}]}], 
   RowBox[{"3", " ", "M"}]]}]], "Output",
 CellChangeTimes->{
  3.920111477586483*^9, 3.920111844139109*^9, 3.9201119251357384`*^9, 
   3.9201125914095592`*^9, 3.9201144068885098`*^9, {3.920114508434328*^9, 
   3.920114512636812*^9}, {3.92011465569726*^9, 3.920114714135103*^9}, 
   3.920114761021375*^9, 3.920114853517651*^9, 3.92038767303792*^9, 
   3.920437581403004*^9, 3.9221625091956425`*^9, 3.922170594182141*^9, 
   3.922170931553268*^9, 3.922201702804479*^9, 3.922241927648298*^9, 
   3.923899349053465*^9, 3.923913571461668*^9, 3.923997007071795*^9, 
   3.930299336406207*^9, 3.932739668281727*^9, 3.932919449696417*^9, 
   3.934378398367127*^9, 3.935918623342638*^9, 3.936018751845838*^9, 
   3.936162211299675*^9, 3.9367114510861263`*^9, 3.9367137084178143`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"c2910303-7faf-4289-baec-f5e73b560a56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "3"]}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["k", "2"], "+", "\[Beta]"}], ")"}]}], 
   RowBox[{
    SuperscriptBox["k", "2"], " ", "M"}]]}]], "Output",
 CellChangeTimes->{
  3.920111477586483*^9, 3.920111844139109*^9, 3.9201119251357384`*^9, 
   3.9201125914095592`*^9, 3.9201144068885098`*^9, {3.920114508434328*^9, 
   3.920114512636812*^9}, {3.92011465569726*^9, 3.920114714135103*^9}, 
   3.920114761021375*^9, 3.920114853517651*^9, 3.92038767303792*^9, 
   3.920437581403004*^9, 3.9221625091956425`*^9, 3.922170594182141*^9, 
   3.922170931553268*^9, 3.922201702804479*^9, 3.922241927648298*^9, 
   3.923899349053465*^9, 3.923913571461668*^9, 3.923997007071795*^9, 
   3.930299336406207*^9, 3.932739668281727*^9, 3.932919449696417*^9, 
   3.934378398367127*^9, 3.935918623342638*^9, 3.936018751845838*^9, 
   3.936162211299675*^9, 3.9367114510861263`*^9, 3.936713708446269*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"3935dfb9-0842-4d0d-9eb3-8a27bd8b6cd9"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"6", "+", "g", "+", 
      SuperscriptBox["k", "2"]}], ")"}]}], "+", "M", "-", 
   FractionBox[
    RowBox[{"12", " ", "\[Beta]"}], 
    SuperscriptBox["k", "2"]]}], 
  RowBox[{"3", " ", "M"}]]], "Output",
 CellChangeTimes->{
  3.920111477586483*^9, 3.920111844139109*^9, 3.9201119251357384`*^9, 
   3.9201125914095592`*^9, 3.9201144068885098`*^9, {3.920114508434328*^9, 
   3.920114512636812*^9}, {3.92011465569726*^9, 3.920114714135103*^9}, 
   3.920114761021375*^9, 3.920114853517651*^9, 3.92038767303792*^9, 
   3.920437581403004*^9, 3.9221625091956425`*^9, 3.922170594182141*^9, 
   3.922170931553268*^9, 3.922201702804479*^9, 3.922241927648298*^9, 
   3.923899349053465*^9, 3.923913571461668*^9, 3.923997007071795*^9, 
   3.930299336406207*^9, 3.932739668281727*^9, 3.932919449696417*^9, 
   3.934378398367127*^9, 3.935918623342638*^9, 3.936018751845838*^9, 
   3.936162211299675*^9, 3.9367114510861263`*^9, 3.936713709046117*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"2c0c29df-b545-46ae-80bf-65af20f0b31c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"g", "+", 
        SuperscriptBox["k", "2"]}], ")"}]}], 
     RowBox[{"3", " ", "M"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.920111477586483*^9, 3.920111844139109*^9, 3.9201119251357384`*^9, 
   3.9201125914095592`*^9, 3.9201144068885098`*^9, {3.920114508434328*^9, 
   3.920114512636812*^9}, {3.92011465569726*^9, 3.920114714135103*^9}, 
   3.920114761021375*^9, 3.920114853517651*^9, 3.92038767303792*^9, 
   3.920437581403004*^9, 3.9221625091956425`*^9, 3.922170594182141*^9, 
   3.922170931553268*^9, 3.922201702804479*^9, 3.922241927648298*^9, 
   3.923899349053465*^9, 3.923913571461668*^9, 3.923997007071795*^9, 
   3.930299336406207*^9, 3.932739668281727*^9, 3.932919449696417*^9, 
   3.934378398367127*^9, 3.935918623342638*^9, 3.936018751845838*^9, 
   3.936162211299675*^9, 3.9367114510861263`*^9, 3.936713709046825*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"92abb891-4353-4a42-a2c2-11c6996f2152"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.920111477586483*^9, 3.920111844139109*^9, 3.9201119251357384`*^9, 
   3.9201125914095592`*^9, 3.9201144068885098`*^9, {3.920114508434328*^9, 
   3.920114512636812*^9}, {3.92011465569726*^9, 3.920114714135103*^9}, 
   3.920114761021375*^9, 3.920114853517651*^9, 3.92038767303792*^9, 
   3.920437581403004*^9, 3.9221625091956425`*^9, 3.922170594182141*^9, 
   3.922170931553268*^9, 3.922201702804479*^9, 3.922241927648298*^9, 
   3.923899349053465*^9, 3.923913571461668*^9, 3.923997007071795*^9, 
   3.930299336406207*^9, 3.932739668281727*^9, 3.932919449696417*^9, 
   3.934378398367127*^9, 3.935918623342638*^9, 3.936018751845838*^9, 
   3.936162211299675*^9, 3.9367114510861263`*^9, 3.936713709047263*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"972054ec-d5a0-4cae-a9a1-1872af2f62a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "72"}], " ", 
      SuperscriptBox["g", "2"]}], "+", 
     RowBox[{"72", " ", "g", " ", "\[Beta]"}], "+", 
     RowBox[{"72", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]"}], "-", 
     RowBox[{"432", " ", 
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}]]}],
      "+", 
     RowBox[{"6", " ", 
      SqrtBox["2"], " ", "g", " ", 
      SqrtBox[
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
        "\[Beta]"}]]}]}], 
    RowBox[{
     SuperscriptBox["g", "3"], "+", 
     RowBox[{"216", " ", "g", " ", "\[Beta]"}], "+", 
     RowBox[{"72", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]"}]}]], 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.920111477586483*^9, 3.920111844139109*^9, 3.9201119251357384`*^9, 
   3.9201125914095592`*^9, 3.9201144068885098`*^9, {3.920114508434328*^9, 
   3.920114512636812*^9}, {3.92011465569726*^9, 3.920114714135103*^9}, 
   3.920114761021375*^9, 3.920114853517651*^9, 3.92038767303792*^9, 
   3.920437581403004*^9, 3.9221625091956425`*^9, 3.922170594182141*^9, 
   3.922170931553268*^9, 3.922201702804479*^9, 3.922241927648298*^9, 
   3.923899349053465*^9, 3.923913571461668*^9, 3.923997007071795*^9, 
   3.930299336406207*^9, 3.932739668281727*^9, 3.932919449696417*^9, 
   3.934378398367127*^9, 3.935918623342638*^9, 3.936018751845838*^9, 
   3.936162211299675*^9, 3.9367114510861263`*^9, 3.936713709950283*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"f8e3d2e1-0f74-4a00-94e8-4de541d311ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "g", " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", "g", "-", "\[Beta]"}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
          "\[Beta]"}]]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"9", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"8", "+", "g"}], ")"}], "2"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", "+", 
        RowBox[{"9", " ", "g"}]}], ")"}], " ", "\[Beta]"}]}]], ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.920111477586483*^9, 3.920111844139109*^9, 3.9201119251357384`*^9, 
   3.9201125914095592`*^9, 3.9201144068885098`*^9, {3.920114508434328*^9, 
   3.920114512636812*^9}, {3.92011465569726*^9, 3.920114714135103*^9}, 
   3.920114761021375*^9, 3.920114853517651*^9, 3.92038767303792*^9, 
   3.920437581403004*^9, 3.9221625091956425`*^9, 3.922170594182141*^9, 
   3.922170931553268*^9, 3.922201702804479*^9, 3.922241927648298*^9, 
   3.923899349053465*^9, 3.923913571461668*^9, 3.923997007071795*^9, 
   3.930299336406207*^9, 3.932739668281727*^9, 3.932919449696417*^9, 
   3.934378398367127*^9, 3.935918623342638*^9, 3.936018751845838*^9, 
   3.936162211299675*^9, 3.9367114510861263`*^9, 3.936713710207423*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"aa0ae52e-1c03-4e4e-899e-6bff84bf9856"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Eigenvectors", " ", "at", " ", "critical", " ", "k", " ", "and", " ", 
    "M"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "/.", 
       RowBox[{"M", "->", 
        RowBox[{"Mmc", "[", "k", "]"}]}]}], ")"}], "/.", 
     RowBox[{"k", "->", "kmc"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"alphaTilde", "/.", 
       RowBox[{"M", "->", 
        RowBox[{"Mmc", "[", "k", "]"}]}]}], ")"}], "/.", 
     RowBox[{"k", "->", "kmc"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.936162019877102*^9, 3.9361621204512253`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"893d071d-83ed-e749-8af8-7e534737f4b9"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"12", " ", 
    SuperscriptBox["g", "2"]}], "-", 
   RowBox[{"12", " ", "g", " ", "\[Beta]"}], "+", 
   RowBox[{
    SqrtBox["2"], " ", "g", " ", 
    SqrtBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}]]}], 
   "-", 
   RowBox[{"12", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]"}], "+", 
      RowBox[{"6", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"g", " ", 
         RowBox[{"(", 
          RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
         "\[Beta]"}]]}]}], ")"}]}]}], 
  RowBox[{"12", " ", 
   RowBox[{"(", 
    RowBox[{"g", "-", "\[Beta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.9361622135614796`*^9, 3.936711451812559*^9, 
  3.9367137104357452`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"de09ba65-7da0-4319-879a-1d6c124e6f67"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], " ", "g", " ", 
    RowBox[{"(", 
     RowBox[{"8", "+", "g", "-", "\[Beta]"}], ")"}]}], "+", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", 
    SqrtBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}]]}]}], 
  RowBox[{"8", " ", "g", " ", 
   RowBox[{"(", 
    RowBox[{"g", "-", "\[Beta]"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.9361622135614796`*^9, 3.936711451812559*^9, 
  3.936713710523876*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"e56d2746-b0b5-4f05-b075-714406eea87e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coefficients on hexagonal lattice", "Section",
 CellChangeTimes->{{3.9221620717511053`*^9, 3.922162126899205*^9}, {
  3.9309084407000914`*^9, 
  3.9309084476136856`*^9}},ExpressionUUID->"b3dad37d-520a-0e41-a585-\
e6c26b6f77b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Vectors", " ", "for", " ", "Fourier", " ", "lattice"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k1", "=", 
    RowBox[{"k", "*", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"k2", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "/", "2"}], ")"}], "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"k3", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"k", "/", "2"}], ")"}]}], "*", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.922162136250715*^9, 3.922162157165207*^9}, {
   3.9221621927976503`*^9, 3.922162240301138*^9}, {3.922162296645621*^9, 
   3.922162457132349*^9}, {3.922162540922403*^9, 3.9221625569290504`*^9}, {
   3.922162880499445*^9, 3.922163057430995*^9}, {3.9221635290212507`*^9, 
   3.922163637453859*^9}, {3.922163735043107*^9, 3.9221637433278913`*^9}, {
   3.9221638319641137`*^9, 3.9221638767827215`*^9}, {3.922164087072504*^9, 
   3.922164124130971*^9}, {3.922164186065224*^9, 3.922164238901482*^9}, {
   3.922164300139597*^9, 3.922164300391638*^9}, {3.922164755800956*^9, 
   3.922164775265398*^9}, {3.922170947137549*^9, 3.922171011373123*^9}, {
   3.922171286412726*^9, 3.92217130669656*^9}, {3.922171548554731*^9, 
   3.922171643488541*^9}, {3.922171687618797*^9, 3.922171800039899*^9}, {
   3.922171928000407*^9, 3.922172039940071*^9}, {3.9221720798999944`*^9, 
   3.922172173002623*^9}, 3.922172354435278*^9, {3.9221723938374844`*^9, 
   3.922172404915211*^9}, {3.922172622458844*^9, 3.922172681825143*^9}, {
   3.9221727693647575`*^9, 3.922172819244048*^9}, {3.922172900443253*^9, 
   3.9221730032921047`*^9}, {3.923912386739558*^9, 3.923912389349279*^9}, {
   3.92391242011755*^9, 3.9239124206300583`*^9}, {3.923912500889984*^9, 
   3.923912623705675*^9}, {3.9239129959227753`*^9, 3.9239130042869015`*^9}, {
   3.923913129663475*^9, 3.9239131463554344`*^9}, {3.923913189665069*^9, 
   3.9239131996232567`*^9}, 3.923913285942389*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"83b58570-1bdc-fc4e-b747-27327dc2838f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.92391357279578*^9, 3.923997008958206*^9, 
  3.930299339707824*^9, 3.932739669530897*^9, 3.932919451306722*^9, 
  3.93437839898842*^9, 3.935918624464713*^9, 3.936018752458997*^9, 
  3.9361622138052406`*^9, 3.936711451883732*^9, 3.9367137105305033`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"75d11d4a-b3d9-4da8-914a-9c83838a78e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["k", "2"]}], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], " ", "k"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.92391357279578*^9, 3.923997008958206*^9, 
  3.930299339707824*^9, 3.932739669530897*^9, 3.932919451306722*^9, 
  3.93437839898842*^9, 3.935918624464713*^9, 3.936018752458997*^9, 
  3.9361622138052406`*^9, 3.936711451883732*^9, 3.93671371053096*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"0bf1623f-b720-43c6-825b-fde722918e66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["k", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", "k"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.92391357279578*^9, 3.923997008958206*^9, 
  3.930299339707824*^9, 3.932739669530897*^9, 3.932919451306722*^9, 
  3.93437839898842*^9, 3.935918624464713*^9, 3.936018752458997*^9, 
  3.9361622138052406`*^9, 3.936711451883732*^9, 3.936713710531364*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"953d7139-e737-4f8c-8649-a7c94053f62e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"quadratic", " ", "coefficient"}], " ", "-", " ", "resonance"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Ncal", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
         RowBox[{"N2", "[", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k2", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"k1", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Alpha]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"k2", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Alpha]"}]}], "]"}]}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", 
          RowBox[{"k3", ".", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "/.", 
       RowBox[{"M", "\[Rule]", 
        RowBox[{"Mmc", "[", "k", "]"}]}]}], ")"}], "/.", 
     RowBox[{"k", "->", "kmc"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.922162136250715*^9, 3.922162157165207*^9}, {
   3.9221621927976503`*^9, 3.922162240301138*^9}, {3.922162296645621*^9, 
   3.922162457132349*^9}, {3.922162540922403*^9, 3.9221625569290504`*^9}, {
   3.922162880499445*^9, 3.922163057430995*^9}, {3.9221635290212507`*^9, 
   3.922163637453859*^9}, {3.922163735043107*^9, 3.9221637433278913`*^9}, {
   3.9221638319641137`*^9, 3.9221638767827215`*^9}, {3.922164087072504*^9, 
   3.922164124130971*^9}, {3.922164186065224*^9, 3.922164238901482*^9}, {
   3.922164300139597*^9, 3.922164300391638*^9}, {3.922164755800956*^9, 
   3.922164775265398*^9}, {3.922170947137549*^9, 3.922171011373123*^9}, {
   3.922171286412726*^9, 3.92217130669656*^9}, {3.922171548554731*^9, 
   3.922171643488541*^9}, {3.922171687618797*^9, 3.922171800039899*^9}, {
   3.922171928000407*^9, 3.922172039940071*^9}, {3.9221720798999944`*^9, 
   3.922172173002623*^9}, 3.922172354435278*^9, {3.9221723938374844`*^9, 
   3.922172404915211*^9}, {3.922172622458844*^9, 3.922172681825143*^9}, {
   3.9221727693647575`*^9, 3.922172819244048*^9}, {3.922172900443253*^9, 
   3.9221730032921047`*^9}, {3.923912386739558*^9, 3.923912389349279*^9}, {
   3.92391242011755*^9, 3.9239124206300583`*^9}, {3.923912500889984*^9, 
   3.923912623705675*^9}, {3.9239129959227753`*^9, 3.9239130042869015`*^9}, {
   3.923913129663475*^9, 3.9239131463554344`*^9}, {3.923913189665069*^9, 
   3.9239131996232567`*^9}, {3.923913285942389*^9, 3.923913348047009*^9}, {
   3.923929267047439*^9, 3.923929306606156*^9}, {3.924001082891369*^9, 
   3.924001087821606*^9}, {3.935918054452745*^9, 3.935918060838776*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"7c0f0a3b-3ac2-db4b-8df7-4a95a4d621a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"g", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "24"}], "+", 
          RowBox[{"37", " ", "g"}]}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "3"]}], "-", 
       RowBox[{"48", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "18"}], "+", "g"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"216", "+", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"27", "+", "g"}], ")"}]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
          "\[Beta]"}]]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "24"}], " ", 
           RowBox[{"(", 
            RowBox[{"864", "+", 
             RowBox[{"11", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"15696", "+", 
             RowBox[{"62", " ", "g"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["g", "2"]}], "+", 
             RowBox[{"15", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1296", " ", 
           RowBox[{"(", 
            RowBox[{"864", "+", 
             RowBox[{"23", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"g", " ", 
              RowBox[{"(", 
               RowBox[{"43416", "+", 
                RowBox[{"4", " ", "g", " ", 
                 RowBox[{"(", 
                  RowBox[{"162", "+", "g"}], ")"}]}], "+", 
                RowBox[{"15", " ", 
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"g", " ", 
                   RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                   "\[Beta]"}]]}]}], ")"}]}], "+", 
             RowBox[{"54", " ", 
              RowBox[{"(", 
               RowBox[{"576", "+", 
                RowBox[{"49", " ", 
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"g", " ", 
                   RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                   "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}],
     ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"216", "+", 
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"27", "+", "g"}], ")"}]}]}], ")"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3456"}], "+", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "5832"}], "+", 
             RowBox[{"421", " ", "g"}]}], ")"}]}]}], ")"}], " ", "\[Beta]"}], 
       "+", 
       RowBox[{"9", " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", 
          RowBox[{"25", " ", "g"}]}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923997018926062*^9, 3.924001095129862*^9, 
  3.930299348783061*^9, 3.932739679359974*^9, 3.9329194637732477`*^9, 
  3.9343784041768*^9, 3.9359186294160542`*^9, 3.936018757398258*^9, 
  3.9361622265520287`*^9, 3.936711456751121*^9, 3.936713716019744*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"f9298ed5-24bb-45d8-880f-a0c11393a235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"quadratic", " ", "coefficient"}], " ", "-", " ", 
    RowBox[{"conservation", " ", "mode"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["K", "c"], "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Apart", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Expand", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
             RowBox[{"N2", "[", 
              RowBox[{"1", ",", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"I", "*", 
                  RowBox[{"k1", ".", 
                   RowBox[{"{", 
                    RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "1"}], 
               ",", "1", ",", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"I", "*", 
                  RowBox[{"k1", ".", 
                   RowBox[{"{", 
                    RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
                "\[Alpha]"}]}], "]"}]}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], "*", 
              RowBox[{"k1", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}], "/.", 
          RowBox[{"M", "\[Rule]", 
           RowBox[{"Mmc", "[", "k", "]"}]}]}], ")"}], "/.", 
        RowBox[{"k", "->", "kmc"}]}], "]"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "coefficients", " ", "of", " ", "polynomal", " ", "for", " ", 
      "nonlinearity", " ", "in", " ", "conservation", " ", "law"}], ";", " ", 
     RowBox[{
      RowBox[{"recall", " ", 
       SubscriptBox["\[Phi]", "+"], 
       RowBox[{"(", 
        SubscriptBox["k", "j"], ")"}]}], "=", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "\[Alpha]"}], ")"}], "T"]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["\[Kappa]", "0"], "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"M", "-", "g"}], ")"}], "+", 
          RowBox[{"g", "*", "\[Alpha]"}], "-", 
          RowBox[{"k", "^", "2"}]}], ")"}], "/.", 
        RowBox[{"M", "\[Rule]", 
         RowBox[{"Mmc", "[", "k", "]"}]}]}], ")"}], "/.", 
      RowBox[{"k", "->", "kmc"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["\[Kappa]", "1"], "=", 
    RowBox[{"-", "1"}]}]}]}]], "Input",
 CellChangeTimes->{{3.935918041217669*^9, 3.935918073103338*^9}, {
  3.935918448832478*^9, 3.935918492020703*^9}, {3.935918523628826*^9, 
  3.935918523971103*^9}, {3.935918948847849*^9, 3.93591894902871*^9}, {
  3.935919279393573*^9, 3.935919341333026*^9}, {3.935920305835315*^9, 
  3.9359203267654347`*^9}, {3.935920377477299*^9, 3.935920393875235*^9}, {
  3.935921926306147*^9, 3.935922068195586*^9}, {3.9359221681242943`*^9, 
  3.935922171859213*^9}, {3.9359230720018*^9, 3.935923076341801*^9}, {
  3.936020593771038*^9, 3.9360207175083942`*^9}, {3.936020761540126*^9, 
  3.936020762832627*^9}, {3.936020797002605*^9, 3.9360208024441757`*^9}, {
  3.936020840592264*^9, 3.936020936265658*^9}, {3.936021294996003*^9, 
  3.936021295403689*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"89923b8a-ff21-46d4-8214-6554d1f77587"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"8", " ", 
          SuperscriptBox["g", "4"], " ", "\[Beta]"}], "-", 
         RowBox[{"216", " ", 
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
            "\[Beta]"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1728", "-", 
            RowBox[{"96", " ", "\[Beta]"}], "+", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["g", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"108", " ", "\[Beta]"}], "-", 
            SuperscriptBox["\[Beta]", "2"], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}]}], ")"}]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"40", " ", 
             SuperscriptBox["\[Beta]", "2"]}], "-", 
            RowBox[{"72", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}], "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{"13824", "+", 
               RowBox[{"7", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{"9", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "64"}], " ", 
             SuperscriptBox["\[Beta]", "3"]}], "-", 
            RowBox[{"4032", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}], "+", 
            RowBox[{"5", " ", 
             SuperscriptBox["\[Beta]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1152", "+", 
               RowBox[{
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}]}], ")"}]}], "+", 
            RowBox[{"48", " ", "\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1728"}], "+", 
               RowBox[{"13", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"432", " ", 
          SuperscriptBox["g", "3"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["g", "4"]}], "+", 
         RowBox[{"72", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "2"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3096", "+", 
            RowBox[{"421", " ", "\[Beta]"}]}], ")"}]}], "+", 
         RowBox[{"9", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{"10368", "-", 
            RowBox[{"1944", " ", "\[Beta]"}], "+", 
            RowBox[{"25", " ", 
             SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}], ")"}]}], ")"}]}], 
    ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.935923081221095*^9, 3.93601875970366*^9, 
  3.936020941507985*^9, 3.936162233142494*^9, 3.936711459045938*^9, 
  3.93671371861395*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"46e9fd8c-9094-4459-ba07-6a840d975a2b"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"g", " ", 
    RowBox[{"(", 
     RowBox[{"120", "+", "g"}], ")"}]}], 
   RowBox[{"72", "+", "g"}]], "+", 
  FractionBox[
   RowBox[{"g", " ", 
    RowBox[{"(", 
     RowBox[{"72", "+", "g"}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "72"}], "+", "\[Beta]"}]], "-", 
  FractionBox[
   RowBox[{"48", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "72"}], "+", "g"}], ")"}], " ", "\[Beta]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"72", "+", "g"}], ")"}], "2"]], "+", 
  FractionBox[
   RowBox[{"576", " ", 
    SqrtBox["2"], " ", 
    SqrtBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"72", "+", "g"}], ")"}], "2"]], "+", 
  FractionBox[
   RowBox[{"g", " ", 
    SqrtBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}]]}], 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "g"}], "-", 
      RowBox[{"6", " ", "\[Beta]"}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"6", " ", 
    SqrtBox["2"], " ", 
    SqrtBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}]]}], 
   RowBox[{
    RowBox[{"-", "72"}], "+", "\[Beta]"}]], "+", 
  FractionBox[
   RowBox[{"g", " ", 
    SqrtBox[
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}]]}], 
   RowBox[{"6", " ", 
    SqrtBox["2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}]}]], "+", 
  FractionBox[
   SuperscriptBox["g", "2"], 
   RowBox[{
    RowBox[{"-", "g"}], "+", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{3.935923081221095*^9, 3.93601875970366*^9, 
  3.936020941507985*^9, 3.936162233142494*^9, 3.936711459045938*^9, 
  3.936713719676592*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"e346f285-f8d7-4f45-a549-cec64ba333c5"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.935923081221095*^9, 3.93601875970366*^9, 
  3.936020941507985*^9, 3.936162233142494*^9, 3.936711459045938*^9, 
  3.936713719677436*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"fadb316e-6996-4827-aca0-eb7b6d797ba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"calculate", " ", "relevant", " ", "non"}], "-", 
    RowBox[{"central", " ", "terms"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Nu]0", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "\[Beta]"}], ")"}], "*", 
      RowBox[{"Phim0", ".", 
       RowBox[{"N2", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k1", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", 
           RowBox[{"k1", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
          "\[Alpha]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"\[Nu]1", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "/", 
        RowBox[{"a1", "[", "k", "]"}]}], ")"}], "*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aminus", ",", "1"}], "}"}], ".", 
       RowBox[{"N2", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k1", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k2", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k2", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
          "\[Alpha]"}]}], "]"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", 
        RowBox[{"k3", ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Nu]jj", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"Lhat", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"k1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"k1", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"k1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", 
            RowBox[{"k1", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], ".", 
        RowBox[{"N2", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}],
           ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
           "\[Alpha]"}]}], "]"}]}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "*", "I", "*", 
        RowBox[{"k1", ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Nu]jl", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{"Lhat", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"k2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"k1", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"k2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], ".", 
       RowBox[{"N2", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k1", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", 
           RowBox[{"k2", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k2", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
          "\[Alpha]"}]}], "]"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k1", "-", "k2"}], ")"}], ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.922162136250715*^9, 3.922162157165207*^9}, {
   3.9221621927976503`*^9, 3.922162240301138*^9}, {3.922162296645621*^9, 
   3.922162457132349*^9}, {3.922162540922403*^9, 3.9221625569290504`*^9}, {
   3.922162880499445*^9, 3.922163057430995*^9}, {3.9221635290212507`*^9, 
   3.922163637453859*^9}, {3.922163735043107*^9, 3.9221637433278913`*^9}, {
   3.9221638319641137`*^9, 3.9221638767827215`*^9}, {3.922164087072504*^9, 
   3.922164124130971*^9}, {3.922164186065224*^9, 3.922164238901482*^9}, {
   3.922164300139597*^9, 3.922164300391638*^9}, {3.922164755800956*^9, 
   3.922164775265398*^9}, {3.922170947137549*^9, 3.922171011373123*^9}, {
   3.922171286412726*^9, 3.92217130669656*^9}, {3.922171548554731*^9, 
   3.922171643488541*^9}, {3.922171687618797*^9, 3.922171800039899*^9}, {
   3.922171928000407*^9, 3.922172039940071*^9}, {3.9221720798999944`*^9, 
   3.922172173002623*^9}, 3.922172354435278*^9, {3.9221723938374844`*^9, 
   3.922172404915211*^9}, {3.922172622458844*^9, 3.922172681825143*^9}, {
   3.9221727693647575`*^9, 3.922172819244048*^9}, {3.922172900443253*^9, 
   3.9221730032921047`*^9}, {3.923912386739558*^9, 3.923912389349279*^9}, {
   3.92391242011755*^9, 3.9239124206300583`*^9}, {3.923912500889984*^9, 
   3.923912623705675*^9}, {3.9239129959227753`*^9, 3.9239130042869015`*^9}, {
   3.923913129663475*^9, 3.9239131463554344`*^9}, {3.923913189665069*^9, 
   3.9239131996232567`*^9}, {3.923913285942389*^9, 3.923913348047009*^9}, {
   3.923929267047439*^9, 3.9239292934477406`*^9}, {3.9239951883033886`*^9, 
   3.923995240273199*^9}, 3.923998794094538*^9, {3.930302605388358*^9, 
   3.930302606912138*^9}, {3.93030264968854*^9, 3.930302652406689*^9}, {
   3.930304044083023*^9, 3.930304045527739*^9}, {3.9360186630113773`*^9, 
   3.936018720517617*^9}, 3.936018858856929*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"435e0a67-17e5-6842-85a5-454c7ff86d0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["k", "2"], "\[Beta]"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9221625115747557`*^9, 3.92216255869491*^9, {3.922162930405147*^9, 
   3.922162980046348*^9}, {3.922163012931893*^9, 3.922163058017536*^9}, {
   3.9221635378478203`*^9, 3.922163586674377*^9}, {3.922163626249423*^9, 
   3.922163639005808*^9}, 3.922164239773768*^9, 3.922164301373662*^9, 
   3.922164775982422*^9, 3.922165552241519*^9, 3.922170595899164*^9, {
   3.922170933143912*^9, 3.922170958506513*^9}, {3.922171753328437*^9, 
   3.922171802155123*^9}, {3.922171944479874*^9, 3.9221719902175*^9}, {
   3.9221720962554026`*^9, 3.9221721180156465`*^9}, {3.922172155584583*^9, 
   3.922172174200899*^9}, 3.922172827849806*^9, 3.922173004045515*^9, 
   3.922241929580438*^9, 3.9238993515841846`*^9, 3.9239135792280407`*^9, 
   3.923997021910866*^9, 3.923998823301182*^9, 3.930299350867431*^9, 
   3.930302673172439*^9, 3.930304055330877*^9, 3.932739681908905*^9, 
   3.932919466400717*^9, 3.934378405307654*^9, 3.935918630755855*^9, 
   3.936018760808296*^9, 3.936020550354264*^9, 3.93616224059091*^9, 
   3.936711461093638*^9, 3.9367137208785877`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"6397ee6f-a348-455f-828e-889709853583"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["k", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{"g", "+", 
          SuperscriptBox["k", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"9", "+", "g", "+", 
          SuperscriptBox["k", "2"]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"27", "+", 
          RowBox[{"5", " ", "g"}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["k", "2"]}]}], ")"}], " ", "M"}]}], ")"}]}], "-", 
    RowBox[{"24", " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"g", "+", 
       SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}], "2"]}]], "}"}]], "Output",
 CellChangeTimes->{
  3.9221625115747557`*^9, 3.92216255869491*^9, {3.922162930405147*^9, 
   3.922162980046348*^9}, {3.922163012931893*^9, 3.922163058017536*^9}, {
   3.9221635378478203`*^9, 3.922163586674377*^9}, {3.922163626249423*^9, 
   3.922163639005808*^9}, 3.922164239773768*^9, 3.922164301373662*^9, 
   3.922164775982422*^9, 3.922165552241519*^9, 3.922170595899164*^9, {
   3.922170933143912*^9, 3.922170958506513*^9}, {3.922171753328437*^9, 
   3.922171802155123*^9}, {3.922171944479874*^9, 3.9221719902175*^9}, {
   3.9221720962554026`*^9, 3.9221721180156465`*^9}, {3.922172155584583*^9, 
   3.922172174200899*^9}, 3.922172827849806*^9, 3.922173004045515*^9, 
   3.922241929580438*^9, 3.9238993515841846`*^9, 3.9239135792280407`*^9, 
   3.923997021910866*^9, 3.923998823301182*^9, 3.930299350867431*^9, 
   3.930302673172439*^9, 3.930304055330877*^9, 3.932739681908905*^9, 
   3.932919466400717*^9, 3.934378405307654*^9, 3.935918630755855*^9, 
   3.936018760808296*^9, 3.936020550354264*^9, 3.93616224059091*^9, 
   3.936711461093638*^9, 3.936713724100219*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"481fccd0-e846-441d-8547-3a7677f02ca3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"48", " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"27", "+", 
            RowBox[{"2", " ", "g"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}], " ", "M"}]}], ")"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}]], "}"}], 
   ",", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"42", "+", "g"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"96", "+", 
               RowBox[{"5", " ", "g"}]}], ")"}], " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"27", "+", 
            RowBox[{"2", " ", "g"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}], " ", 
          SuperscriptBox["M", "2"]}]}], ")"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "M", " ", "\[Beta]"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "M", " ", "\[Beta]"}]}]], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9221625115747557`*^9, 3.92216255869491*^9, {3.922162930405147*^9, 
   3.922162980046348*^9}, {3.922163012931893*^9, 3.922163058017536*^9}, {
   3.9221635378478203`*^9, 3.922163586674377*^9}, {3.922163626249423*^9, 
   3.922163639005808*^9}, 3.922164239773768*^9, 3.922164301373662*^9, 
   3.922164775982422*^9, 3.922165552241519*^9, 3.922170595899164*^9, {
   3.922170933143912*^9, 3.922170958506513*^9}, {3.922171753328437*^9, 
   3.922171802155123*^9}, {3.922171944479874*^9, 3.9221719902175*^9}, {
   3.9221720962554026`*^9, 3.9221721180156465`*^9}, {3.922172155584583*^9, 
   3.922172174200899*^9}, 3.922172827849806*^9, 3.922173004045515*^9, 
   3.922241929580438*^9, 3.9238993515841846`*^9, 3.9239135792280407`*^9, 
   3.923997021910866*^9, 3.923998823301182*^9, 3.930299350867431*^9, 
   3.930302673172439*^9, 3.930304055330877*^9, 3.932739681908905*^9, 
   3.932919466400717*^9, 3.934378405307654*^9, 3.935918630755855*^9, 
   3.936018760808296*^9, 3.936020550354264*^9, 3.93616224059091*^9, 
   3.936711461093638*^9, 3.936713726468937*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"30116b42-5965-4b98-b840-a3cdedb3c3be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"24", " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"15", "+", "g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", "M"}]}], ")"}]}], "+", 
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}]], "}"}], 
   ",", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"44", "+", "g"}], ")"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"21", "+", "g"}], ")"}], " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"15", "+", "g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          SuperscriptBox["M", "2"]}]}], ")"}]}], "+", 
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "M", " ", "\[Beta]"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "M", " ", "\[Beta]"}]}]], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9221625115747557`*^9, 3.92216255869491*^9, {3.922162930405147*^9, 
   3.922162980046348*^9}, {3.922163012931893*^9, 3.922163058017536*^9}, {
   3.9221635378478203`*^9, 3.922163586674377*^9}, {3.922163626249423*^9, 
   3.922163639005808*^9}, 3.922164239773768*^9, 3.922164301373662*^9, 
   3.922164775982422*^9, 3.922165552241519*^9, 3.922170595899164*^9, {
   3.922170933143912*^9, 3.922170958506513*^9}, {3.922171753328437*^9, 
   3.922171802155123*^9}, {3.922171944479874*^9, 3.9221719902175*^9}, {
   3.9221720962554026`*^9, 3.9221721180156465`*^9}, {3.922172155584583*^9, 
   3.922172174200899*^9}, 3.922172827849806*^9, 3.922173004045515*^9, 
   3.922241929580438*^9, 3.9238993515841846`*^9, 3.9239135792280407`*^9, 
   3.923997021910866*^9, 3.923998823301182*^9, 3.930299350867431*^9, 
   3.930302673172439*^9, 3.930304055330877*^9, 3.932739681908905*^9, 
   3.932919466400717*^9, 3.934378405307654*^9, 3.935918630755855*^9, 
   3.936018760808296*^9, 3.936020550354264*^9, 3.93616224059091*^9, 
   3.936711461093638*^9, 3.936713736438869*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"500673bc-d654-4c69-8d72-9d870ceb0079"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calculate", " ", "coefficients", " ", "from", " ", "quadratic", " ", 
    "interactions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalGamma]0", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
        RowBox[{"N2", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "1"}], ",", 
          "1", ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
           "\[Alpha]"}]}], "]"}]}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], "*", 
         RowBox[{"k1", ".", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Nu]0"}], 
      "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalGamma]1", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
        RowBox[{"N2", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k2", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], "*", 
             RowBox[{"k2", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}],
           ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
           "\[Alpha]"}]}], "]"}]}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], "*", 
         RowBox[{"k3", ".", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Nu]1"}], 
      "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalGamma]2", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
         RowBox[{"N2", "[", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"2", "*", "I", "*", 
              RowBox[{"k1", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Eta]1"}],
            ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], "*", 
              RowBox[{"k1", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Alpha]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"2", "*", "I", "*", 
              RowBox[{"k1", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Eta]2"}]}], "]"}]}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", 
          RowBox[{"k1", ".", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Eta]1", "->", 
          RowBox[{
           RowBox[{"\[Nu]jj", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\[Eta]2", "->", 
          RowBox[{
           RowBox[{"\[Nu]jj", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[CapitalGamma]3", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
         RowBox[{"N2", "[", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k2", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k1", "-", "k2"}], ")"}], ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Eta]1"}],
            ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"k2", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Alpha]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k1", "-", "k2"}], ")"}], ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Eta]2"}]}], "]"}]}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", 
          RowBox[{"k1", ".", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Eta]1", "->", 
          RowBox[{
           RowBox[{"\[Nu]jl", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\[Eta]2", "->", 
          RowBox[{
           RowBox[{"\[Nu]jl", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9221731539019613`*^9, 3.922173155646384*^9}, {
   3.9221742898777695`*^9, 3.922174591502123*^9}, {3.9221746432042065`*^9, 
   3.922174757898465*^9}, {3.922174802520337*^9, 3.922174808618038*^9}, {
   3.922174922832661*^9, 3.922174946934016*^9}, {3.9239133595930824`*^9, 
   3.9239134460791054`*^9}, {3.923913505266567*^9, 3.923913552588824*^9}, {
   3.92391365986998*^9, 3.923913687551201*^9}, {3.92391546319486*^9, 
   3.923915515745528*^9}, {3.923996251056415*^9, 3.923996284293621*^9}, 
   3.923997228259638*^9, {3.923997363135515*^9, 3.923997390518732*^9}, 
   3.923998798557144*^9, {3.93030238967593*^9, 3.930302391138771*^9}, {
   3.930302592241176*^9, 3.930302594451485*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"8d378cf9-2c2c-874b-a89c-d59007985f84"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.9239135588782215`*^9, 3.923913606939022*^9, 
  3.9239140462521763`*^9, 3.923915518057814*^9, 3.92399707215152*^9, 
  3.923997235988142*^9, 3.923997394633274*^9, 3.923999043794792*^9, 
  3.9302993787709613`*^9, 3.930302414608276*^9, 3.9303027592581177`*^9, 
  3.9303041403587575`*^9, 3.932739710347702*^9, 3.932919499086904*^9, 
  3.9343784201457767`*^9, 3.935918643008793*^9, 3.93601877841833*^9, 
  3.9361622767686176`*^9, 3.9367114761887913`*^9, 3.936713736721129*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"bc6a1b32-8023-4fea-84a0-df77372d848d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "24"}], " ", 
           RowBox[{"(", 
            RowBox[{"g", "+", 
             SuperscriptBox["k", "2"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"27", "+", "g", "+", 
             SuperscriptBox["k", "2"]}], ")"}], " ", "M"}]}], ")"}]}], "-", 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{"g", "+", 
          SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"g", "+", 
             SuperscriptBox["k", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"9", "+", "g", "+", 
             SuperscriptBox["k", "2"]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"27", "+", 
             RowBox[{"5", " ", "g"}], "+", 
             RowBox[{"5", " ", 
              SuperscriptBox["k", "2"]}]}], ")"}], " ", "M"}]}], ")"}]}], "+", 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"g", "+", 
          SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], ")"}]}], 
    RowBox[{"96", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "4"], "+", 
        RowBox[{
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
        RowBox[{"3", " ", "\[Beta]"}]}], ")"}], "3"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9239135588782215`*^9, 3.923913606939022*^9, 
  3.9239140462521763`*^9, 3.923915518057814*^9, 3.92399707215152*^9, 
  3.923997235988142*^9, 3.923997394633274*^9, 3.923999043794792*^9, 
  3.9302993787709613`*^9, 3.930302414608276*^9, 3.9303027592581177`*^9, 
  3.9303041403587575`*^9, 3.932739710347702*^9, 3.932919499086904*^9, 
  3.9343784201457767`*^9, 3.935918643008793*^9, 3.93601877841833*^9, 
  3.9361622767686176`*^9, 3.9367114761887913`*^9, 3.93671374494252*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"f301c97b-7f47-49f0-90b6-1cb1b85b8ea0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["k", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "192"}], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"9", "+", "g"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"54", "+", 
              RowBox[{"5", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"9", "+", "g"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"114", "+", "g"}], ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"74", "+", "g"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"9", "+", 
              RowBox[{"2", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"116", "+", 
              RowBox[{"3", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "4"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["k", "6"]}]}], ")"}], " ", "M"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1458", "+", 
           RowBox[{"279", " ", "g"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["g", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"441", "+", 
              RowBox[{"26", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"22", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]}], ")"}]}], "-", 
     RowBox[{"6", " ", 
      SuperscriptBox["k", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"42", "+", "g"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"213", "+", 
              RowBox[{"5", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"396", "+", 
              RowBox[{"13", " ", "g"}]}], ")"}]}], "+", 
           RowBox[{"80", " ", 
            RowBox[{"(", 
             RowBox[{"9", "+", "g"}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"67", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}]}], ")"}], " ", 
      "\[Beta]"}], "-", 
     RowBox[{"72", " ", 
      SuperscriptBox["k", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"g", "+", 
        SuperscriptBox["k", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", "g"}], "+", 
        RowBox[{"23", " ", 
         SuperscriptBox["k", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"24", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{"g", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}], ")"}]}], 
    ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9239135588782215`*^9, 3.923913606939022*^9, 
  3.9239140462521763`*^9, 3.923915518057814*^9, 3.92399707215152*^9, 
  3.923997235988142*^9, 3.923997394633274*^9, 3.923999043794792*^9, 
  3.9302993787709613`*^9, 3.930302414608276*^9, 3.9303027592581177`*^9, 
  3.9303041403587575`*^9, 3.932739710347702*^9, 3.932919499086904*^9, 
  3.9343784201457767`*^9, 3.935918643008793*^9, 3.93601877841833*^9, 
  3.9361622767686176`*^9, 3.9367114761887913`*^9, 3.936713751900242*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"1b01cac2-c2de-4106-a0ac-1e5c3cc13470"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["k", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "288"}], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"11", "+", "g"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"41", "+", 
              RowBox[{"4", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"1176", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"131", "+", "g"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1896", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"412", "+", 
                 RowBox[{"5", " ", "g"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"281", "+", 
              RowBox[{"7", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "4"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["k", "6"]}]}], ")"}], " ", "M"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2700", "+", 
           RowBox[{"456", " ", "g"}], "+", 
           RowBox[{"7", " ", 
            SuperscriptBox["g", "2"]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"159", "+", 
              RowBox[{"8", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"25", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]}], ")"}]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["k", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"37", "+", "g"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"127", "+", 
              RowBox[{"4", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"1008", "+", 
              RowBox[{"37", " ", "g"}]}], ")"}]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"387", "+", 
              RowBox[{"41", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"127", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}]}], ")"}], " ", 
      "\[Beta]"}], "-", 
     RowBox[{"192", " ", 
      SuperscriptBox["k", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"g", "+", 
        SuperscriptBox["k", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "g"}], "+", 
        RowBox[{"13", " ", 
         SuperscriptBox["k", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"24", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
       RowBox[{"16", " ", 
        RowBox[{"(", 
         RowBox[{"g", "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}], ")"}]}], 
    ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9239135588782215`*^9, 3.923913606939022*^9, 
  3.9239140462521763`*^9, 3.923915518057814*^9, 3.92399707215152*^9, 
  3.923997235988142*^9, 3.923997394633274*^9, 3.923999043794792*^9, 
  3.9302993787709613`*^9, 3.930302414608276*^9, 3.9303027592581177`*^9, 
  3.9303041403587575`*^9, 3.932739710347702*^9, 3.932919499086904*^9, 
  3.9343784201457767`*^9, 3.935918643008793*^9, 3.93601877841833*^9, 
  3.9361622767686176`*^9, 3.9367114761887913`*^9, 3.936713776453198*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"f295dec2-7a90-4e25-b5b0-e8d7534bcd79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calculate", " ", "coefficients", " ", "from", " ", "cubic", " ", 
    "interactions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalLambda]1", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
        RowBox[{"N3", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}],
           ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}],
           ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
           "\[Alpha]"}]}], "]"}]}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], "*", 
         RowBox[{"k1", ".", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[CapitalLambda]2", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
        RowBox[{"N3", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k2", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k2", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}],
           ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k2", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}],
           ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], "*", 
             RowBox[{"k2", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
           "\[Alpha]"}]}], "]"}]}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], "*", 
         RowBox[{"k1", ".", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9239136924857006`*^9, 3.9239138086370087`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"79250d2c-18d3-5c43-b1a3-e5ca9571a778"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"g", "+", 
       SuperscriptBox["k", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"6", "+", "g", "+", 
             SuperscriptBox["k", "2"]}], ")"}]}], "-", 
          RowBox[{"7", " ", "M"}]}], ")"}]}], "+", 
       RowBox[{"48", " ", "\[Beta]"}]}], ")"}]}], 
    RowBox[{"72", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9239137877444286`*^9, 3.92391381849164*^9, 
  3.9239972048136253`*^9, 3.9239975143089046`*^9, 3.923999140293495*^9, 
  3.9302994447018175`*^9, 3.932739787932188*^9, 3.932919579869253*^9, 
  3.934378459904524*^9, 3.935918682090674*^9, 3.9360188182625027`*^9, 
  3.9361623896678886`*^9, 3.9367115155741663`*^9, 3.936713782238202*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"adfe0e11-78d1-42e3-b685-22af8c239890"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"g", "+", 
       SuperscriptBox["k", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"6", "+", "g", "+", 
             SuperscriptBox["k", "2"]}], ")"}]}], "-", 
          RowBox[{"7", " ", "M"}]}], ")"}]}], "+", 
       RowBox[{"48", " ", "\[Beta]"}]}], ")"}]}], 
    RowBox[{"72", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9239137877444286`*^9, 3.92391381849164*^9, 
  3.9239972048136253`*^9, 3.9239975143089046`*^9, 3.923999140293495*^9, 
  3.9302994447018175`*^9, 3.932739787932188*^9, 3.932919579869253*^9, 
  3.934378459904524*^9, 3.935918682090674*^9, 3.9360188182625027`*^9, 
  3.9361623896678886`*^9, 3.9367115155741663`*^9, 3.936713859269928*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"780bb4b3-dbd1-4c1c-b96d-128d98ab7e20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"cubic", " ", "coefficients"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"self", "-", 
    RowBox[{"interaction", " ", "term"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"K0", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{
           RowBox[{"2", "*", "\[CapitalGamma]0"}], "+", 
           RowBox[{"2", "*", "\[CapitalGamma]2"}], "+", 
           RowBox[{"3", "*", "\[CapitalLambda]1"}]}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{"M", "\[Rule]", 
           RowBox[{"Mmc", "[", "k", "]"}]}], "}"}]}], "]"}], "/.", 
       RowBox[{"k", "\[Rule]", "kmc"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"cross", "-", 
     RowBox[{"interaction", " ", "term"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"K2", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", "\[CapitalGamma]0"}], "+", 
           RowBox[{"2", "*", "\[CapitalGamma]1"}], "+", 
           RowBox[{"2", "*", "\[CapitalGamma]3"}], "+", 
           RowBox[{"6", "*", "\[CapitalLambda]2"}]}], ")"}], "/.", 
         RowBox[{"M", "->", 
          RowBox[{"Mmc", "[", "k", "]"}]}]}], ")"}], "/.", 
       RowBox[{"k", "->", "kmc"}]}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.923914998041302*^9, 3.923915076684839*^9}, {
   3.923915127965954*^9, 3.9239151800665817`*^9}, {3.923915363371987*^9, 
   3.923915366880919*^9}, {3.923915680874567*^9, 3.923915685234347*^9}, {
   3.923915733228744*^9, 3.9239157338011875`*^9}, {3.923915838160597*^9, 
   3.923915838576464*^9}, {3.923979346867703*^9, 3.923979365489151*^9}, {
   3.923996296721489*^9, 3.9239963036293945`*^9}, {3.9239979349726315`*^9, 
   3.923997938373398*^9}, {3.9239980766657352`*^9, 3.923998085385475*^9}, {
   3.923998228909849*^9, 3.9239982557830315`*^9}, {3.9239983735001183`*^9, 
   3.923998381982479*^9}, 3.923998816121153*^9, {3.936713578460951*^9, 
   3.936713585117049*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"ba8857f9-02cc-9b44-ac99-1f45ad4b5add"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6912"}], " ", 
          SqrtBox["2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "4"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SqrtBox[
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
            "\[Beta]"}]]}], "-", 
         RowBox[{"36", " ", "g", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "3"], " ", 
          "\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"53568", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}], "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3888"}], " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}], "+", 
               RowBox[{"41", " ", 
                SqrtBox["2"], " ", "\[Beta]", " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}], "+", 
               RowBox[{"8", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"216", "+", 
                  RowBox[{"19", " ", "\[Beta]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"32", " ", 
          SuperscriptBox["g", "5"], " ", "\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{"4852224", "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{"834624", "+", 
               RowBox[{"\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{"16632", "+", 
                  RowBox[{"43", " ", "\[Beta]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["g", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "7464960"}], " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}], "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "20736"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "20736"}], "+", 
                  RowBox[{"55", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
               RowBox[{"\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"864", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "49824"}], "+", 
                    RowBox[{"245", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
                  RowBox[{"\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{"1766016", "+", 
                    RowBox[{"6380", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}], "-", 
                    RowBox[{"3", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"752", "+", 
                    RowBox[{"70", " ", "\[Beta]"}], "-", 
                    RowBox[{"3", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"16", " ", 
          SuperscriptBox["g", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4478976", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}], "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"559872", " ", 
                RowBox[{"(", 
                 RowBox[{"816", "+", 
                  RowBox[{"7", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
               RowBox[{"\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"864", " ", 
                   RowBox[{"(", 
                    RowBox[{"171504", "+", 
                    RowBox[{"245", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
                  RowBox[{"\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "48456"}], "-", 
                    RowBox[{"224", " ", "\[Beta]"}], "+", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
                    RowBox[{"84", " ", 
                    RowBox[{"(", 
                    RowBox[{"29808", "+", 
                    RowBox[{"19", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["g", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2985984"}], " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}], "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"746496", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "840"}], "+", 
                  RowBox[{"13", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
               RowBox[{"\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2304", " ", 
                   RowBox[{"(", 
                    RowBox[{"87696", "+", 
                    RowBox[{"545", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
                  RowBox[{"\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "111552"}], "-", 
                    RowBox[{"962", " ", "\[Beta]"}], "+", 
                    RowBox[{"13", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}], "+", 
                    RowBox[{"368", " ", 
                    RowBox[{"(", 
                    RowBox[{"28080", "+", 
                    RowBox[{"41", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{"864", "+", 
         RowBox[{"12", " ", "g"}], "-", 
         RowBox[{"12", " ", "\[Beta]"}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
            "\[Beta]"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "12"}], " ", 
          SuperscriptBox["\[Beta]", "4"]}], "+", 
         RowBox[{"1728", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"(", 
           RowBox[{"216", "+", 
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"27", "+", "g"}], ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{"g", " ", 
            RowBox[{"(", 
             RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
            "\[Beta]"}]]}], "-", 
         RowBox[{
          SuperscriptBox["\[Beta]", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2592"}], "+", 
            RowBox[{"4", " ", "g", " ", 
             RowBox[{"(", 
              RowBox[{"15", "+", "g"}], ")"}]}], "+", 
            RowBox[{"15", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
               "\[Beta]"}]]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"8640", "+", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "126"}], "+", "g"}], ")"}], " ", "g"}], "-", 
               RowBox[{"33", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}]}], ")"}]}], "+", 
            RowBox[{"72", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2592"}], "+", 
               RowBox[{"31", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{"72", " ", "\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"72", " ", 
             RowBox[{"(", 
              RowBox[{"864", "-", 
               RowBox[{"17", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}]}], ")"}]}], "+", 
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4320"}], "+", 
               RowBox[{"24", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"g", " ", 
                  RowBox[{"(", 
                   RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                  "\[Beta]"}]]}], "+", 
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"792", "+", 
                  RowBox[{"12", " ", "g"}], "+", 
                  RowBox[{
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                    "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], ")"}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923915205228157*^9, 3.9239153774421067`*^9, 
  3.923915693190021*^9, 3.923915741396715*^9, 3.923915846101996*^9, 
  3.923997763617279*^9, 3.923998041997032*^9, 3.9239980960911713`*^9, 
  3.9239994031085835`*^9, 3.9302995556170797`*^9, 3.93030292904346*^9, 
  3.9303043863972893`*^9, 3.932739932182802*^9, 3.932919727872486*^9, 
  3.934378537207182*^9, 3.935918758363229*^9, 3.936018894525502*^9, 
  3.936711592435587*^9, 3.9367138667942142`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"9c6e7cbb-fdf1-4020-a3b5-03a13f2f5120"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "g", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Beta]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "60466176"}], " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "10"], " ", 
        SuperscriptBox["\[Beta]", "3"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
          "\[Beta]"}]]}], "+", 
       RowBox[{"64", " ", 
        SuperscriptBox["g", "11"], " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{"2527714477080576", "+", 
          RowBox[{"1028137832939520", " ", "\[Beta]"}], "+", 
          RowBox[{"120437013086208", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          RowBox[{"6502290702336", " ", 
           SuperscriptBox["\[Beta]", "3"]}], "+", 
          RowBox[{"163325859840", " ", 
           SuperscriptBox["\[Beta]", "4"]}], "+", 
          RowBox[{"1715261184", " ", 
           SuperscriptBox["\[Beta]", "5"]}], "+", 
          RowBox[{"6622560", " ", 
           SuperscriptBox["\[Beta]", "6"]}], "+", 
          RowBox[{"7308", " ", 
           SuperscriptBox["\[Beta]", "7"]}], "+", 
          SuperscriptBox["\[Beta]", "8"]}], ")"}]}], "+", 
       RowBox[{"373248", " ", "g", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "9"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"741", " ", 
           SuperscriptBox["\[Beta]", "3"]}], "+", 
          RowBox[{"84240", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "-", 
          RowBox[{"1152", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "621"}], "+", 
             RowBox[{"16", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "63288"}], "+", 
             RowBox[{"281", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"32", " ", 
        SuperscriptBox["g", "10"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "34740"}], " ", 
           SuperscriptBox["\[Beta]", "9"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "10"]}], "+", 
          RowBox[{"2166612408926208", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{"60183678025728", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"10584", "+", 
             RowBox[{"47", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[Beta]", "8"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "11474064"}], "+", 
             RowBox[{"59", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"20961607680", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"113940", "+", 
             RowBox[{"77", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"320246784", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"116424", "+", 
             RowBox[{"83", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"404352", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "788616"}], "+", 
             RowBox[{"427", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"835884417024", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"309384", "+", 
             RowBox[{"665", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"432", " ", 
           SuperscriptBox["\[Beta]", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "18792648"}], "+", 
             RowBox[{"865", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"11609505792", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"3421224", "+", 
             RowBox[{"3731", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"1296", " ", 
        SuperscriptBox["g", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "8"], " ", "\[Beta]",
         " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"128016", " ", 
           SuperscriptBox["\[Beta]", "5"]}], "+", 
          RowBox[{"456855552", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "-", 
          RowBox[{"6912", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"18621", "+", 
             RowBox[{"644", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"373248", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"13824", "+", 
             RowBox[{"1961", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"5184", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"400032", "+", 
             RowBox[{"12257", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7815744"}], "+", 
             RowBox[{"23515", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["g", "9"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "106765"}], " ", 
           SuperscriptBox["\[Beta]", "9"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "10"]}], "+", 
          RowBox[{"12277470317248512", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Beta]", "8"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "68312520"}], "+", 
             RowBox[{"601", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"10030613004288", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"43128", "+", 
             RowBox[{"1349", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"160123392", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"1196784", "+", 
             RowBox[{"1843", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"471744", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3916944"}], "+", 
             RowBox[{"3623", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"1048080384", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"11561328", "+", 
             RowBox[{"17479", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"17414258688", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"7985248", "+", 
             RowBox[{"23933", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"139314069504", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1274544", "+", 
             RowBox[{"25487", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"72", " ", 
           SuperscriptBox["\[Beta]", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "536701536"}], "+", 
             RowBox[{"43487", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"27", " ", 
        SuperscriptBox["g", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16830"}], " ", 
           SuperscriptBox["\[Beta]", "8"]}], "-", 
          RowBox[{"13838530904064", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7730256"}], "+", 
             RowBox[{"325", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"967458816", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"303184", "+", 
             RowBox[{"2293", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"2579890176", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "79920"}], "+", 
             RowBox[{"4087", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"13436928", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"436320", "+", 
             RowBox[{"18311", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "17984304"}], "+", 
             RowBox[{"19495", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"10368", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"218655936", "+", 
             RowBox[{"64003", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"384", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "51290820"}], "+", 
             RowBox[{"210379", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"108", " ", 
        SuperscriptBox["g", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "309038"}], " ", 
           SuperscriptBox["\[Beta]", "7"]}], "-", 
          RowBox[{"162533081088", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{"644972544", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "864"}], "+", 
             RowBox[{
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"8957952", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"860976", "+", 
             RowBox[{"737", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{"1352976", "+", 
             RowBox[{"4409", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"497664", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"2630448", "+", 
             RowBox[{"5989", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"4320", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "13428288"}], "+", 
             RowBox[{"61051", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"24", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"54132624", "+", 
             RowBox[{"379153", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"9", " ", 
        SuperscriptBox["g", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3140646"}], " ", 
           SuperscriptBox["\[Beta]", "8"]}], "-", 
          RowBox[{"416", " ", 
           SuperscriptBox["\[Beta]", "9"]}], "+", 
          RowBox[{"1495397222055936", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "-", 
          RowBox[{"839808", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "157017472"}], "+", 
             RowBox[{"56353", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"34828517376", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"3433824", "+", 
             RowBox[{"63911", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1237212912"}], "+", 
             RowBox[{"80569", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"644972544", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"38768760", "+", 
             RowBox[{"353347", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"4478976", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"108922752", "+", 
             RowBox[{"572069", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"4752", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"1592638560", "+", 
             RowBox[{"1231211", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "686679216"}], "+", 
             RowBox[{"1563115", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["g", "7"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3132", " ", 
           SuperscriptBox["\[Beta]", "9"]}], "-", 
          RowBox[{"3751449263603712", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[Beta]", "8"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "299823"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"139314069504", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"6701940", "+", 
             RowBox[{"87439", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"3869835264", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"93960648", "+", 
             RowBox[{"295901", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1883494836"}], "+", 
             RowBox[{"395963", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"11197440", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"133719804", "+", 
             RowBox[{"786841", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"57024", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"219295836", "+", 
             RowBox[{"2182057", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"144", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2234702736"}], "+", 
             RowBox[{"3364705", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"26873856", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"42677172", "+", 
             RowBox[{"4951153", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["g", "8"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "47624"}], " ", 
           SuperscriptBox["\[Beta]", "9"]}], "+", 
          RowBox[{"4242949300813824", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["\[Beta]", "8"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "20093391"}], "+", 
             RowBox[{"194", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"1253826625536", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"1969128", "+", 
             RowBox[{"7093", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"2751211008", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"4795048", "+", 
             RowBox[{"13167", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"2223936", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"90353448", "+", 
             RowBox[{"253261", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"5804752896", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "184297464"}], "+", 
             RowBox[{"266129", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Beta]", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4138719768"}], "+", 
             RowBox[{"450013", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"2808", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "819138312"}], "+", 
             RowBox[{"1009543", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"80621568", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1046687400", "+", 
             RowBox[{"8456773", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"18", " ", 
        SuperscriptBox["g", "5"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "99169"}], " ", 
           SuperscriptBox["\[Beta]", "8"]}], "+", 
          RowBox[{"179018579312640", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "-", 
          RowBox[{"161243136", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1655820", "+", 
             RowBox[{"587", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "26462664"}], "+", 
             RowBox[{"1601", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"644972544", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3829068"}], "+", 
             RowBox[{"6883", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"3869835264", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"997488", "+", 
             RowBox[{"29587", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"18", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "240229488"}], "+", 
             RowBox[{"780217", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"432", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"2004690960", "+", 
             RowBox[{"7631659", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"15552", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"350915328", "+", 
             RowBox[{"8881283", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "3"], " ", 
     RowBox[{"(", 
      RowBox[{"864", "+", 
       RowBox[{"12", " ", "g"}], "-", 
       RowBox[{"12", " ", "\[Beta]"}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
          "\[Beta]"}]]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", " ", "\[Beta]"}], "+", 
        RowBox[{"6", " ", 
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
           "\[Beta]"}]]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"12", " ", 
         SuperscriptBox["\[Beta]", "4"]}], "-", 
        RowBox[{"1728", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"216", "+", 
           RowBox[{"27", " ", "g"}], "+", 
           SuperscriptBox["g", "2"]}], ")"}], " ", 
         SqrtBox[
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
           "\[Beta]"}]]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2592"}], "+", 
           RowBox[{"60", " ", "g"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["g", "2"]}], "+", 
           RowBox[{"15", " ", 
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{"g", " ", 
              RowBox[{"(", 
               RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
              "\[Beta]"}]]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "8640"}], " ", "g"}], "+", 
           RowBox[{"504", " ", 
            SuperscriptBox["g", "2"]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["g", "3"]}], "+", 
           RowBox[{"33", " ", 
            SqrtBox["2"], " ", "g", " ", 
            SqrtBox[
             RowBox[{"g", " ", 
              RowBox[{"(", 
               RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
              "\[Beta]"}]]}], "+", 
           RowBox[{"72", " ", 
            RowBox[{"(", 
             RowBox[{"2592", "-", 
              RowBox[{"31", " ", 
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"g", " ", 
                 RowBox[{"(", 
                  RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                 "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"72", " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12", " ", 
            SuperscriptBox["g", "3"]}], "+", 
           RowBox[{"72", " ", 
            RowBox[{"(", 
             RowBox[{"864", "-", 
              RowBox[{"17", " ", 
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"g", " ", 
                 RowBox[{"(", 
                  RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                 "\[Beta]"}]]}]}], ")"}]}], "+", 
           RowBox[{"24", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "180"}], "+", 
              RowBox[{
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"g", " ", 
                 RowBox[{"(", 
                  RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                 "\[Beta]"}]]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["g", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"792", "+", 
              RowBox[{
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"g", " ", 
                 RowBox[{"(", 
                  RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                 "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}], "3"]}], 
    ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923915205228157*^9, 3.9239153774421067`*^9, 
  3.923915693190021*^9, 3.923915741396715*^9, 3.923915846101996*^9, 
  3.923997763617279*^9, 3.923998041997032*^9, 3.9239980960911713`*^9, 
  3.9239994031085835`*^9, 3.9302995556170797`*^9, 3.93030292904346*^9, 
  3.9303043863972893`*^9, 3.932739932182802*^9, 3.932919727872486*^9, 
  3.934378537207182*^9, 3.935918758363229*^9, 3.936018894525502*^9, 
  3.936711592435587*^9, 3.936713877655651*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"3989867c-0607-42e4-9ff6-9003b131e431"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"write", " ", "mathematica", " ", "for", " ", "N"}], ",", " ", 
    RowBox[{
     SubscriptBox["K", "0"], " ", "and", " ", 
     SubscriptBox["K", "2"], " ", "to", " ", "file"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", 
         "\"\<quadratic-coeff-hex.txt\>\""}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ncal", "/.", 
        RowBox[{"\[Beta]", "->", "b"}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", 
         "\"\<Self-cubic-coeffs-hex.txt\>\""}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"K0", "/.", 
        RowBox[{"\[Beta]", "->", "b"}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", 
         "\"\<cross-cubic-coeffs-hex.txt\>\""}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"K2", "/.", 
        RowBox[{"\[Beta]", "->", "b"}]}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9239158696785736`*^9, 3.923915880044721*^9}, {
   3.923915937053446*^9, 3.923915969921614*^9}, {3.923916292659977*^9, 
   3.923916311659046*^9}, 3.923916393652426*^9, {3.923916434145052*^9, 
   3.923916497679348*^9}, {3.9240003616505127`*^9, 3.924000373170864*^9}, {
   3.9240010281833267`*^9, 3.924001042157778*^9}, {3.932743897461281*^9, 
   3.93274390837558*^9}, {3.936713592418412*^9, 3.9367136006634827`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"977b4283-f49b-674c-ae45-238f620febe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots of hexagonal coefficients on {N=0}", "Section",
 CellChangeTimes->{{3.930908481295513*^9, 
  3.9309085047645783`*^9}},ExpressionUUID->"bd84672c-ae67-42ff-b850-\
4b6f041e4473"],

Cell["\<\
We now analyse the coefficients of the reduced system on the hexagonal \
lattice. To find the relevant dynamics, we have to restrict the parameter \
space to a neighborhood of {N=0}. Therefore, we start by deriving a \
parametric representation of the set {N=0}, that is, we find a function \
\[Beta](g) s.t. N(g,\[Beta](g)) = 0. Then, we plot the other parameters on \
this parameterised curve.\
\>", "Text",
 CellChangeTimes->{{3.93090851342515*^9, 
  3.930908676035039*^9}},ExpressionUUID->"61532387-f42a-46a3-885b-\
82017ce9b890"],

Cell[CellGroupData[{

Cell["Parameterisation of {N=0}", "Subsection",
 CellChangeTimes->{{3.9309088123874702`*^9, 
  3.9309088252788196`*^9}},ExpressionUUID->"1d79fa19-0843-42cc-9c3b-\
46036a3d7a04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Calculate", " ", "tildeN"}], ",", " ", 
    RowBox[{
    "the", " ", "quadratic", " ", "coefficient", " ", "without", " ", 
     "inserting", " ", "the", " ", "critical", " ", "wave", " ", "number"}]}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"tildeN", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
       RowBox[{"N2", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k1", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k2", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k2", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
          "\[Alpha]"}]}], "]"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", 
        RowBox[{"k3", ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "/.", 
     RowBox[{"M", "->", 
      RowBox[{"Mmc", "[", "k", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9327402944494267`*^9, 3.9327403115180264`*^9}, {
   3.932740353997034*^9, 3.9327403678699207`*^9}, {3.9327404210568237`*^9, 
   3.932740421950533*^9}, {3.9327405648288956`*^9, 3.932740568161892*^9}, 
   3.932740754357874*^9, {3.93274080431065*^9, 3.932740809709944*^9}, {
   3.9327408425545406`*^9, 3.9327408529499187`*^9}, {3.9327410377765465`*^9, 
   3.9327411689163246`*^9}, 3.9327412753273087`*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"733c0e2f-ee0e-434e-b534-db1f5d9f26ed"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    SuperscriptBox["k", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"g", "+", 
      SuperscriptBox["k", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "18"}], "+", "g", "+", 
         SuperscriptBox["k", "2"]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{"12", "+", "g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"216", "+", 
       RowBox[{"27", " ", "g"}], "+", 
       SuperscriptBox["g", "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"27", "+", 
          RowBox[{"2", " ", "g"}]}], ")"}], " ", 
        SuperscriptBox["k", "2"]}], "+", 
       SuperscriptBox["k", "4"]}], ")"}]}], "+", 
    RowBox[{"432", " ", "\[Beta]"}], "-", 
    RowBox[{"90", " ", 
     RowBox[{"(", 
      RowBox[{"g", "+", 
       SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}]], 
  "}"}]], "Output",
 CellChangeTimes->{3.932741285369089*^9, 3.932919755736887*^9, 
  3.934378548214555*^9, 3.935918769251712*^9, 3.936018908578977*^9, 
  3.936711605952593*^9, 3.936713878489694*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"a893b61f-07c8-4bb0-9dfa-8e1166dee68c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "this", " ", "agrees", " ", "with", " ", "the", 
    " ", "expression", " ", "in", " ", "Shklyaev", " ", 
    RowBox[{"et", ".", " ", "al", ".", " ", "2012"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "18"}], "+", "g", "+", 
       SuperscriptBox["k", "2"]}], ")"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"12", "+", "g", "+", 
       SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"k", "^", "2"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", "\[Beta]"}], "+", 
         RowBox[{"2", "*", 
          RowBox[{"k", "^", "2"}]}]}], ")"}]}], "+", 
      RowBox[{"36", "*", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "-", 
         RowBox[{"k", "^", "2"}]}], ")"}]}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9327402944494267`*^9, 3.9327403115180264`*^9}, {
   3.932740353997034*^9, 3.9327403678699207`*^9}, {3.9327404210568237`*^9, 
   3.932740421950533*^9}, {3.9327405648288956`*^9, 3.932740568161892*^9}, 
   3.932740754357874*^9, {3.93274080431065*^9, 3.932740809709944*^9}, {
   3.9327408425545406`*^9, 3.9327408529499187`*^9}, {3.9327410377765465`*^9, 
   3.9327411689163246`*^9}, {3.9327412753273087`*^9, 3.9327412913243046`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"70744bec-e976-cb4e-9a9a-def5bf008c7b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9327411832939186`*^9, 3.9327412931228504`*^9, 
  3.93291975577343*^9, 3.934378548218152*^9, 3.935918769255385*^9, 
  3.936018908643711*^9, 3.9367116059957438`*^9, 3.936713878492806*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"8f1ea981-7f0a-4a17-ae4e-93fc0e03d1be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "solve", " ", "condition", " ", "for", " ", "\[Beta]", " ", "to", " ", 
    "obtain", " ", "a", " ", "function", " ", "\[Beta]", 
    RowBox[{"(", "g", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"NOTE", ":", " ", 
     RowBox[{
     "curve", " ", "is", " ", "the", " ", "only", " ", "solution", " ", "in", 
      " ", "a", " ", "relevant", " ", "parameter", " ", "regime"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
     "but", " ", "is", " ", "only", " ", "valid", " ", "for", " ", "0"}], " ",
      "<=", " ", "g", " ", "<=", " ", "18"}], ",", " ", 
    RowBox[{
     RowBox[{"at", " ", "g"}], "=", "18"}], ",", " ", 
    RowBox[{
    "the", " ", "curve", " ", "vanishes", " ", "and", " ", "becomes", " ", 
     "invalid"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"curve", "=", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "18"}], "+", "g", "+", 
              SuperscriptBox["k", "2"]}], ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"12", "+", "g", "+", 
              SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], "==", 
          "0"}], "/.", 
         RowBox[{"k", "->", "kmc"}]}], ",", "\[Beta]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"calculate", " ", "roots", " ", "of", " ", "curve"}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Beta]", "/.", "curve"}], ")"}], "==", "0"}], ",", "g"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "plot", " ", "parameter", " ", "curve", " ", "on", " ", "which", " ", 
      "N"}], "=", 
     RowBox[{
      RowBox[{"0", " ", "for", " ", "0"}], " ", "<", " ", "g", " ", "<", " ", 
      "18"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"\[Beta]", "/.", "curve"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "0", ",", "18"}], "}"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"g", ",", "\[Beta]"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9327402944494267`*^9, 3.9327403115180264`*^9}, {
   3.932740353997034*^9, 3.9327403678699207`*^9}, {3.9327404210568237`*^9, 
   3.932740421950533*^9}, {3.9327405648288956`*^9, 3.932740568161892*^9}, 
   3.932740754357874*^9, {3.93274080431065*^9, 3.932740809709944*^9}, {
   3.9327408425545406`*^9, 3.9327408529499187`*^9}, {3.9327410377765465`*^9, 
   3.9327411689163246`*^9}, {3.9327413023650894`*^9, 
   3.9327414524760647`*^9}, {3.9327414834788284`*^9, 3.932741491961548*^9}, 
   3.932741529978092*^9, {3.9327417036940765`*^9, 3.932741719743454*^9}, {
   3.9327417639858875`*^9, 3.932741887271517*^9}, {3.93274195558745*^9, 
   3.932741964803936*^9}, {3.932918923289686*^9, 3.932919002742079*^9}, {
   3.9329191511821938`*^9, 3.932919179997898*^9}, {3.9329210706860027`*^9, 
   3.9329211695967865`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"b60096f8-3c36-2c44-80c1-107afbc567fc"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nongen", 
   "\"There may be values of the parameters for which some or all solutions \
are not valid.\"", 2, 120, 2, 30605549823450529030, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.932741967503477*^9, 3.932919755869417*^9, {3.932921075583217*^9, 
   3.93292110117515*^9}, {3.9329211489034867`*^9, 3.932921170173956*^9}, 
   3.9343785482813473`*^9, 3.935918769317083*^9, 3.936018908727008*^9, 
   3.936711606055881*^9, 3.936713878527903*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"0b045c86-e051-48d7-95a8-1a1af2a57c50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Beta]", "\[Rule]", 
   FractionBox[
    RowBox[{"216", "+", 
     RowBox[{"87", " ", "g"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["g", "2"]}], "-", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"4", " ", "g"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"72", "+", 
          RowBox[{"11", " ", "g"}]}], ")"}], "2"]}]]}], 
    RowBox[{"6", "+", 
     RowBox[{"3", " ", "g"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9327419675654907`*^9, 3.932919755934263*^9, {3.932921075636135*^9, 
   3.932921101230276*^9}, {3.932921148964731*^9, 3.932921170240587*^9}, 
   3.93437854830686*^9, 3.935918769342321*^9, 3.936018908749036*^9, 
   3.936711606080826*^9, 3.9367138785542088`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"617930f2-acff-4c29-9750-e3b128cfcaca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", "\[Rule]", "18"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9327419675654907`*^9, 3.932919755934263*^9, {3.932921075636135*^9, 
   3.932921101230276*^9}, {3.932921148964731*^9, 3.932921170240587*^9}, 
   3.93437854830686*^9, 3.935918769342321*^9, 3.936018908749036*^9, 
   3.936711606080826*^9, 3.936713878556315*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"73278366-61bb-408d-af65-8e37d655b0c3"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 18}, {-3.789561326991388*^-15, 
             0.9219698510659107}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 18}, {-3.789561326991388*^-15, 
            0.9219698510659107}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 18}, {-3.789561326991388*^-15, 
         0.9219698510659107}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      TagBox["g", HoldForm], HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Beta]", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 18}, {-3.789561326991388*^-15, 0.9219698510659107}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9327419675654907`*^9, 3.932919755934263*^9, {3.932921075636135*^9, 
   3.932921101230276*^9}, {3.932921148964731*^9, 3.932921170240587*^9}, 
   3.93437854830686*^9, 3.935918769342321*^9, 3.936018908749036*^9, 
   3.936711606080826*^9, 3.936713878582815*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"1797f976-d5e6-41b4-99df-f7486a644168"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots of parameters on {N=0}", "Subsection",
 CellChangeTimes->{{3.9309087906012745`*^9, 
  3.930908801784916*^9}},ExpressionUUID->"1101f7f3-e31a-4ed7-ad5f-\
f886f6579073"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "plot", " ", "coefficients", " ", "on", " ", "the", " ", "parameter", " ",
      "line", " ", "N", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", ",", "g"}], ")"}]}], "=", "0"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"K0", "/.", "curve"}], ",", 
        "\"\<\!\(\*SubscriptBox[\(K\), \(0\)]\)\>\""}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"K2", "/.", "curve"}], ",", 
        "\"\<\!\(\*SubscriptBox[\(K\), \(2\)]\)\>\""}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "0", ",", "18"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.930299114373475*^9, 3.9302992695958624`*^9}, {
   3.9303005192389164`*^9, 3.930300610065646*^9}, 3.9303006502853055`*^9, {
   3.9303006831645813`*^9, 3.9303006976717124`*^9}, 3.9303007361161785`*^9, {
   3.930300875711791*^9, 3.9303009075998554`*^9}, {3.9303010494096317`*^9, 
   3.930301049934453*^9}, {3.930301129519154*^9, 3.93030113248831*^9}, {
   3.9303048364607105`*^9, 3.9303048977676373`*^9}, {3.9303051341661077`*^9, 
   3.9303051525617666`*^9}, {3.9303072956406994`*^9, 3.930307380467716*^9}, {
   3.9303074364697437`*^9, 3.9303074369953923`*^9}, {3.9303074672735925`*^9, 
   3.930307472357189*^9}, {3.9303075305950975`*^9, 3.9303075420627813`*^9}, {
   3.9303076523573675`*^9, 3.9303076555063343`*^9}, {3.9303077032789555`*^9, 
   3.9303077399699683`*^9}, {3.930307776387561*^9, 3.9303077791256037`*^9}, {
   3.9303078337326126`*^9, 3.930307847434197*^9}, {3.930307940407546*^9, 
   3.930307944389902*^9}, {3.930307991732686*^9, 3.930308033532941*^9}, {
   3.930308100276325*^9, 3.930308112268521*^9}, {3.9303082028493404`*^9, 
   3.9303082040490346`*^9}, {3.930308280454731*^9, 3.930308280651473*^9}, {
   3.930308321526743*^9, 3.930308329959719*^9}, {3.9303085372789173`*^9, 
   3.930308571646802*^9}, {3.930369573888069*^9, 3.930369574028947*^9}, {
   3.9303698382065945`*^9, 3.930369838528488*^9}, {3.9303726726846485`*^9, 
   3.930372673028226*^9}, {3.9303826283077555`*^9, 3.9303826420613947`*^9}, {
   3.930388469313979*^9, 3.9303884795050063`*^9}, {3.9309089767543364`*^9, 
   3.9309089847184668`*^9}, {3.9327402878776073`*^9, 
   3.9327403091586456`*^9}, {3.9327421462429523`*^9, 3.9327421892021046`*^9}, 
   3.9327422337856007`*^9, {3.93274232369742*^9, 3.932742347539049*^9}, {
   3.932742378718212*^9, 3.9327425157016926`*^9}, {3.932742737906248*^9, 
   3.9327427435733776`*^9}, {3.9329190239050064`*^9, 
   3.9329190240346203`*^9}, {3.936713610329282*^9, 3.936713615149847*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"4e552f16-3e07-4cff-81cf-662050d6b8a4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], Opacity[
       1.], LineBox[CompressedData["
1:eJwV1nc4le8bAHARyeYMO0RmxpGMxH1nJStF2gglEtLOyEqFjEgJZZSdHco6
ijQoUVFChKiQr3Gccxq/9/fXe32u53quZ9zjeRU8AnYe5uTg4NBbwcHx/+/C
iXU/l/NvmV67KesZvFPNxCtO1lU66wwMv7ds/GQ9bipZrSHyPTMGGorksrLN
uAEd7xnmLSZBt+F7dYMxcVh4puvzNjMN1u7eOF6lvw4KTVrT/5lngvX6/u/S
CTqg9UllPG0xG75+7g4x6jaAK5SAP5ov8uCGb++MjQ7CiGMtpT0zH+IWBCX4
5CxhU/wfzQOBRUBJNIp6VW0DqR0WVvPmpfCqgizJcdYRZjjjXWPFy8GzRS0w
fsIJlO76NCQtVsA365EV5oW74e3ma1sPuFVBaT/Xt4GG/RD2qaJX5UU1PJW3
jbss4g79lOUfzZm18F0nuT151gsuVUufi+Wph1OkVwKPM7xBdwesdAl8BDb7
dJ6uCfSF+PgYmWnzRrjttUMgxjoQjNSLC+sfNMG7Rr/Z+zMnYKKjSy9avAXI
qtG0jMKTkB0Rm39tkQ7a5V8KGnefhTOOmX4ni1vBeXOzXpvdebCXK9Pd6/YE
Egq4e3bvCgZW49tmpRdPYeMrh9yP2RfBaVmiryHzGXiJKwblJEaDeod6Vs6O
DjAb4jZ06rsEHGmbPS/zPIeXt7opEaqXoXSD++zOwBewc4FvQuPbVeAJKFj1
3bwT1Mdqe+vfJcJnk0ddb5Y7gc9iv15edRJUC7xKefigC4oDo6sjI5LBvXhG
LkL8DVyQMOJnqqfA4H9SMvGL3RDOaxMKNWlg/Unx39/tb4E8qez0POcm1LSu
Hz1R/BZcjx7Rb0u5BbFJpoW73XrgnM/sZs5Lt8FAy0NP8UUvOOS/ahDLvAPJ
PkV2jzM/gOpRKxntzjwQCsz7+PzvB5DYJvHwWNA9iD+TdaTPvQ8ulke3SUjf
hytRyeELSv1w87SnTP3JfAjPOl+j9eAjeIq3najdUgT+b7fJ5DV9hpmekgEe
h3L42WdeVCk3CLlCa3NmBCrAd8hEnx4xCNY5miXMkxVw5AfNcdByCPbovVTx
sayEg9xS0eKvh0Hx8WuOqMUqyJdZXLQMGIHSGz/07a7Wwrhc0Gb77BH4/loq
J5SjDpQUZyOd347AgxGhs7Xn6iBXbUrYc8MonOa+6mDoVw9Z+oNq4YxR6G8T
F9rp9hhSHdsPPr44Bi6LBy5cPdUMUdE32rWSvkHkz2NThoVPwe/sXdulpm8Q
MSz8dmD6Kbj4Fr1t+vEN0t8YxH3e0Abqjk2Ddlsnoe7pEN8ivQ26pccXff9O
wtMBddsTw+2wplpPucDvOySGuf4W1nwO9SO9MXLbpqH7P9WDj3i64KzcaiXe
iDmIS6xJiSHiYCMtcGSzLAO0TZSWAhyGwYpXYavGhj9wqrKwKsNpAuwXpwSS
A1fgPbtvwyMxP0HArbPdJ3olavNbLdz2mwMpCVEYu7oKd02/SeqkLcDUkY+G
6jdWIYe4qK2n8QLUP8zRDcxehfYF39UXLBbAxUlX+XftKlxqV3BYuWcBkhOc
BMljq7CfbNsxGLoAvNxpA+amvGgSxdUa9HwBGHNS5/L+40WRYWk5kb2L8O6V
UqXHfj4cj+U+fsV7CS6ZashnevOhYFnDPwhcAv1KWuL7k3yYAb7zs+eWID3N
9Lh1PB9Oy/cvGMYugeuhPWpaTXx4uLlSMaB0CSaX4nKYa/gxvOyGt+/sEvxW
mE9OGuXHIzUmNYkBDHiQyuR4OcOPVve3FWw/ywDXVRyBXGx+jFK1fbLqIgNa
fwo4nCEJoEVCv697AgNi6pT5DlgI4LurKh7VpQwQsd8XqZIvgL6FGUND3xig
eK41qNlHED+t02VY7FmGZuWSOZXTgji49h/3Dddl2Pc+NTA5XBC942oVh7yW
4bruUX+vm4LIJC1c3X9iGTinhXz52gWxWo+9wBm7DKOHDhxykRfCLs35n1yP
lyHblrF95oMQyhV7+3eSmbCZ9eX17lEhjEzOrjGRYkJ/4Uv71mkh7AgtWVEo
xwQRnju2qSuF0cBJvcJbnQnhdIutm3SF8ZSTjlsKMMFt43XTmGvC2CgfS8o8
yoTExDSq8FoRPB2/ae7kQyaEaMRLFqiIoID+D+fZR0w42hEhA5oi+Ef3Cp9X
MxPM/vmtDTAUwV1cS35GHUxY8DfXeuMgggEZxpKp/UzY4/DLMjFYBP3lK/1W
s5iwVtDmtPB7EdRq2nCMYcACoSI4V/BJBId+1U1nGbOAbbExGL6I4MGbe3pM
gAXvQuQjAn6IYFV2UpuPFQtifi7Fv1khihjQ5BbkzIIfr/LuJWqJYo75b6Gt
ASyoif3TK3xFFLNYwcVc2Sy4bng9WSFBFCMaDOUpeSwInFDeviFVFAuNYWpN
Pgs0zBxfumSLov329vPSpSzIZebSs+pF0fpQ2MP6OhYkHbV+oDElilsWE+9H
d7HAnzroazIrirLveYalu1lg13ZCdfuiKP7lsLhY0sOCVfIZeUErxFDczpRZ
3ceCsL7p9EeSYjhhMMbwGWGBn1VKzFYbMSx/DnbH5llgs6BisddRDMfsSpKv
LrJANbdxxTEXMRRLCXPKZrDg65/xkAQPMVy2XL2zjs2CfQ8NT76/IIZT490e
cVxsMPTs0vkWLobF/QnVx7nZQBX1mFmOEcMzYybx1qvY8NYvzkcmRQy95nYN
fONjg7XSkJtniRiOr5OV6hJlg3JPkOzpSjGseMrz7iSJDSvDVw3E1InhBqMB
BRKFDS0DOi7FT8Xw8JZDF40l2KCfEmU3NyCGvF+4jm9YwwbyFgk+rlExFOnc
N3dHjg1zM6Ud5EkxvCL1j8KlwIZSmw9mhgti6FkYZvVQkQ2KnGpGFwVI2PXk
XWCrKhuW7Mv/qoqR8NdxJmtQjQ0v0ze29YiTUDPijtKCOhsCaWbblRVJ+Ey4
fL+gJhsa3fcf7jIixpVWh83rsCGxdET9LJDwR7e12iCNDR7L3r/kLUk47lEW
RtdlA2/SqeBTjiSUtN+heUqPDc4t15KlvUl4o4DRkmjABhV+8u52PxI+GHMf
tTJkA8vltkxAEAlfH37/iEE4eya/4EkoCfd+9LpmtYkNJzdpHveLIiHnUYv4
McJWMdW61Ksk1PGvtwwxZsO0LL3JJ5WE84xf07c2s4HuYxVFuk1C7k0Rw7Im
bEh92GnddJeEcX4myZmEN9l/7BUpIeHHrE+bLpuyQTDdLf1xBQlHDBI2zhP+
Mjbu6lVLwogFsaU9wIaYkP+m6lpJWKtp+loU2bD3+bnyQx0kpA82TXoRXk/+
d4q/i4TPya2vKwn/c7u06WEPCY8eq41YJtxTws/h1k9CJXNBLqMtbLjPSG7n
HSLhl7aNzicJnzOXiKv6SkKLwewzBYRtE+84HpgioZUx/dh7wmsGlKg8syQs
2s6z8Q/hOeWSgfIF4n63TfSuMWNDWxAtZy+LhCvE3m3bRPhmc90RLg4yxjla
3NpO2JfPdP0DbjL+9SiluxI2cWmbc+Eno4VrZJs3YZFcmzoOUTJm85vc9yU8
Nt0dUkwl44NvTl7/H68z2m3mLEPGCDng+v/82EuDq/4qkLE+4WyUA2HXt55d
BSpk9G0+M2FImCb7/foOTTIWj9ZqyhJe6RO4h61LRtX+qn1sYv99NUuy9w3J
mKw44d9LuJgj9KuDKRnLZzqP3SccasdVtGxOxsc8YztPEHa8ddU/dxsZd3wq
XGdAWHFMWM9uOxnfnUsfXyLud0k7jbnoTMbQBL3UCsIvgmVa7u4jo78XU/f/
8cnsyI3e5k7GrUPeT/8fvwCSms38YTLmnuXY+oiIr5lbuXDWMTL+M7No2Ud4
cqnh9q8zZNTMfZcSR+RDqfOIFDmUjDy/xAxFCQdW8WQYRJFx2jn4RSKRT8zj
OzLCEsmo1xjVcJbIv+ZXZ6Rzb5Cxy5ZTfoTIz0i1zIz2DDL+5D563pww3/hE
hkAhGV/LlYnNG7HhtZmAjE4ZGWc+BLkg4evZtEynGmK9w9/SYoh6kD4Qknmb
Tsaq7RWUv/pEvvWKZql+JOPOh7e2pG9gwy8dA1m7YTJuvF2WU0bUX03CgayA
cTIGzK0TaiLq08SmIKt2joyejbLkdm02OLRuvmPBR0Hn9an8kRpsEJPzWHNU
hIIydBKPO1H/H0Iu34mjUlDAq0vGgOgPboY9d3rWUpCnYTy/W5k4f7n3XXdj
CnZ+uny4kug3eoLX5KK3UNDCsfL8Hnk2LPtW3S3YSsEPPcKPl4l+FaH85+6M
EwWLm4M6lGSI82Vdzw7xo6BkuoS9BpXYb1xTzq0sCp6bjO+Y5yXqYWpUoTGP
gkp/HyZpEf1081be3OEiCkr3uuV7EP22ndMpV7mWgrEju1pqVxD7PT+ZW/Oa
gpMvmr8IsVjA8Cbd6/5HQfFWqeLwKaJ/xz7y7uOmIrn94/n931jQWOqmMcRP
Ra3PZfPa4yyInCup+iFORUmRA9PtX4j3MdiilUeHijprSNr5xHuilHB6aLM7
Fc36Be4atbHgcoV0rvkRKuaorGOWt7Lge0/rYRs/Kn7p9pWRb2FBhbjQ9O5z
VFzJsn42/YgFxjn57KAkKv7rGxk0LWfBzpo+iSI6FQc+urx9dIsFDz+Efi5/
RsWP0QaFXTdYIMFUzK7tpKKB8gXvgessGDIJVGnrpyKX40L+WDwLfDp49Yd/
UfGu/xH3snAWhH8ycqIoiON+txtB8t4sKOPIvBYRIY4BQ45N8dos4GndsFf+
sjj2u4mOy69ngWvEK6WWeHG0T49YKldlgTAnu+H3TXH0j2z93KxAvNdc+76f
LRPHRcGfo3dJLKDxSGz1HxBHx6zf+oFLTKjhT+XYv1EC99fYcOyqZ4JAp0Yn
c5MEhjl0+W6rYYJX/NObt1AC7xhZzxlWMIEiOK/1wVYCvzsd2bO6kAlnhHYe
3OEhgf6MhccBN5lgKCryeGuiBBpLOmg5n2ZCAzX+pN6UBA56Y0mMJhNWTj1h
2s1KoFPyo2chqkxwaGBePLwogV+3ft5/XJEJX9y849NWSKKL9CLLRJIJPEVm
95clJVFdeot51komOBozPzTaSGJfW2zlrk/LMOF2ZJNlqSTeeBaa2RCxDGJF
uMIlQAqDq/Yod9AZsEPSJ5HntBTqq36L6nvMgKSrybJ1F6RQ8MbX4K81DBD0
HTWSiJFC3r+6W2YKGcCrER30KVMKd0iesH2TxIA/pR1fXV9K4YYY33K6GwMm
Kxyeea+Txtd3g9WPsZagpf5A3PkBaeyX/O1GU1yCOguTJv4jsui0LjXGVor4
n192eOM/tQbJLZoqb/rm4D55bMZHTR5HblYXaPPPguUPzpdO0/KoH7nB3SNt
CpLCd+WZ3lPA/v0Vqy8qjEFZEf1n8u61uEN6jar/3Gf4T0QoVkZKEYWjUKR9
VTeM6CeuK3yjiDNtxUppoSWwePs/8rFUJTy0f2WUfWR7y+B1/1Npu9ahxvON
D/u0P7YEbFvT82S1MjrYmx5yvfy1RcW0Ikq5Sxn96zfZqW/50RI7d3pDXJQK
FjGOPXPZOddCN3R22qOvileDflZycS+2yDSTOw4sq2KB4xnSaRlmiyLnaiOP
B2oYvNtL3vLf75bt0cN/75xQxx+aa8+U5XHQldunnnxW1UBmcGKfbAknvTtd
gBH5WQN1FNmcQuUr6dmlohfd767Hc2/lA/LHeejSYTbcsEsTX485ucX+5qU3
XDs87CylhT4TMnb7rPjp2rR0td4BLVTnV+5ziBOkO6RwBO1M0kb2QGmlRJkw
/YXkussr1XXwntP0OsYKUfqWF57O7pd0MDn9aYa+tBg970nZ3l9DOhjNGBv9
qEOiiw9855VBGgop7tSRcCfTR3rQ4PltGpakzKf1h1Domaq21IOZNGzr9urt
jaDQ94TtWpzLouGSlaHOmxgKvVvNt1o6h4ZnzcdtniVR6M3hKdoBBTT0fXmC
q/YehX5ba0KFWkPDS016FzI6KXSn2DgJry4atvLNWobJUOlCX24wll8T8yWX
wkIVqPSXG7M/XOum4f35g30hylS62UhNal0vDS+upE0E61DpOoZDIvyfaKgS
wRscbEGlC0zorK6aoGGqS9GFcD8q/bmx8aTVJA37XpDzI05Q6VHJlh0DU8R5
Tnr9ijxDpbM277vEPU3DbvnrI5fCqfTJlKgVe+dpaMm7feO1VCr93tS1L9ML
NFx4z707MZ1Kd4NbLZFLNDzd6Hkz+Q6V/uF7aWgpk4YJoksn0wqp9OtYd2AL
m4ZXbKVF0h9Q6Q5prcYfftOQ2ffiZUYVlc7385XUsb80zC1l5N2po9JHFUMa
fvyjYcTB2VOHGqn0/wEQlPjy
        "]]},
      Annotation[#, {{Labeled}, Charting`Private`Tag, {1}}]& ],
     Annotation[#, "Charting`Private`Tag#1"]& ], 
    TagBox[
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], Opacity[
       1.], LineBox[CompressedData["
1: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
DwsyS43mVODkPIdBkDlGi1/ay06aq4JL6uqyZg+MthnJsTWzUoWfKzQ04k5g
dLyFeJ7bIVXw2ftX2NITowVZo45RR1ThxhszRqsXRq/rDaf7TqiCRTd7SIMv
Rq/Y2XghMEgVFHdtVU8/i9Hf2a0mqgpUwYZhwvgegNGF4S49B8WY0DDwyZyK
x2gD24g2G0kmpB5IrbROwOgWRkGjgwwTfqpNZ00iT1RylnlgTAg+KtumcAej
Gcsz0wPVmMDICHoQkIzOd3rCJ28vExr/3OFReIDRp+wvrxS4wISZ2OM6i08w
ejkzfUH0EhO+NY3pXH+K0VF/G2ak/ZlQP9SWw5uJ0ZkJssMbg5nApdH9RzoL
o782ldfqxjChSyTur+ZzjDY14L7t95QJB/6tbN6fi9EsIkG5qZMJa396l/MW
ovjXvcEedjNByUfqwBVk8OiSO9PHBLav2nY/kY0fS0uJf2NClsMHnpq3GO0r
+YjfaYIJBiYi1OVijM7nyp2f4GTBuUqOgw0lGL29v6aWX4MFFh/u7xN6j9EV
l8c+fN3CgqmZY/dPIxtJ8r7P38aCY5M3/2tBdrAyK7XZwYKEWPaq2CqMvlrX
nv/AkAUd8kcy11Sj998Mpqg5sSC+KjqtvxajD8Sw+ZpGsWDvHIfV5iaMrn/t
Y3gkhgWG1Uf3hiMb9/Zj3nEs+FTyNusrsqlqeWd4EgsIR+3K6GaMtqi8oVeV
zoLNlyP0Bj5htP08vyiUsCDwsKyXTxtG924InDxQxoJdDwO8aWRHg+lau0oW
mCU39vO0Y7TzrdarF2rReRlqYk+Qj7KSRvPbWfD2zXxTewdGezsp0KoTLEjR
dfaT+ozR4zfiErWnWVC64BrgjOybzXFq3ywLPNearHyCfHJhWPnYPxZMzrVb
berG6Lf7WveYsuOgMJ5vSPZgND1wJzecDwenEnt77T6MrhJVCF7JwIHfvYBZ
/RWjgwRsZnw24tCjnTE0j7xrXaRLjwoO5490KqgMoPdX/tF9w8IhQZCNEYr8
6mcNm/dmHLg9dlvrDmL04/KT5zsBB6FHOWZJ39D/0RnDBjtxMIpJ3FGOLFvY
bZWviwM9Qef8QL6bbaAZrY9DYOZ7KZ0hjI67IzGlb4jD+gclki3I13zKTuRY
4sAqMSj4NYzROz3+dElb43DKgaedbwSj2dyYhuE2OBQa8V1SQ75oG884aodD
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
        "]]},
      Annotation[#, {{Labeled}, Charting`Private`Tag, {2}}]& ],
     Annotation[#, "Charting`Private`Tag#2"]& ]}, {{{}, {GraphicsGroupBox[{
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{19., 11.000000000000004`}, {18.375, -5.683963956441432}], 
           Offset[{19., -10.999999999999996`}, {18.375, -5.683963956441432}], 
           Offset[{1.7763568394002505`*^-15, -11.}, {
            18.375, -5.683963956441432}], 
           Offset[{-1.7763568394002505`*^-15, 11.}, {
            18.375, -5.683963956441432}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(0\\)]\\)\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{9.5, 2.1094237467877974*^-15}, {18.375, -5.683963956441432}],
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{19., 11.000000000000004`}, {18.375, -11.174432081316592`}], 
           Offset[{19., -10.999999999999996`}, {
            18.375, -11.174432081316592`}], 
           Offset[{1.7763568394002505`*^-15, -11.}, {
            18.375, -11.174432081316592`}], 
           Offset[{-1.7763568394002505`*^-15, 11.}, {
            18.375, -11.174432081316592`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(2\\)]\\)\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{9.5, 2.1094237467877974*^-15}, \
{18.375, -11.174432081316592}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 43}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 18}, {-11.465633833212609`, 1.703714986288766}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9327422361278553`*^9, {3.932742391081892*^9, 3.932742421999365*^9}, {
   3.9327424789931526`*^9, 3.932742516957531*^9}, {3.9327427395562153`*^9, 
   3.9327427443757477`*^9}, 3.9329197569862328`*^9, 3.934378548777301*^9, 
   3.935918769848428*^9, 3.936018909378295*^9, 3.936711606613536*^9, 
   3.936713878854392*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"8cc30d22-a0ad-4b74-b117-a76b00f5d768"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "check", " ", "that", " ", "miracle", " ", "is", " ", "actually", " ", 
     "true", " ", "and", " ", "K_", "0", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", 
        RowBox[{"(", "g", ")"}]}], ",", "g"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"0", " ", "at", " ", "g"}], "=", "10"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"K0", "/.", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox[
       RowBox[{"216", "+", 
        RowBox[{"87", " ", "g"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["g", "2"]}], "-", 
        SqrtBox[
         RowBox[{"46656", "+", 
          RowBox[{"34992", " ", "g"}], "+", 
          RowBox[{"7425", " ", 
           SuperscriptBox["g", "2"]}], "+", 
          RowBox[{"484", " ", 
           SuperscriptBox["g", "3"]}]}]]}], 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "g"}], ")"}]}]]}]}], ")"}], "/.", 
   RowBox[{"g", "\[Rule]", "10"}]}]}]], "Input",
 CellChangeTimes->{{3.930299114373475*^9, 3.9302992695958624`*^9}, {
   3.9303005192389164`*^9, 3.930300610065646*^9}, 3.9303006502853055`*^9, {
   3.9303006831645813`*^9, 3.9303006976717124`*^9}, 3.9303007361161785`*^9, {
   3.930300875711791*^9, 3.9303009075998554`*^9}, {3.9303010494096317`*^9, 
   3.930301049934453*^9}, {3.930301129519154*^9, 3.93030113248831*^9}, {
   3.9303048364607105`*^9, 3.9303048977676373`*^9}, {3.9303051341661077`*^9, 
   3.9303051525617666`*^9}, {3.9303072956406994`*^9, 3.930307380467716*^9}, {
   3.9303074364697437`*^9, 3.9303074369953923`*^9}, {3.9303074672735925`*^9, 
   3.930307472357189*^9}, {3.9303075305950975`*^9, 3.9303075420627813`*^9}, {
   3.9303076523573675`*^9, 3.9303076555063343`*^9}, {3.9303077032789555`*^9, 
   3.9303077399699683`*^9}, {3.930307776387561*^9, 3.9303077791256037`*^9}, {
   3.9303078337326126`*^9, 3.930307847434197*^9}, {3.930307940407546*^9, 
   3.930307944389902*^9}, {3.930307991732686*^9, 3.930308033532941*^9}, {
   3.930308100276325*^9, 3.930308112268521*^9}, {3.9303082028493404`*^9, 
   3.9303082040490346`*^9}, {3.930308280454731*^9, 3.930308280651473*^9}, {
   3.930308321526743*^9, 3.930308329959719*^9}, {3.9303085372789173`*^9, 
   3.930308571646802*^9}, {3.930369573888069*^9, 3.930369574028947*^9}, {
   3.9303698382065945`*^9, 3.930369838528488*^9}, {3.9303726726846485`*^9, 
   3.930372673028226*^9}, {3.9303826283077555`*^9, 3.9303826420613947`*^9}, {
   3.930388469313979*^9, 3.9303884795050063`*^9}, {3.9309089767543364`*^9, 
   3.9309089847184668`*^9}, {3.9327402878776073`*^9, 
   3.9327403091586456`*^9}, {3.9327421462429523`*^9, 3.9327421892021046`*^9}, 
   3.9327422337856007`*^9, {3.9327425948782253`*^9, 3.9327426407120113`*^9}, 
   3.9367133953510637`*^9, {3.936713621927145*^9, 3.936713626029028*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"835ed874-23cb-b945-8866-7784b13323d4"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{
  3.9302995734667864`*^9, 3.9303006110187926`*^9, 3.9303006570542316`*^9, 
   3.930300698301776*^9, 3.930300737953602*^9, 3.9303009083485217`*^9, 
   3.930301051089696*^9, 3.9303011329087315`*^9, 3.930302982650172*^9, 
   3.9303044559033947`*^9, {3.9303048775565386`*^9, 3.930304899520934*^9}, 
   3.9303051532047977`*^9, 3.930307345219761*^9, 3.930307390473233*^9, 
   3.930307438544636*^9, 3.930307474250343*^9, 3.9303075441991234`*^9, 
   3.9303076601599283`*^9, {3.930307718837733*^9, 3.9303077408917084`*^9}, 
   3.9303077861884713`*^9, 3.9303078491544476`*^9, 3.930307946329259*^9, {
   3.9303079972398787`*^9, 3.930308037454006*^9}, 3.9303081145618544`*^9, 
   3.930308205318412*^9, 3.9303082818519583`*^9, 3.9303083308112392`*^9, 
   3.9303695748229604`*^9, 3.930369839061347*^9, 3.9303726738902545`*^9, {
   3.9303826296677675`*^9, 3.930382643147087*^9}, {3.930388474357644*^9, 
   3.9303884800668163`*^9}, {3.930908977750589*^9, 3.9309089853492136`*^9}, 
   3.9327399520342216`*^9, {3.9327421826883335`*^9, 3.9327421897099247`*^9}, {
   3.9327425762992363`*^9, 3.93274265411763*^9}, 3.932919757087467*^9, 
   3.9343785488651123`*^9, 3.9359187699289083`*^9, 3.9360189093840437`*^9, 
   3.936711606618187*^9, 3.936713400946623*^9, 3.936713878878573*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"df7958c7-58a9-4e93-9b58-fd4cf2a09b7a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Write", " ", "coefficients", " ", "on", " ", 
    RowBox[{"{", 
     RowBox[{"N", "=", "0"}], "}"}], " ", "to", " ", "file"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", 
         "\"\<K0-coeffs-on-Nzero.txt\>\""}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"K0", "/.", "curve"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", 
         "\"\<K2-coeffs-on-Nzero.txt\>\""}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"K2", "/.", "curve"}], "}"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.932921773983757*^9, 3.9329218981682835`*^9}, {
  3.9329223442058563`*^9, 3.9329223470557365`*^9}, {3.9367136316931677`*^9, 
  3.9367136409710293`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"42b4daca-c8c5-fa4c-a1f3-08fc8853f371"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coefficients on square lattice", "Section",
 CellChangeTimes->{{3.923929062486706*^9, 3.923929072149668*^9}, {
  3.9239938760672016`*^9, 3.923993878505539*^9}, {3.9309084602568855`*^9, 
  3.930908465002222*^9}},ExpressionUUID->"747df1b9-e8bb-a74b-a773-\
968027f5eae2"],

Cell["\<\
Remark: Since the self-interaction term is the same as for the hexagonal \
lattice, we only calculate the cross-interaction coefficient.\
\>", "Text",
 CellChangeTimes->{{3.9239938809094505`*^9, 
  3.923993947993332*^9}},ExpressionUUID->"db63f7c5-cb0a-4b4a-81f1-\
604e64e28331"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"wavevectors", " ", "for", " ", "square", " ", "lattice"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k1Square", "=", 
    RowBox[{"k", "*", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"k2Square", "=", 
    RowBox[{"k", "*", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.9239291037350907`*^9, 3.923929127336357*^9}, {
  3.923929177921568*^9, 3.923929220485777*^9}, {3.9239994655660057`*^9, 
  3.923999474259165*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"365b5747-b9b8-0944-a29e-8034d86128a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.923999476117737*^9, 3.9302995737492228`*^9, 
  3.932739955068966*^9, 3.9329197571318665`*^9, 3.934378548892812*^9, 
  3.9359187699622383`*^9, 3.936018909410613*^9, 3.9367116066520357`*^9, 
  3.93671387891575*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"72b04f10-d892-41a6-92ff-582f8eff8ecb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "k"}], "}"}]], "Output",
 CellChangeTimes->{3.923999476117737*^9, 3.9302995737492228`*^9, 
  3.932739955068966*^9, 3.9329197571318665`*^9, 3.934378548892812*^9, 
  3.9359187699622383`*^9, 3.936018909410613*^9, 3.9367116066520357`*^9, 
  3.936713878916254*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"aa2ca4ab-9ed9-4d9e-8a16-74a628fa171a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"relevant", " ", "non"}], "-", 
    RowBox[{"central", " ", "terms"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Nu]2k", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"Lhat", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"k1Square", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"k1Square", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"k1Square", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", 
            RowBox[{"k1Square", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], ".", 
        RowBox[{"N2", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1Square", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}],
           ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k1Square", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
           "\[Alpha]"}]}], "]"}]}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "*", "I", "*", 
        RowBox[{"k1Square", ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Nu]jmlSquare", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{"Lhat", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k1Square", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"k2Square", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"k1Square", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"k2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], ".", 
       RowBox[{"N2", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k1Square", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", 
           RowBox[{"k2", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k2", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
          "\[Alpha]"}]}], "]"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k1Square", "-", "k2"}], ")"}], ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Nu]jplSquare", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{"Lhat", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k1Square", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"k2Square", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"k1Square", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"k2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], ".", 
       RowBox[{"N2", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k1Square", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k2Square", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k2Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
          "\[Alpha]"}]}], "]"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k1Square", "+", "k2Square"}], ")"}], ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.923993837205065*^9, 3.923993865092762*^9}, {
  3.92399395368618*^9, 3.9239939796732826`*^9}, {3.92399441085021*^9, 
  3.9239944291172485`*^9}, {3.9239947156207123`*^9, 3.923994813042593*^9}, {
  3.9239963362962627`*^9, 3.923996379397463*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"e368b1f8-2399-d14a-8984-c810f26c10c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"48", " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"27", "+", 
            RowBox[{"2", " ", "g"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}], " ", "M"}]}], ")"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}]], "}"}], 
   ",", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"42", "+", "g"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"96", "+", 
               RowBox[{"5", " ", "g"}]}], ")"}], " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"27", "+", 
            RowBox[{"2", " ", "g"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}], " ", 
          SuperscriptBox["M", "2"]}]}], ")"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "M", " ", "\[Beta]"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "2"], " ", "M", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"72", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "M", " ", "\[Beta]"}]}]], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923999480954935*^9, 3.930299578955734*^9, 
  3.9327399600024605`*^9, 3.9329197632259808`*^9, 3.934378550980342*^9, 
  3.935918772390422*^9, 3.936018911769927*^9, 3.936711608682362*^9, 
  3.936713881128107*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"510d0f05-fdbf-4d8b-821a-4302f8fc043f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox[
     RowBox[{"192", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"7", " ", 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"24", " ", 
            RowBox[{"(", 
             RowBox[{"g", "+", 
              SuperscriptBox["k", "2"]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"15", "+", "g", "+", 
              SuperscriptBox["k", "2"]}], ")"}], " ", "M"}]}], ")"}]}], "+", 
        RowBox[{"48", " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"49", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"7", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"288", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"1344", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "g"}], "+", 
         RowBox[{"7", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}]], "}"}], 
   ",", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{"168", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "g"}], "+", 
            RowBox[{"7", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "g", " ", 
             RowBox[{"(", 
              RowBox[{"44", "+", "g"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"236", "+", 
               RowBox[{"11", " ", "g"}]}], ")"}], " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{"7", " ", 
             SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}], "-", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"15", "+", "g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          SuperscriptBox["M", "2"]}]}], ")"}]}], "+", 
      RowBox[{"9216", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "M", " ", "\[Beta]"}]}], 
     RowBox[{"7", " ", "M", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"7", " ", 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
           RowBox[{"7", " ", 
            SuperscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
           RowBox[{"288", " ", "M"}]}], ")"}]}], "-", 
        RowBox[{"192", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g"}], "+", 
           RowBox[{"7", " ", 
            SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}], ")"}]}]],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923999480954935*^9, 3.930299578955734*^9, 
  3.9327399600024605`*^9, 3.9329197632259808`*^9, 3.934378550980342*^9, 
  3.935918772390422*^9, 3.936018911769927*^9, 3.936711608682362*^9, 
  3.936713890562277*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"6f5e9f36-dc22-4164-b66b-d6cdc047d1ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{"896", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"24", " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"18", "+", "g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", "M"}]}], ")"}]}], "+", 
      RowBox[{"6144", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "\[Beta]"}]}], 
     RowBox[{
      RowBox[{"49", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "g", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"7", " ", 
          SuperscriptBox["k", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
         RowBox[{"288", " ", "M"}]}], ")"}]}], "-", 
      RowBox[{"1344", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "g"}], "+", 
         RowBox[{"7", " ", 
          SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}]], "}"}], 
   ",", 
   RowBox[{"{", 
    FractionBox[
     RowBox[{
      RowBox[{"112", " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "16"}], " ", 
          RowBox[{"(", 
           RowBox[{"g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "g"}], "+", 
            RowBox[{"7", " ", 
             SuperscriptBox["k", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "g", " ", 
             RowBox[{"(", 
              RowBox[{"48", "+", "g"}], ")"}]}], "+", 
            RowBox[{"11", " ", 
             RowBox[{"(", 
              RowBox[{"24", "+", "g"}], ")"}], " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{"7", " ", 
             SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}], "-", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"18", "+", "g", "+", 
            SuperscriptBox["k", "2"]}], ")"}], " ", 
          SuperscriptBox["M", "2"]}]}], ")"}]}], "+", 
      RowBox[{"6144", " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         SuperscriptBox["k", "2"]}], ")"}], " ", "M", " ", "\[Beta]"}]}], 
     RowBox[{"7", " ", "M", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"7", " ", 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
           RowBox[{"7", " ", 
            SuperscriptBox["k", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
           RowBox[{"288", " ", "M"}]}], ")"}]}], "-", 
        RowBox[{"192", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g"}], "+", 
           RowBox[{"7", " ", 
            SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}], ")"}]}]],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923999480954935*^9, 3.930299578955734*^9, 
  3.9327399600024605`*^9, 3.9329197632259808`*^9, 3.934378550980342*^9, 
  3.935918772390422*^9, 3.936018911769927*^9, 3.936711608682362*^9, 
  3.936713897857952*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"b775cc8f-7ff1-41de-8590-14681d72cf73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calculate", " ", "cross", " ", "coefficients", " ", "from", " ", 
    "quadratic", " ", "interactions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalGamma]0Square", "=", "\[CapitalGamma]0"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[CapitalGamma]3pSquare", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
         RowBox[{"N2", "[", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], "*", 
             RowBox[{"k2Square", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k1Square", "+", "k2Square"}], ")"}], ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Eta]1"}],
            ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], "*", 
              RowBox[{"k2Square", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Alpha]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k1Square", "+", "k2Square"}], ")"}], ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Eta]2"}]}], "]"}]}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", 
          RowBox[{"k1Square", ".", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Eta]1", "->", 
          RowBox[{
           RowBox[{"\[Nu]jplSquare", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\[Eta]2", "->", 
          RowBox[{
           RowBox[{"\[Nu]jplSquare", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[CapitalGamma]3mSquare", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
         RowBox[{"N2", "[", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"k2Square", ".", 
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k1Square", "-", "k2Square"}], ")"}], ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Eta]1"}],
            ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"k2Square", ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Alpha]"}], ",", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k1Square", "-", "k2Square"}], ")"}], ".", 
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
            "\[Eta]2"}]}], "]"}]}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", 
          RowBox[{"k1Square", ".", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Eta]1", "->", 
          RowBox[{
           RowBox[{"\[Nu]jmlSquare", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\[Eta]2", "->", 
          RowBox[{
           RowBox[{"\[Nu]jmlSquare", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.923996428694908*^9, 3.923996500166355*^9}, {
  3.923996546740196*^9, 3.9239966772559795`*^9}, {3.923996716010504*^9, 
  3.923996753688534*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"21dc05f8-492a-ec49-a187-b431e8a1bef4"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.923999536147442*^9, 3.9302996017931185`*^9, 
  3.9327399865690784`*^9, 3.932919791241829*^9, 3.934378564868881*^9, 
  3.935918786358389*^9, 3.9360189262020693`*^9, 3.936711624235681*^9, 
  3.936713897879559*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"e793668c-5051-4f16-819e-b6b6c7985157"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"14", " ", 
      SuperscriptBox["k", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "96"}], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"15", "+", "g"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"123", "+", 
              RowBox[{"13", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"1512", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"147", "+", "g"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"7992", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"1581", "+", 
                 RowBox[{"19", " ", "g"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"993", "+", 
              RowBox[{"26", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "4"]}], "+", 
           RowBox[{"11", " ", 
            SuperscriptBox["k", "6"]}]}], ")"}], " ", "M"}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1728", "+", 
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"60", "+", "g"}], ")"}]}], "+", 
           RowBox[{"13", " ", 
            RowBox[{"(", 
             RowBox[{"24", "+", "g"}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]}], ")"}]}], "-", 
     RowBox[{"24", " ", 
      SuperscriptBox["k", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"16", " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"30", "+", "g"}], ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"167", "+", 
              RowBox[{"8", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"116", "+", 
              RowBox[{"5", " ", "g"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1896", "+", 
              RowBox[{"187", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"127", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}]}], ")"}], " ", 
      "\[Beta]"}], "-", 
     RowBox[{"27648", " ", 
      SuperscriptBox["k", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"g", "+", 
        SuperscriptBox["k", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"g", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["k", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"21", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"7", " ", 
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"7", " ", 
           SuperscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"288", " ", "M"}]}], ")"}]}], "-", 
       RowBox[{"192", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "g"}], "+", 
          RowBox[{"7", " ", 
           SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}], ")"}]}], 
    ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923999536147442*^9, 3.9302996017931185`*^9, 
  3.9327399865690784`*^9, 3.932919791241829*^9, 3.934378564868881*^9, 
  3.935918786358389*^9, 3.9360189262020693`*^9, 3.936711624235681*^9, 
  3.936713946246488*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"22fd553f-7cfb-426c-a633-c2d696932723"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"7", " ", 
      SuperscriptBox["k", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "96"}], " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"15", "+", "g"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"123", "+", 
              RowBox[{"13", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"1440", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"147", "+", "g"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"7380", "+", 
              RowBox[{"g", " ", 
               RowBox[{"(", 
                RowBox[{"1569", "+", 
                 RowBox[{"19", " ", "g"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"981", "+", 
              RowBox[{"26", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "4"]}], "+", 
           RowBox[{"11", " ", 
            SuperscriptBox["k", "6"]}]}], ")"}], " ", "M"}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1440", "+", 
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"58", "+", "g"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"292", "+", 
              RowBox[{"13", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]}], ")"}]}], "-", 
     RowBox[{"12", " ", 
      SuperscriptBox["k", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"16", " ", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox["k", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"30", "+", "g"}], ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"167", "+", 
              RowBox[{"8", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "g", " ", 
            RowBox[{"(", 
             RowBox[{"334", "+", 
              RowBox[{"15", " ", "g"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1756", "+", 
              RowBox[{"187", " ", "g"}]}], ")"}], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{"127", " ", 
            SuperscriptBox["k", "4"]}]}], ")"}], " ", "M"}]}], ")"}], " ", 
      "\[Beta]"}], "-", 
     RowBox[{"13824", " ", 
      SuperscriptBox["k", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"g", "+", 
        SuperscriptBox["k", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"g", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["k", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"7", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"7", " ", 
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"7", " ", 
           SuperscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "48"}], "+", "M"}], ")"}]}], "+", 
          RowBox[{"288", " ", "M"}]}], ")"}]}], "-", 
       RowBox[{"192", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "g"}], "+", 
          RowBox[{"7", " ", 
           SuperscriptBox["k", "2"]}]}], ")"}], " ", "\[Beta]"}]}], ")"}]}], 
    ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.923999536147442*^9, 3.9302996017931185`*^9, 
  3.9327399865690784`*^9, 3.932919791241829*^9, 3.934378564868881*^9, 
  3.935918786358389*^9, 3.9360189262020693`*^9, 3.936711624235681*^9, 
  3.936714000396865*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"3d721e22-24e0-47b3-8108-7af268c7a663"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calculate", " ", "cross", " ", "coefficients", " ", "from", " ", "cubic", 
    " ", "interactions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[CapitalLambda]2Square", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "alphaTilde"}], ")"}]}], ")"}], "*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"alphaTilde", ",", "1"}], "}"}], ".", 
       RowBox[{"N3", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k1Square", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"k2Square", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", 
           RowBox[{"k2Square", ".", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k1Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"k2Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", "\[Alpha]"}], 
         ",", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], "*", 
            RowBox[{"k2Square", ".", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}], "*", 
          "\[Alpha]"}]}], "]"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], "*", 
        RowBox[{"k1Square", ".", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}]}], "]"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9239967387947426`*^9, 3.923996787710554*^9}, {
  3.9239968326341705`*^9, 3.923996849322241*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"bb3e48f2-3022-c54c-959a-6432eefb26ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"g", "+", 
       SuperscriptBox["k", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"6", "+", "g", "+", 
             SuperscriptBox["k", "2"]}], ")"}]}], "-", 
          RowBox[{"7", " ", "M"}]}], ")"}]}], "+", 
       RowBox[{"48", " ", "\[Beta]"}]}], ")"}]}], 
    RowBox[{"72", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "4"], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "g", "-", "M"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[Beta]"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.924000046226326*^9, 3.930299846219572*^9, 
  3.932740252465719*^9, 3.932920077980999*^9, 3.934378705750939*^9, 
  3.935918927590054*^9, 3.9360190705698843`*^9, 3.9367117678770113`*^9, 
  3.936714039021762*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"fc5c0933-62bd-4206-9d03-a174970f6862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"cross", " ", "interaction", " ", "coefficient"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"K1Square", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "\[CapitalGamma]0Square"}], "+", 
          RowBox[{"2", "*", "\[CapitalGamma]3pSquare"}], "+", 
          RowBox[{"2", "*", "\[CapitalGamma]3mSquare"}], "+", 
          RowBox[{"6", "*", "\[CapitalLambda]2Square"}]}], ")"}], "/.", 
        RowBox[{"M", "->", 
         RowBox[{"Mmc", "[", "k", "]"}]}]}], ")"}], "/.", 
      RowBox[{"k", "->", "kmc"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.92399685861578*^9, 3.923996931103647*^9}, {
  3.924000085389551*^9, 3.9240000859503326`*^9}, {3.924000318042404*^9, 
  3.9240003186994915`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"e57db3a4-1491-fc45-8ba9-6bb6e1ee5fb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"16", " ", "g", " ", 
     RowBox[{"(", 
      RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", "\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8584704", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "6"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
          "\[Beta]"}]]}], "+", 
       RowBox[{"280", " ", 
        SuperscriptBox["g", "7"], " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{"1934917632", "+", 
          RowBox[{"1209323520", " ", "\[Beta]"}], "+", 
          RowBox[{"78382080", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          RowBox[{"1088640", " ", 
           SuperscriptBox["\[Beta]", "3"]}], "+", 
          RowBox[{"3240", " ", 
           SuperscriptBox["\[Beta]", "4"]}], "+", 
          SuperscriptBox["\[Beta]", "5"]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["g", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1170348", " ", 
           SuperscriptBox["\[Beta]", "6"]}], "+", 
          RowBox[{"407", " ", 
           SuperscriptBox["\[Beta]", "7"]}], "-", 
          RowBox[{"290304", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"15039", "+", 
             RowBox[{"25", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"240", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1126098"}], "+", 
             RowBox[{"35", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"22394880", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"58956", "+", 
             RowBox[{"49", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"1289945088", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "20682"}], "+", 
             RowBox[{"175", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"107495424", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"146889", "+", 
             RowBox[{"350", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"31104", " ", "g", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "5"], " ", "\[Beta]",
         " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"120", " ", 
           SuperscriptBox["\[Beta]", "3"]}], "+", 
          RowBox[{"190944", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "-", 
          RowBox[{"36", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6768"}], "+", 
             RowBox[{"451", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "12024"}], "+", 
             RowBox[{"485", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["g", "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "295697"}], " ", 
           SuperscriptBox["\[Beta]", "6"]}], "-", 
          RowBox[{"89", " ", 
           SuperscriptBox["\[Beta]", "7"]}], "-", 
          RowBox[{"180592312320", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{"26873856", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "903672"}], "+", 
             RowBox[{"167", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"13436928", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "53994"}], "+", 
             RowBox[{"1087", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"134784", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"2114856", "+", 
             RowBox[{"4501", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"864", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"2939076", "+", 
             RowBox[{"5599", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "65656152"}], "+", 
             RowBox[{"6383", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"216", " ", 
        SuperscriptBox["g", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "4"], " ", "\[Beta]",
         " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"43648", " ", 
           SuperscriptBox["\[Beta]", "4"]}], "-", 
          RowBox[{"25920", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "115344"}], "+", 
             RowBox[{"173", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"373248", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "50256"}], "+", 
             RowBox[{"227", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"686256", "+", 
             RowBox[{"1669", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"24", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"4831056", "+", 
             RowBox[{"27745", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"108", " ", 
        SuperscriptBox["g", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1012"}], " ", 
           SuperscriptBox["\[Beta]", "6"]}], "-", 
          RowBox[{"5518098432", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "277972"}], "+", 
             RowBox[{"19", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"2808288", "+", 
             RowBox[{"1849", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"746496", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "117360"}], "+", 
             RowBox[{"2479", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"48", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"23620032", "+", 
             RowBox[{"15155", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"3456", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"6197472", "+", 
             RowBox[{"43909", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["g", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "76086"}], " ", 
           SuperscriptBox["\[Beta]", "6"]}], "-", 
          RowBox[{"162533081088", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{"1990656", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2568861"}], "+", 
             RowBox[{"304", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "23199408"}], "+", 
             RowBox[{"5501", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "-", 
          RowBox[{"8957952", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{"1482192", "+", 
             RowBox[{"21533", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"24192", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"2900880", "+", 
             RowBox[{"21977", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"96", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"22001112", "+", 
             RowBox[{"52033", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"63", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "72"}], "+", "\[Beta]"}], ")"}], "4"], " ", 
     RowBox[{"(", 
      RowBox[{"864", "+", 
       RowBox[{"12", " ", "g"}], "-", 
       RowBox[{"12", " ", "\[Beta]"}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
          "\[Beta]"}]]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", " ", "\[Beta]"}], "+", 
        RowBox[{"6", " ", 
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
           "\[Beta]"}]]}]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"12", " ", 
        SuperscriptBox["\[Beta]", "4"]}], "-", 
       RowBox[{"1728", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"216", "+", 
          RowBox[{"27", " ", "g"}], "+", 
          SuperscriptBox["g", "2"]}], ")"}], " ", 
        SqrtBox[
         RowBox[{"g", " ", 
          RowBox[{"(", 
           RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
          "\[Beta]"}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[Beta]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2592"}], "+", 
          RowBox[{"60", " ", "g"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "2"]}], "+", 
          RowBox[{"15", " ", 
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8640"}], " ", "g"}], "+", 
          RowBox[{"504", " ", 
           SuperscriptBox["g", "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["g", "3"]}], "+", 
          RowBox[{"33", " ", 
           SqrtBox["2"], " ", "g", " ", 
           SqrtBox[
            RowBox[{"g", " ", 
             RowBox[{"(", 
              RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
             "\[Beta]"}]]}], "+", 
          RowBox[{"72", " ", 
           RowBox[{"(", 
            RowBox[{"2592", "-", 
             RowBox[{"31", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"72", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"12", " ", 
           SuperscriptBox["g", "3"]}], "+", 
          RowBox[{"72", " ", 
           RowBox[{"(", 
            RowBox[{"864", "-", 
             RowBox[{"17", " ", 
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{"24", " ", "g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "180"}], "+", 
             RowBox[{
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["g", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"792", "+", 
             RowBox[{
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"g", " ", 
                RowBox[{"(", 
                 RowBox[{"72", "+", "g", "-", "\[Beta]"}], ")"}], " ", 
                "\[Beta]"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9240000783913727`*^9, {3.924000315202013*^9, 3.9240003391751385`*^9}, 
   3.93029985863302*^9, 3.9327402671278725`*^9, 3.932920093322012*^9, 
   3.9343787130377703`*^9, 3.935918935015326*^9, 3.936019077971601*^9, 
   3.936711775228178*^9, 3.936714046385994*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"a77c96af-66ea-4c91-8178-de941ad3c727"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Write", " ", "expression", " ", "for", " ", 
    SubscriptBox["K", "1"], " ", "to", " ", "file"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<cross-cubic-coeffs-square.txt\>\""}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"K1Square", "/.", 
       RowBox[{"\[Beta]", "->", "b"}]}], "}"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.924000381751625*^9, 3.9240003877518883`*^9}, {
  3.932743875286848*^9, 3.9327438880437927`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"7046d8f7-0fc9-8c4e-b640-45cf53a001d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot coefficients on the square lattice", "Section",
 CellChangeTimes->{{3.932742854288517*^9, 
  3.932742872583647*^9}},ExpressionUUID->"c80c3020-1896-b246-8863-\
ede63c702782"],

Cell[TextData[{
 "Here, we plot the coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "0"], TraditionalForm]],ExpressionUUID->
  "2e42c7bb-d481-a94d-8a17-9e4437db56bd"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "1"], TraditionalForm]],ExpressionUUID->
  "ac69a856-c6d8-234b-9db2-639b65aede9d"],
 " in the (\[Beta],g)-parameter plane. We then plot the regions of parameter \
space, where certain existence and selection criteria for roll waves and \
square patterns are satisfied."
}], "Text",
 CellChangeTimes->{{3.9327429282249203`*^9, 
  3.9327430283836613`*^9}},ExpressionUUID->"6f4db470-b3ff-424f-b568-\
316ad161b5e5"],

Cell[CellGroupData[{

Cell[TextData[{
 "Density plots of coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "0"], TraditionalForm]],ExpressionUUID->
  "4965685a-21be-4244-818e-dc071c98388f"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "1"], TraditionalForm]],ExpressionUUID->
  "16c3c0be-19dd-8548-9ec6-37481f312568"]
}], "Subsection",
 CellChangeTimes->{{3.9327430316767616`*^9, 
  3.93274305694541*^9}},ExpressionUUID->"c53b6062-ec5d-0b46-8a52-\
6cbe48e003d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Density", " ", "plot", " ", "of", " ", "self"}], "-", 
    RowBox[{"interaction", " ", "coefficient", " ", 
     SubscriptBox["K", "0"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DensityPlot", "[", 
    RowBox[{"K0", ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0.001", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "35"}], ",", 
     RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
     RowBox[{"MeshFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"#3", " ", "&"}], "}"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", "0", "}"}], "}"}]}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "g"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Density", " ", "plot", " ", "of", " ", "self"}], "-", 
     RowBox[{"interaction", " ", "coefficient", " ", 
      SubscriptBox["K", "1"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{"K1Square", ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0.001", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "35"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"MeshFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"#3", " ", "&"}], "}"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", "0", "}"}], "}"}]}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "g"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9327430599201527`*^9, 3.9327431280098076`*^9}, {
  3.932743213682989*^9, 3.9327432179867973`*^9}, {3.9327433522784367`*^9, 
  3.9327433816458664`*^9}, {3.9327435559703083`*^9, 3.9327436049600143`*^9}, {
  3.932743703067053*^9, 3.932743737235466*^9}, {3.936713647838715*^9, 
  3.936713649512233*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"8c5dfb5c-c773-fe41-a27f-2ef154d3ecd5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxtnXucTVX/+I+DGZfBOBi3XMbdMHK2SaW0VymSXHqIwiNERImQS+rBk/vz
ILdIIYWQcn/cIlMecnfcxiWa6YYOsl3GZfAd47w/57c+z+/8M6/367Nnn73X
ea+1PnvvtdZO7PrW37r7fT7f6nw+372/WYsvhZp3beX6Ip/hJ3olV37+pPDS
riNivEZh4V1Lqz12tu5VYbMwrv8xN0u4Q6shh7stymXgGc3fuHSyTl7hA8+9
UujFtfmE4579W809DeOEmzyT/dlWRPjJxE+Wd1pYVPjU3Omby/QqJvxu+Um7
jySXEC716djjUy4lCK8pO/JMizWlhP/28bvXCgwpI3yx1MA82x9/QPhfH/UJ
/NNXXrhmQs+K7g8VhF/dWfej299XFF45LnnOiQWJwrmaJi1YP6aScKt81b/6
6PXKwnO3V141sFkV4QujK25onVxVuGHjcluDRapFjydvmR1FLkX5xA8J+86H
qgsnfVDsyK7VNYSHNIr/afGMmsI7/IV+HTM4Sbhkav4/u7evJfzavZ/38drC
a0zuG4nlk4Xvf+oI48vB0L1PhosvML7A+ALjC4wvML7A+ALjC4wvML7A+ALj
C4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvcjwRX2B8gfEFxhcYX2B8
gfFFyiviC4wvsO2Lp3zxlC+e8sVTvnjKF0/54ilfPOWLp3zxlC+e8sVTvnjK
F0/54ilfPOWLp3zxlC+e8sVTvnjKF0/54ilfPOWLp3zxlC+e8sVTvnjKF0/5
4ilfPOWLp3zxlC+e+PJ4zidLfIHxBcYXGF9gfIHxBcYXGF9gfIHxBcYXGF9g
fIHxBcYXGF9gfIHxBcYXGF9gfIHxBcYXGF9gfJHjifgC4wuMLzC+wPgC4wuM
L1JeEV9gfIHt9sVv7PbFb+z2xW/s9sVv7PbFb+z2xW/s9sVv7PbFb+z2xW/s
9sVv7PbFb+z2xW/s9sVv7PbFb+z2xW/s9sVv7PbFb+z2xW/s9sVv7PbFb+z2
xW/s9sVv7PbFb+z2xW/s9sVv7PYl+3is9sVv7PbFb+z2xW/s9sVv7PbFb+z2
xW/s9iW7vKz2xW/s9sVv8GXsmHufWPEFxhcYX2B8gfEFxhcYX2B8gfEFxhcY
X2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfFFjifiC4wvML7A+ALj
C4wvML5IeUV8gfEFxpeGOe1NnPgC4wuMLzC+wPgC4wuMLzC+wPgC4wuMLzC+
wPgC4wuMLzC+wPgC4wuMLzC+wPgC4wuMLzC+wPgixxPxBcYXGF9gfIHxBcYX
GF+kvCK+wPgC48uQwfc+8eILjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuML
jC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuOLHE/EFxhfYHyB8QXGFxhfYHyR
8or4AuMLbOcvAZW/BFT+ElD5S0DlLwGVvwRU/hJQ+UtA5S8Blb8EVP4SUPlL
QOUvAZW/BFT+ElD5S0DlLwGVvwRU/hJQ+UtA5S8Blb8EVP4SUPlLQOUvAZW/
BFT+ElD5S0DlLwGVvwRU/hJQ+UtA5S8Blb8EVP4SEF+Scz4lxBcYX2B8gfEF
xhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEF
xhc5nogvML7A+ALjC4wvML7A+CLlFfEFxhcYX3LSmTElxRcYX2B8gfEFxhcY
X2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhc5
nogvML7A+ALjC4wvML7A+CLlFfEFxhcYX9JzPqXFFxhfYHyB8QXGFxhfYHyB
8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFzmeiC8w
vsD4AuMLjC8wvsD4IuUV8QXGFxhfHsvJfx8QX2B8gfEFxhcYX2B8gfEFxhcY
X2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX+R4Ir7A+ALj
C4wvML7A+ALji5RXxBcYX2B8mT7j3qe8+ALjC4wvML7A+ALjC4wvML7A+ALj
C4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+CLHE/EFxhcYX2B8
gfEFxhcYX6S8Ir7A+ALjS87l0uCK4guMLzC+wPgC4wuMLzC+wPgC4wuMLzC+
wPgC4wuMLzC+wPgC4wuMLzC+wPgC4wuMLzC+wPgC44scT8QXGF9gfIHxBcYX
GF9gfJHyivgC4wuMLwtyPoniC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALj
C4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjixxPxBcYX2B8gfEFxhcYX2B8
kfKK+ALjC4wvOZfXoUriC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wv
ML7A+ALjC4wvML7A+ALjC4wvML7A+ALjixxPxBcYX2B8gfEFxhcYX2B8kfKK
+ALjC4wvd3M+lcUXGF9gfIHxBcYXGF9gfIHxBcYXGF9gfIHxBcYXGF9gfIHx
BcYXGF9gfIHxBcYXGF9gfIHxBcYXOZ6ILzC+wPgC4wuMLzC+wPgi5RXxBcYX
GF9q59yPqSq+wPgC4wuMLzC+wPgC4wuMLzC+wPgC4wuMLzC+wPgC4wuMLzC+
wPgC4wuMLzC+wPgC4wuMLzC+yPFEfIHxBcYXGF9gfIHxBcYXKa+ILzC+wPjy
cvt7n2riC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wv
ML7A+ALjC4wvML7A+ALjixxPxBcYX2B8gfEFxhcYX2B8kfKK+ALjC4wvo3Pu
31UXX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEF
xhcYX2B8gfEFxhcYX+R4Ir7A+ALjC4wvML7A+ALji5RXxBcYX2B8WbX63qeG
+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A
+ALjC4wvML7A+CLHE/EFxhcYX2B8gfEFxhcYX6S8Ir7A+ALjy88593trii8w
vsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8w
vsD4AuMLjC9yPBFfYHyB8QXGFxhfYHyB8UXKK+ILjC8wvhQqcu9TS3yB8QXG
FxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXG
FxhfYHyR44n4AuMLjC8wvsD4AuMLjC9SXhFfYHyB8aVBzvOB2uILjC8wvsD4
AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4
AuOLHE/EFxhfYHyB8QXGFxhfYHyR8or4AuMLjC89Xr/3SRZfYHyB8QXGFxhf
YHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhf
5HgivsD4AuMLjC8wvsD4AuOLlFfEFxhfYHyZlvM8qY74AuMLjC8wvsD4AuML
jC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4IscT
8QXGFxhfYHyB8QXGFxhfpLwivsD4AuPL1u/vfR4UX2B8gfEFxhcYX2B8gfEF
xhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX+R4Ir7A
+ALjC4wvML7A+ALji5RXxBcYX2B8GZTz/LGu+ALjC4wvML7A+ALjC4wvML7A
+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+CLHE/EFxhcY
X2B8gfEFxhcYX6S8Ir7A+ALjS+Gc/DcovsD4AuMLjC8wvsD4AuMLjC8wvsD4
AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsjxRHyB8QXGFxhf
YHyB8QXGFymviC8wvsD2eIagGs8QVOMZgmo8Q1CNZwiq8QxBNZ4hqMYzBNV4
hqAazxBU4xmCajxDUI1nCKrxDEE1niGoxjME1XiGoBrPEFTjGYJqPENQjWcI
qvEMQTWeIajGMwTVeIagGs8QVOMZgmo8Q1CNZwiq8QxBNZ4hqMYzBNV4hqAa
zxD1BbbnTzvGnj/tGHv+tGPs+dOOsedPO8aeP+0Ye/60Y+z5046x5087xp4/
7Rh7/rRj7PnTjrHnTzvGnj/tGHv+tGPs+dOOsedPO8aeP+0Ye/60Y+z5046x
5087xp4/7Rh7/rRj7PnTjrHnTzvGnj/tGHv+tGPs+dOOsedPO8aeP+0Ye/60
Y+z5046x5087xp4/7YgvsD3/yFHzjxw1/8hR848cNf/IUfOPHDX/yFHzjxw1
/8hR848cNf/IUfOPHDX/yFHzjxw1/8hR848cNf/IUfOPHDX/yFHzjxw1/8hR
848cNf/IUfOPHDX/yFHzjxw1/8hR848cNf/IUfOPHDX/yFHzjxw1/8hR84+i
vsD40ivn+rqe+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A
+ALjC4wvML7A+ALjC4wvML7A+CLHE/EFxhcYX2B8gfEFxhcYX6S8Ir7A+ALb
60uliC+wvb5UivgC2+tLpYgvsL2+VIr4AtvrS6WIL7C9vlSK+ALb60uliC+w
vb5UivgC2+tLpYgvsL2+VIr4AtvrS6WIL7C9vlSK+ALb60uliC9yPNb6Uini
C2yvL5UivsD2+lIp4gtsry+VIr7A9//WEU7a0/DdUR13R/qTkPvu53cnvrD9
rvD1vW//UrF3bgOn7O5+d6YXI9znx5fKFh1aQHjJf5s9PC5XYWGvy9zFw3+I
F57888z/PD42IFz7lSnbrjcrLrzzpwkHVxdJEOb47vefYbd+z9l7cz30mzDb
w691HJXe92BJ4Twn3r9Y+6PSwvNeHnz7TPuywk+k9Su4oHw54eNte5fuklFe
eFOvlVMLt64oXCDpm4/DKYnC7c8u/WxnQiXhL+99rkf5eo8F34w+XlmY87m/
3kGmnA/M9nDj6vPXdttURXjG73O+fWpOVeFfF8z+oeLwasIp3WfuutOluvDI
KtNDJxvVEA798uGxDVVrClf8fOLPM2OThPt2nfDHO2ejvDlx7IU2u2oJF07/
4KqzrLZw+3kjsuInJQtzfvfHh/sM5wdP/rpehX6LLwmzvS/ysX3U61mFpLz+
/5zhsn/xLcKUf8zi0u26rLsucZi4nU9F6wNxO7+K1g/idr4VrS/E7fwrWn+I
2/lYtD4Rt/OzaP0ibudr0fpG3M7fovVP1yfKk/rE9jZnSP0ibnOG1DfiNmdI
/SNuc4bUR+I2Z4h/xGnfdPtxnz0pT3yl/GDKC6Z8YMoHtq+Pou0Pcft6Kdoe
Ebevn6LtE3H7eiraXhG3r6+i7Rdx+3or2p4Rpz2T+hxpz2DaM90+UZ60T+wf
Jk55Ud8pH5jygDl/mPOFOT+Y84E5H5jzgTkfmPOBOX6Y9hamvYVpb2HaW5j2
Fqa9hWlvpXys9XKi7S9xe/2caHss5xupD7q86uSMd80r5QVTXjDlBVNeMOUF
U14w5QVTXjDlBVNeMOUFU14w5QVTPjDlAdMe6PLRcZj2Yk3OeKxoPg3z/5rJ
p+z+J0P1Nxkqv8pQ+VWGyq8yVH6VofKrDJVfZaj8KkPlV9H2kv7W3p+n9uep
/Xlqf57qLzzVP3iqP/BU+++p9t5T7bsn7RWMrzC+wviqj+9++5Sl8sMslR9m
qfwwS+WHWSo/zFL5YZbKD7NUfpil8sMslR9mqfY0S/I9mPoEU59g6hNMfYKp
TzD1CaY+wdQnOZ+IP7o87pe339i/l9/Yv5ff2L+X39i/l9/Y/Yvf2P2JX9oX
mPKAKQ+Y8oApD5jygCkPmPKAKQ85Hyv/8Kt8Nnq9RXth398LqfVXQ2r91ZBa
/zSk1j8NqfVPQ2r905Ba/zSk1uMMq/U4w2o9zrBajzOs1uMMq/U4w2o9zrBa
jzOs1ssMq/Uyw2q9zLBaLzOsrgej64HSH9rr9WW69np90XxN52c6H9P5l863
dH4F2+v1Zbr2en2Zrr1eX6Zrr9eX6drr9WW69np9ma69Xl+ma6/Xl+na6/Vl
uvZ6fZmuvV5fpmuv1xc9X/pLe76zT8139qn5zj4139mn5jv71Hxnn5pfHI3T
H1MeMOUBUx4w5SH9eaQ8YMoDpjxgygMmH4M5Xjjn75uXIz6edD+vXqx7uWE3
hfs1LHD08+H4f9ItvCn3b688XUp4aYPbXtl8ZYSfXX/Nl7arrPBvD/9VeNqk
csIfby237K2HmP/+l/uwKbmx1o2A8KHN8T/+sam4MN8Pn3q5zwPd3kwUrlO6
d+WnWlYSHpbWI6lisLLw7o+6Be8EqghzPBk5449vuCPXnn2gVesKwpM/7ldi
9ISKwnwfzPfBfB/M98Fl2nV55OSVKPdK6ORuOFJVeN3h9o1nrqsmnG96u+bv
fFxduG2b7M+wGsILi73QwelUU/hKdnYXb5KEn57y3OsXEmsJZ8Q/PWjJb7XN
wpznfbnM+8t/SXjuvU3y+56qEjNieu47wpXeL7R/2xzanz/cLVkxp0Z0LSlc
5ZHfk4vMJ3++6r6dmZFy/p9VhH9/ZUClXrsuyv56JlVsuuDKNeFm/sSFH7aO
l/2dGV5mdfOSAeFRd4ul5j9R7H++n/+HyQc7vusLN6xWWuI37n3ORn2cMfhy
7NplDwjXywyXeLtf+f+Jc/zE4TMNLhf9qExF4fo3s1vYrCiPXh+u0PpUovCh
wWerBb+rJIw/OcPFZtwRf2D8gfEHprz5/ShveGzf1KGz2ibL9jBx/Lvfj+cx
+AfjH4x/MP7B+AfjH4x/8JQXmvTdnbu2MD7C+Hj/90x1m0x869yd5/PI7wPj
w8gJXWMGHYqVOEz827EvVrrYoaDEYeLXRz37RI9fCkscJk77pNsr4rRXxGHi
tF/EYeK0ZzDtKUx7Ctv5aMhN3m/eH7udfC1V9o9v7B9m/7R/MHG+jzhMnPac
OEyc9lS3r8RpX4nDxGlvicO6/sDUH/39+M/+YfYHsz/yL/YHUx9h6iOMz7p9
1cz38XvB5H/0v2xP/k2+rf+f+gzr+pMzvfN4PYnD9vPokJQPftrrWWe6Be5d
HzQ87HI+HA9x9k/cXl/Hp57H+NX6LT5pPzgfez0Xn7QnxO31XXzSvhC313vx
SXtDnPsV3C+gv6P+cH1N3B4PE3YpX/y01xfySflTX+37/aly/5790z8SJ/+C
ud/C9vSfxMnP4LgPh+0dvc1nNPP7Linyzsmnxvmj+Vjc69c3xMcIVyzQsXi9
mfmFO8S2rLu0QiFh+muY/hqmv9b5g2aOz+bo/XnO1+7fU6W9grnfwfb0/8Rp
v2Di/D7cH+H/yRfYnvYN5v4J25MvEKf9gbmfwPbkE8SpfzD1TbfX+Mfx45+d
74RV/h2W/IftYc6f89PM/3N+/D/M9pyvZv6f8+X/Yba314fySX5Ce2evF+WT
fIV46trTj+3qXlXqt72elE/yGbaPz9Z/cZNqsn3nh441HVOzusTt9ad8kv8Q
Z3v+/+srh1t1L1gj2p5b61X5JF8izvb8/51VoXaNzkfjtIcwcbZ/vv++Ton7
onHaR5g423/i7O5+d3k0DhM/d2nHGz9NqSVxmHiDFdv6bxwQ7b9g4vQHuj/i
/Glf+L1pX2DaF5j2hfaA9gWmfYHt/s/nI45vMPWJ9oY4TJz2hjhMnPoGU59g
uz3wXLu+e3L9wP5h4lxPEIeJc31BHCbO99Mf8/2a+T35fuIwcb6fOEyc7ycO
E+f6hzisr2eIw8S5viEO6/pPHNb1nTis6zNxmPyO+kocJk79JA4Tpz4Sh4lT
H4nDxKmPxGHi1EfiMHGu/4jDxClP8kfKD6a8YMoHpjxgzh/mfGHOD+Z8YI4f
5nhh8qv7HL0fTX5rx30+rhdpL7g+hLkelOdXkes/mOs9mOs7mOstmOst2M5X
MlQ+ot93lqr256n9eWp/ntqfp/IVT+Ujnso3PLkegrkegrke0vvDH/v6IUv2
B9Ofw/TfMP0zTH8L03/C9I8w/R/M9QD1GybO9QBxmDjXXzD9C0x+Rn/H+Wjm
eofzIw4T53yJw8Q5f+IwccoDpjxgzh/mfGH7/kH0/Ub6+pH6Zj+/C6v3fYXl
96Z/sv1Nde37jWH1vDOkOEP6E/ID+/laSHGG9C9yf8d6/hZSnCH9Ddvbz+M8
6U/o3+3nlWHXfl7nSf/C9vbzzLBrP8/zpL+R+yPW886waz/v86T/YXv7eWjY
tZ8HetIfsb39vDTs2s8LPemf2N5+nhp27eeJnvRXbG8/bw279vNGT/ovtscH
6qM9fyAk9e3+/k6q52Un1fv9wrI9v6c9PvEPdX0cHe9Gf8H1Mb7aHHLt/iRV
cXR8HPsj/5XrQ4tDqj9KVRwdT8f+yJ/Z3uaQ6s9SFUfH37E/8m+2tzmk+sNU
xdHxeuzPzt9TVT4fUv1pquLo+D72Z+f/qep6IKT641TF0fGA+vqA7W0Oqf5X
98chdb8i5Nr3GzLEP9o/e/xo9H4R98/wn/pg3w+8qp5fhNXzi7B6fqHHq4UU
Z0i+R32gPbqfH+Y39njbWBlvQNwefxsr4w+I2+NxY2U8AnF7fG6sjE8gbo/X
jZXxCsTt8buxMn6BuD2eN1bGMxC3x/fGqvlpYanvcj/Dqq8Zqr5lqPqir089
5Yunnld5yh/Pte8/Rd//yvU0vz/tpf37Z8n1G8z1Gkx/CtNfwvSHML7A9Icw
/Z3ennyC7WG2h+n/YPo3mP4Lpn+C6X9g+heY6wmY6wmY5ynS3ljX46mSz+AD
+VmHnAQpRvIxmHwMJh+Dycdg8jGY/BMm/4Lprzge7kfK9Xpk/DjPE+gfZXxk
pH3iesoeb+43t3p9uXLcsnRXPx/m+tG+vx0dr0H9onzujw/KJ+MViFNexHke
QJzyI87zAOKUJ3GeBxCnfInzPIA45U2c8Q/EKX/iXJ8R5/cgTnlRnnb+GFL5
ZIbUH8lPrd8zU42fjI4n5Pezxxf6jT1/JMvlePABpv2w33fgM327Tzw3ZNMZ
+b3ZH0x+o5/nyf3WyPgajo845UE+JPM9rPebZkr+JPmyNV7Uk/aXOO310LKx
p1++8Lt76oOsyqfn5pftGe/VJpAQPuq7KuO9ji6uN2DF8Otuvx6tzk7pG33/
MuO/doxd+M8bs6Ljr2asHfVhvWI+mb9VZ3y1zum5/eb9zD538h2Kvm+3W/WO
+4tM3CHvc2V81uyV8097J3LL/K4Rd5Z989vkvDK/68ithAH1G8ea+bNrb4hb
F32/6mdDNlRq/tYuV78/s1jnq8N+25BPyrvTvJqPbitcQJ7ntZ1k3nihaUHT
fcbfrrb8NPr+zKThfW7VrLHX1e9LbNq6018TukXfr5nbG1fqoeaFZLxT+4Hf
/b1emcIy3mlX88avbNxdWMYz1Zz11ORHXysi45m2N73csdGZIjKe6Yle1+Y+
nRR9X2K9uDeqdm8bbw5v7Lug5u7o+xLXVlv0x/yO++X9gzL+a9rC272HRN+n
mPxugbTe06PvU5w8/ItcI5ZE36d4c+Xooi3WR9+nOM9Z8WS31P/nfYqFl+95
6r/R9ynend6nTdtt0fcppg+YkHB9S7yZWnzbtkOTD8j77QaVrNvq+DcheX9Z
5Qm3DxxYd1DeT9W59MRWF5cckvcP1Vw2xZsy6rC8X6bNJwf2t3n2iLw/ZGSb
R/bkv3xE3g8xKK3puu9HHZX1/+9OO9tiry9N1nd/o+9LNZZ0S5P1u5/cU71r
zMo0WZ95YKfSX6w/mybr726c8MzFDXHHZH3VF5ts/neZB47J+pn1q2585Vap
Y7I+4qdl9n7zrzzHZP27u1N/WpTn5zRZ3+zEr2UGzP4qTdavisvqX3JM7zRZ
n2iIs/J8Zrk0WX8mz9ZHQyW2HZX1Rd6ZduTU7S5HZf2IJeUzVn139YisDzDm
+9gGXUYckfnfjR78bs/BvEdkfu/ujW+XOPWvkNzv+0f9IpXHfX3Lbdy5c+dm
LdPdvlsmHe9XOp95oY0v9GbdS26hBk+m599a1DxYYl+7oTuz3E0Nd3nnvihu
3p/55u2vuucyozvvnrvmg5Km9ODfG9bvkMeMXZv2nx4ty5gP2rW/NaxUrJl0
7KubRwLb3Sr9G/cq2i+/6Xzhky1bD2TXvz27PjpcPL8ZmC8r6+9PVDCdBzll
6x0tYCY+POuvx/69080ILRt0863CpsaA08ea7a5ottUrGTeuZ5xZ1OO/F+Ky
862spRNjL/coZBpUWD8p7Wwls/TXnuumNSlsOsx+b/bOi5XN+nYtt/nzFTG+
MkWLVf6ripk7ZMXEKUuKmMwXBzZ+7M+qpvek2Ecnl4o3bfZM+WRYejVT59Fw
i4st4s3iNWmDjm/a49Zaf6tMm9VFTdPZf/kaHaxuena8vLRDdv3J3+C1xFOb
a5hpuV7u0mZqvDmx/suY64tqmh5NOsbMXRhvOqSv2x+amGQ+KNju8p+r4s3e
sm8cX9y/ltn04oS3j22MNw0qt3p1RdvaZuWY9497m+PNoLDpkvBIshm6JhhY
/m28Od9s+eBmbfa7PUv9dPRIcnHzTdWdd4ssOeBO23Fu/VdfJJjFfa7U3Pxz
yM3Xp2GnP0uVNr+N+Gls5vWD7opupx6bN76sOX2kxMmGlw+53edernTkRjmz
98PnRpbaf9hdVeLH5OfrVTSJPwwdUWPyEXfIvEk1hvZMNPPfr7c6mHLULdsi
rtZ7n1QyOwNja5T79qibkvfFPzvtq2w21/jxucxaaW7M0h0zk3JVNQvjvpj2
54g098Pbeb4OB6uZlEIDzz7xXZr7VavNq1dmX+csWDqnZ9MzaW7P7kdzT5ic
fV3TpcvjfW+luasutX7vg801zfzQsk0Vsjl0a2fLr/9MMsV3LCr73+ztz+Wa
8W3JUrVN5oGn1u/dluZ6C6+d29co2XS9UjBpztQ0N9/aVat+61PH/PPJ0pcm
tk5zW9RNHttj1oPmq2e8Xy/EpLmLEnZ8uaJLXTO7Vhnn9tdH3RMVWtTpf62u
efzYlXNnns8+v1eqLbgzPmh6jXq72P70I+6Neof97Ss4ZmSPHxO29DniflYn
z+nxqxzT6qXkGcuvHHZLpLz79owm9UyBjTtKNtkYcs+ee37Czd31zLjEhNaP
1//ObVyi1ZfL3s32v2avatsvLZX5GkuPmtWdn/lc7reUfXH39KRXL7k9gle3
LGx6yD28/tLhfbevuS2Wzxr0UsGTbpGWY4Y9FJfLtAumVRpb+He3WeLEjTtO
+k25pHXbcz9z1v3w+VxPnFqd23z72qTmF1aec4eWe6jS0C4xpt+g2FcbPXXR
ffjNwOThd/KZo1U3jOwQ8NzdFwMfld26WuazjXt1xeCk1YXMe0N/yOusv+YO
ffD1f11KLGwqxT03vEww09346bNxWdn9SNubFR9Ysu+G23xKk2v7Xilh3jv5
2dv/bp6d/5eKcfImHHRHzLl+evzH9WT+Sqt2vT+b2uGQjKeYVjL97g/FfnJL
Ls9z6qvBt/9nPsv52RMGjW35q9wvWfJwt/21Cma6s948/8CUmxf/Z7z7pO2n
N0xtnibj3cefuHnjk9Hpku8cWD7nXPf65930O70ffX1MHrneZLz6O5fWLT6w
7ZK7cUzW9E49Nkg+V6bgZXdjCc+t8MgXsT2LH3bH9z1e6MeGV9x5t1dMnvbL
UfeHqsu+Pbj3hlv6heA//pF22k1vm/BM01e/dC9fLtag7+Gf3SqpL42sfWOy
Ozfz46dLVz/kNsw3duGdiVnuzXn52m+9m+5+XaP+49/+cs0dGf5PapGME26f
doMbN+q22J3SrFFiv/Z73GJxo9rPPb/ZXRpT7W7uMnlM7j3veaZWqjvsrRuN
PouJMUM+W3Wm7pAtcv3wTu1DWw70WCz342r5nxy8ecE37u2tLRYtH33Jvbwq
c3nWrEVusuNPSqtxwU197on9n9/ZJPnof56qtOpO+jw3/9YjlUvW/dUdMKL/
+YHpS92/N6m/oM2Vs+7urjuPvvrqZBnvsqTWli0XgufdAefPFKn20n73+57l
8079cJWb8OnUEk+n3XaLNp5VtW6DNe6uoXOKjA7edeO2lZ80o8sKuX5p4O+2
ZVXbZe74a3+v2Cbmilt2/MDWM5atcH8u9cibh4tdc7e3ydzZomN2nte9e1az
QWckP1+TNG3M0Lrn3GKz5/TfNHSVe+IF3/yy82+6D7V/KTZfgxXu5ke3Np55
6bq7+maLF9bmy2t8bf/deV3seclvZ+2sVS221F/u/wGgspng
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
DJqJfIOmD5ohaBVdnu0f5c3HPAt327ace8zLvYLWsQ2rB80cNEvQaubH7+2M
y9p2paDpLGMb5yp5rWG6WZmzrRzfS4e7vemWD9oxaEXz2EmX+rZCxn0S7qfk
G/7Pwv0cuRD+D8P9CNlRS/djyq9lXOKV4Z/Slulr4X8/3A/aUgZ/wxxDjtQy
jLwOiTp9TX3DnTHCvwj/l7S1lu5X8KyW5X9hHyLjkIXNWpZPebcGXRR0cdDO
tgN+72p/wL/OtnuFoB10af8uxiXebebRL2jPoLXtjz2C1vL3uKC+ltc1aE2f
dbHP4P3uujzbzfJ5xnhazDZsaTuQqVu3pcyl//q35Xg6MmhkUO+gM4Muactx
zLOTrPeu1vUwn51o+3k2ynRnBV0fdE7QuUHDgk4LOj3ouqAzLOMGn58XNCKo
l88Oir45G/6Ee3O4fYIuDDrZ8mnfKbpdzLerPDumLcdcZ/PbQ76Snnl7sGUQ
xtg/1Tzg37Gmo6+Ob8vxupN1390yerblfKCME3xO+3u05bzi2XHmQfq2GDPv
teW4vMV60Jc32u7z5ftW9gkyBh2Jvj3KMObZ1ZYHv482jPIGWVeebWo69DOy
Ax25qHkvaX8jRxawjM19zvhApszvs47mQfqxQRfYB9dYPmPhWl365FLbQH2v
kBfwaaj8hX832VbyGm6f0T+DzYP+HGA6+nCg/QEvh/icvC63/ZRxlc9p/2WW
z7MrzYP057l2O6Cea6nvIuz7oN+DXg16rS3n80NBk9pyzj8W9HhbyhTCHm5L
efCoz770+RNtKZMmBj3Ylnk/E/Rs0MExdp8Kd/VWyqlHTP+V6Z60HsR9ri3l
1NOm/9QySfODz58PerktxxDyYLy8gN/3yjvafUdbzlvm9J269M89xiXex9b3
Id1r7E/acbW/X7TvmX8PtOU449l99g28v1+XZxMsn2cfmob8XrG+yMvXg263
jhuFzp3A3ihoi/BPDHeZoC3D/2C4y2FfCv8D4S4VtEn472N9yh42/PezTwra
KvwPYecIejTok9Dv+4ZOf5i1TtDe4V8/4twT/gWDtg7/pHBXCHos6NNG2tAe
Cf+U8O8T/rsdT/AX+Y0tB9sPspu15nSOHdqE/H5TXt8VNFmXPN6wrXc6zm6z
/SuYH3m9ZVz68z35CI/fsc/o2w/kNTx927g8e9+4PHvXuBMs/1Lb8JJ9eIv9
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
            "]], 
           PolygonBox[CompressedData["
1:eJxNlllU1VUUxv/3Xi5slYAcEbXSTDAbzBRnbbBMyiGLJisBs4FEEERtttSy
rLSiVLBMCnLOoR7V6ql6zVw9pa2ySVo91Mpcq6zft/Zeqx6+db9zzzn77LOH
7/wH19TPXZxOkmQXyAEzLUna+N0CesNvAq2J/9cLPgechH8HiuGzzfm3oB/8
IlCSSpLJoBr+NtjH3EtgK/xFUJXlrNwkeQpeDm7FgSvAQ/DRoAB+iv0PwEeB
T+EdYCH8SvM5/Xc/fB2Yj70M9p6E9wefcNb3oAQ+APwB/wLcDH8NzIT/k5ck
B+FjzM/WmQ+Km5/1DLgP/gHIjT2rzGOi2HwE+pjbkK2zBK8FfiH4hblz2T8U
3tf8bMVgFnykue35YAH8MjAJ3j/idbn5nP6rgT8GfsX2Au63Df4maOe+Z3I8
foq39uqOd0Y+5NvHkZ97QR/m+4IR8LtBL3hvMBx+jznXmovh80DPlK8pM6+H
I9g6HPlXPYgfAj3DH+WylPEr8LvM7y4bpfCXwV/4WqYa0N3MfekHLoHfDgrh
BWAwfC7oDu8GBqpWzNcWg0uj/nQ35Vi5Xg3SxGM2427wSnAOa/PB+aotc94D
nAe/zfwsrbkAfov5nM4cBL8DFKXcpyEx7ko8p8rts4o35zUy7h7n/QT/OXF7
U8CiTJLMAEvgk835MNBgvkd7Z4W/k8znMqAefhU4AF8PmuATzedOUJ+L4VPN
53RGI/x6xYD4VoNH4HtBC/U4Hft74NeZz00BK+BXgy8zfsbS6M9K8rdfNQuf
Zr52AFiuWIKNzDWBfPOcKDcno79UP+MYj416kv1j2D4DmlXroAz7O7LeH6qv
ctaOifpQPWpvedSb6kdzo8GwuO8GbB2MeEhjpDVHov/UX0fhp6O/dQfd5Wj0
2wTz2B0CdeY1q9rdDIrMe0q9pRhIn64Bf2Y8Rs2Rz7qM+6B4V4Cl7G0GBfC1
oCTr/+VH/1bh+6ro7xfAGmK5HTxqrkfyVRqpftUdddei0ItdYAm+1LJmp7k+
SEurQg+kT53wz0IPbzT3ZRkohO/QmP2nOW8D/C2dwfhzxk/ArzXPre64LOLz
DbHJyXh9qd7ES6MepY+jmK/8nz4Xpv0/6eV7oB77Qzm/01yfu1K+Rvo9FqyA
t4GHzfVcvneFfkv/ZVtraqNfKjIec/XPeHA47T7WRb/It4rop3HmtrVmkbm+
Kvadod/vmPeCfHzX/I3QW7Et6/GRPo5PeQ1L/17VHubOgi3wp821fQ899X7k
c17We069Nx1szfp/yu96UAufw5nPmeuFtEn/aW4GSOA7weuRj4HYmhr9doO5
VuqN3Bz9W5PjNaT+1h7tleatjn7V3prob9Wvek82lV/VhGpjJOufj3pR7W+K
+pX+/QD/MflPH6VlpxLXY+mzuDRwSORzedrf7NqIf2va/1N+pd96e2VzUORP
vdca+elhriXSUMVnDShWLPJcr9Rf8k2aI+3R+1HN/HDGK2O/YqueWxv110g+
p7G/3fyOumtr9HereW3+TjzazL8/9HYej/jqzdLb9TXjTVEvDbnuk3xTz6h3
/s76fr1fE1JeMyOiXxfm+RvdEfmTbdWQaknv18SU79F7Z+Z32Rv1JP9k+zf2
P25ec6o93Vnv5UZz3/SNsy7qUXu/AvvMIS6NldbuBicYHwcHzL93pL2qOX2/
vAE+zLrP0he9F4q99uyO86Qd7REP+STfFGP1t95T1YrePL2veq+kzcfiPZHe
KNZNrN8O32/ui87U2cqRctUQ/ajvG30bSvM6Yr20ryX8V7zUe/qGWBn9o7dT
32T6NvsX2iszew==
            "]]}]}, {}, {}, {}, {}}, {{}, {
         GrayLevel[1], 
         Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJwVxilPAmAAANCPhKNRLCaD1RvvG4HGhsUZRRFPwANRgWjxBxh08wad14a/
0Ed42+vPl9dKkRDCOrFoCN1/9ITwQJN77mjQ5p0X3njlmh9++eaPDrd88kWL
Os888kScLL3k6GODATYZJM8QWwyzzQgFRtlhjCLj7JJgjwn2meSAKQ6Z5ogZ
SsxSZo4K8xyzwAmLnLLEGctUWeGcJDVWuSDFJWluuCLDP6QgJ0I=
          "], VertexColors -> None], 
         LineBox[CompressedData["
1:eJwlxtcuAwAYgNHfCFVVYsSIVRXbe5ghNaOKeABuXNsxYtQMEn0GknoyT+Ak
Lk6+L7O7n9uriIgCydqI3+qISl/FQc1/HxIRh9zwxjuPlDjilg+meOKTO+45
JsEXJ3xzygtlnjnjh2leOaeOJBcUuaSeK1I0MEOaWRq5polm5mhhnlbaaGeB
DhbppItucvSwRC/L9LFCP6tkWGOAdbIMMsQGw+QZYZNRCoyxxTjbTLDDJH+k
iiKy
          "], VertexColors -> None], 
         LineBox[{1652, 4, 1655, 5, 1644, 6, 1901, 7, 1906, 8, 1911, 9, 1916, 
          10, 1921, 11, 1926, 12, 1931, 13, 1646, 14, 1670, 15, 1673, 16, 
          1677, 17, 1680, 18, 1683, 19, 1997, 20, 21, 22, 23, 24, 25, 26, 27, 
          28, 29, 30, 31, 32, 33, 34, 1385, 1737, 35}, VertexColors -> 
          None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
iV9Ypn6bZryAgd/HbjXWt/Og8e2apF+DAMzaJed27GZghd0fFeuVLVjU80nq
2EMBUhzPMddkMHDV08miMa4Fm/R1RZi+AuSJx/T6DjDA9IiZhqEWML5Hazjp
COB0mH/fZWMNBiIWH5MgfpHXc/e0fycfuwp//nZ7WYNel4yTq360YtGjGvVn
8XzE+6suqTerRcDWNXfsNduwJHnhsoOL+JiZWHe2+Ect7Ne5b3l/tQ3l/52t
3XivE87PqBWdJ+qweX6GvsivNnD9HAaezu3EvTy71Gkq9fC9IHX44b52zHyv
0cE83wHOoaTkbk491tGun1FjtSO/tWlIh9mOTQH/VQtpDXhaLrpNyqID0YnO
5TsU2pG2f03xsk4mHN+HJF5M6ACjgPZwbH0b1D9sXio9l42H68QTK8c78JJ+
QXXQsxVf74Xxk0jf3mCR/9TeuxMhG+1Ez51ogUXx9jb7JzRI+34/r2zPxOPm
7c+WzeqCfNkR565phKO5N7W1fFlw09n44R3haNHmE8e0VSgoFSUcrRhhYc/O
oC+DQ8Tf1eI0bI1Jf+ErewyfYMNordAu8JcQsV92NUXbUgg0/bD9eSMbt1L3
ZUSQ/Can7XRxYBfJJ3bhEts3kHNpHqvlEd+ZuTm+WYTktN4r+i4zX3Iww3hP
wzbiOwbzbx+cf4ns+RX33ozKckGlWUuVkP5SuvzQ6rBY0n93DeeXBHGh/F+g
k2KNEPbT9tuGpv/PF6yUuAIunpzVFbf+QZ6/XttpyzsKa5U5D67taoT1xq4D
y4i/vF9f3aJSReHSKp87f2mNaPa0fPyN8HI3PGlCh/TojSHb0444NCFFzjJk
kvTomYNu5hljFI5MtZj+l9GEUc6nb6XZQuw3ybLYTPKVXNy59Uo7mtG3L/ag
wX3y/A/rl4xuokMsb/6kLPGRwAOXUr8QH9H/b8kH9xA6ztIC8pdo8+B+aPXR
vVuFEE2OjGp+T8faj1/j9h3nIdVdP/6TuhCrXjKnCofoCA3Nxap8HnxNFZ9e
+y2A3sCpoHYzBuYcXb185cwWlFdpsw5/FqA2aL3P2mDSO2asSO7wakFp8vse
6asCzLyp5nS8igH+1uwn1SUtmLqq0kRxowAx78+0tqrUIDTRyzZ8WSvK+7pj
DSQEECg+Kp53vgbPBvT0klNaEbZT4uLAFz7uBHt9GRmqgcyZL4Y9f1pxMZwq
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
guPFxxP4/SQHRfnbbXeiYkWquObA6Va0G1kZP+gSQTpvWYD3dSp4DoLp34+0
QeaY74zMJjK+Zr6zUh7JWTJvHIVWpI8eh/0N/yxC96sYL51uKr631zg+sOhA
Zf6nO2Pv/72/rDjn1fwG7HKg383c1Yk4P25u40MRdo0pVE3yasCrkltOB2XZ
8D10Ir3dQQQj0+6Xm6sbcMYjQOLbVTauvO0+KTlPhNSs/rOitTSIHU/+Yk34
I0PfXr2L5B29AbW/MQk0RD+zeLCC+E7EkC9H3FeItBVDuvcnNcLihKqZUKIb
7NWWTxYsF+LGcqu+GN9GUKIujm24042XskkHi8pI/py8VqdzXhOY57qMzsoQ
HpvhvPjZFgHk1mVUFFU34bwo4L/KUA6cDkWu4N7n4xJV99CHqGYsuWi10UiM
1P0FQ7uYUR5izzgmuh6kI8fo3QiuchFV+r5WeTcPeerv3/TrMjDlh1F6F+mf
fq7phd03uJj3xtXngS0TMR33X/m686Cuu/tPwCsOBm3NtptGsyDTL5yRXc+D
8YFN5ymfu3G+XMMuvqEFXqc/8Uo387GDNVfjPbUL6fnD8a6721A8lpq/4zYf
W/NEd+NpbKiPnD4RINaBR2FfNv7HJnnMePCvVGonvivrGPrWdSJaIv7FInUB
zvs4nPT1bYeXR361rYCN98Mn5uzyFGCixP1qzNFWqCkqDuRIdqMsY/D0ldsC
pD0JOa1M6ita98wh6Q0cOB+/EdVH/OJmpd2slEMMNA4JxDMuc2Hnc93D84sA
peb1DUueN0Ms865XB5MHvteGslMVAhw7+Ph6+tQmmGkG5+ToCtBUXBEXkyJA
0LOetwdv09BputJ7UaIQJe0r1J7uEMB8RkTRulMkD8vencFji3Bud4fL5BI+
9rT3tDYeoSI278je49N7wWm8fNSRz4POaql7Nsso8Is6Sq0Z6YX+5PhFwdlc
yAkbr5rE1mHv0IGVCvYU/Fi2teO0NwMmZz/Id5M+inQdYcVKUlFl89r9ujcL
Sofq6nRJH00+eDgtfhMVN1YwNyy40YKhNpfg5q8iKOy9sWzQjfx+60D6pthW
LBxNiuvu/PfewSZr9wQqVgcettke0wa7ff6KejQRYn9tvxNaSsV5Q/Mb32Pa
Efr92XYbkoMs2oJVFAao2J/jrKF1uwO6f0p7JuWJoNgEhV6tBtztGlRtuNmJ
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
6uIgqXL9SIcNC6opdj3bi3jwr+QcujfQDd1l43u8M1pwPljhzXw1Pib5Tisf
HuhCkdp5fueaNoy8/B6xN46P729OuZQQ3nrTdFznQm87Vovxrqxp5+NT0NoI
+bedqAmW9vL83Im7D9lb56sJ8OHAtHUZge2YOXWDdHYfG/IzLjXLeAngZ1sf
YmzTisSrQqsZ87sRTY8/l5JM6jai79jqfSxMNpp8r4D48UdetaYL6YtS8cAQ
Ww0GqiTk7Bc+4MLvW7erJOE027xPGvOvNMN/z9GWVHHily2KOgKSa/wE1Y8k
6htRMH65ONWd6NZk81WHbwogdXeCl3+KBrpHrb9yA8m11eaukpsEyCjYJdWp
1wC9tdaW4oSnNg/PPvMhiY98KznRNMJPDkmcJ/ydvQiOm5r6m+TMVQt2hvz+
VA+xM7UiqeV9+FKpyffdxwWzS93EZ2sd1r+wK77b1IcP5ny9nGfdYEmvvfbu
XQ2Y9nvtXTr6UNtB/9WxmI3KB1e7jKu+IKTO7ZTBXgrCviZY+1sxMNP2ttMN
0kfznroiX5qKgxF3t7NusLDr/SSP9DERxspsDtSaUJFba/v+WWMLPIas183p
EcFBvP+vij8VGd7OdfcnWkHnctR/s0QQ/9C7piv733u1Rie5iu3IFtvvIlct
QqiRjfAOyUH73MwWtO/pQNntutdt/3KQTd++yWsaQKdceLnhbCfMjE3CB2+J
QG8uOL3tRgNKXXSErpvY0F64Iv+4sYjwyRw1zmgDEqf+eOheysaoi9aB5H4h
npf79aZ60pBe/3PbqCXhi8Prt04kCLGu4e4KMQENjpueb2rkdWFLx+G1y3SE
OJVirhx/vBH5nWfNk691w2HJNkp8vQD0TxoVtbJNuBaRWts4k4NEsY3NyiB8
MW/BxTxGEwYx4rMshgO/Wm/Xd4nk3P6ExDhkNmNZuv6C4TlcvGF++ryWzcPH
8XettuF0tJYK3n54yMUL58w5k1byIGf/QGNfNANbp0/6m6jEg508k59tzsXl
R6OFclVMWLfWWQfG8HC3N6iPfpiDi7tYlDfzWvByRq76wXEeoo48Lzp1pBtz
th198sOnFaLztPmO3nwcSv5+pH1/F/ST7RWWabdDZX/sD81iPr6eWWbpvZMN
9sfW9HkzOhF4TNh3fqYAv+4/u6nt2AGfnj0c5WA2MrVb16s5CtC369UCm7lt
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
+D/8fxRdUd0=
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.0010000000000000022`, 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           TagBox["g", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox[
          TagBox[
           TagBox["\[Beta]", HoldForm], HoldForm], HoldForm], 
         TraditionalForm], None}}, DisplayFunction -> Identity, AspectRatio -> 
     1, AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> True,
      FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox["g", HoldForm], HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox["\[Beta]", HoldForm], HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{0.001, 15}, {0, 20}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.500000000000001, -96.7741935483871}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -96.7741935483871}]}, {{
                    7.500000000000001, -66.53225806451613}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -66.53225806451613}]}, {{
                    7.500000000000001, -36.29032258064517}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -36.29032258064517}]}, {{
                    7.500000000000001, -6.048387096774194}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -6.048387096774194}]}, {{
                    7.500000000000001, 24.193548387096776`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    24.193548387096776`}]}, {{7.500000000000001, 
                    54.435483870967744`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    54.435483870967744`}]}, {{7.500000000000001, 
                    84.67741935483872}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    84.67741935483872}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.500000000000001, -108.87096774193549`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -108.87096774193549`}]}, {{
                    7.500000000000001, -102.8225806451613}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -102.8225806451613}]}, {{
                    7.500000000000001, -90.72580645161291}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -90.72580645161291}]}, {{
                    7.500000000000001, -84.67741935483872}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -84.67741935483872}]}, {{
                    7.500000000000001, -78.62903225806453}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -78.62903225806453}]}, {{
                    7.500000000000001, -72.58064516129033}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -72.58064516129033}]}, {{
                    7.500000000000001, -60.48387096774194}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -60.48387096774194}]}, {{
                    7.500000000000001, -54.435483870967744`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -54.435483870967744`}]}, {{
                    7.500000000000001, -48.38709677419355}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -48.38709677419355}]}, {{
                    7.500000000000001, -42.33870967741936}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -42.33870967741936}]}, {{
                    7.500000000000001, -30.24193548387097}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -30.24193548387097}]}, {{
                    7.500000000000001, -24.193548387096776`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -24.193548387096776`}]}, {{
                    7.500000000000001, -18.145161290322584`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -18.145161290322584`}]}, {{
                    7.500000000000001, -12.096774193548388`}, 
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -12.096774193548388`}]}, {{
                    7.500000000000001, 0.}, 
                    Offset[{2.5, 0.}, {7.500000000000001, 0.}]}, {{
                    7.500000000000001, 6.048387096774194}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    6.048387096774194}]}, {{7.500000000000001, 
                    12.096774193548388`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    12.096774193548388`}]}, {{7.500000000000001, 
                    18.145161290322584`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    18.145161290322584`}]}, {{7.500000000000001, 
                    30.24193548387097}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    30.24193548387097}]}, {{7.500000000000001, 
                    36.29032258064517}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    36.29032258064517}]}, {{7.500000000000001, 
                    42.33870967741936}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    42.33870967741936}]}, {{7.500000000000001, 
                    48.38709677419355}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    48.38709677419355}]}, {{7.500000000000001, 
                    60.48387096774194}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    60.48387096774194}]}, {{7.500000000000001, 
                    66.53225806451613}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    66.53225806451613}]}, {{7.500000000000001, 
                    72.58064516129033}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    72.58064516129033}]}, {{7.500000000000001, 
                    78.62903225806453}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    78.62903225806453}]}, {{7.500000000000001, 
                    90.72580645161291}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    90.72580645161291}]}, {{7.500000000000001, 
                    96.7741935483871}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    96.7741935483871}]}, {{7.500000000000001, 
                    102.8225806451613}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    102.8225806451613}]}, {{7.500000000000001, 
                    108.87096774193549`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    108.87096774193549`}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "50"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -96.7741935483871}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -66.53225806451613}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -36.29032258064517}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -6.048387096774194}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["150", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    24.193548387096776`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    54.435483870967744`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["250", TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 84.67741935483872}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "75.65369003479918`"}], ",", 
                   "296.1884800756218`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9327430974346237`*^9, 3.9327431294663525`*^9, 3.932743218764162*^9, {
   3.9327433637302647`*^9, 3.9327433827101936`*^9}, 3.9327436058365917`*^9, {
   3.9327437051536503`*^9, 3.932743737770504*^9}, 3.932920093667946*^9, 
   3.934378713200987*^9, 3.935918935179186*^9, 3.936019078138721*^9, 
   3.936711775430935*^9, 3.936714046537157*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"3625816c-cae4-46dc-9c60-606aa1277e93"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxlnXecTFcbgNfqndHb2l1trV0xQwjCOSGii4SQiOi9k+iiRQ3RhSjRRYiE
qwTRV+9W20WU0VltrF3dtzbznPu77zf/+D3OvbN37jz3Pe+pE9Km5+ftAwMC
AiZnCAh492+XluOuf1u+jzoV/e7VRw2/0CWySL2Lfm6jVrUZkcZXPc7Poerw
quKV75R56udApZdn+jZWvTL8dcOBZ9r9lkLDP9fv9vhi6dSGT9ZpmfmLjekM
Z6r1ecmjVTIZrlkj6bU3q+GPQuatabE8u+FLC2Zuz98lh+HBQZOPnI3MZTjv
/HHnpz3ObXhDgZG3G2zIa/jzOYMTMgzMb/hh3r6p9n9Y0PDEWT1cPwQEGS6Z
u1Ow2lPYcNtDZWa9jgo2bI2P/PXCshDDKWqHL9s8NtRww3Ql/pjVuYjhBfuL
rOtbt6jhB2OCtzSKLGa4yieFdrmzFrevJ3X+A1kf23xhT+7j96NLGA4flePs
4fVhhgdWz/bv7z+XNHwgMPP1sQPCDefZnf5e+2alDHd49/V+GGHfL53yeUhQ
pOGA5Fdpw69+fxxdv01D//ftFb54hS9e4YtX+OIVvniFL17hi1f44hW+eIUv
XuGLV/jiFb54hS9e4YtX+OIVvniFL17hi1f44hW+eIUvXuGLV/jiFb54hS9e
4YtX+OIVvniFL17hi1f44hW+eIUvXuGLT/jiE774hC8+4YtP+OITvviELz7h
i0/44hO++IQvPuGLT/jiE774hC8+4YtP+OITvviELz7hi0/44hO++IQvPuGL
T/jiE774hC8+4YtP+OITvviELz7hi0/44hO++IwvHya/XhlfYHyB8QXGFxhf
YHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhfYHyB8QXGFxhf
zPX4fYHxBcYXGF9gfIHxBcYXc7/8vsD4AjvjS6B2xpdA7YwvgVrkL1rkL1rk
L1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rk
L1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkL1rkLxpf
xo1990prfIHxBcYXGF9gfIHxBcYXGF9gfIHxBcYXGF9gfIHxBcYXGF9gfIHx
BcYXGF9gfIHxBcYXGF9gfDHX4/cFxhcYX2B8gfEFxhcYX8z98vsC4wuML1WS
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
X2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhcYX2B8gfEFxhdzPX5fYHyB8QXG
FxhfYHyB8cXcL78vML7A+LIr6t3rPeMLjC8wvsD4AuMLjC8wvsD4AuMLjC8w
vsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4AuOLuR6/LzC+wPgC4wuM
LzC+wPhi7pffFxhfYHzpnzz+WMb4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8w
vsD4AuMLjC8wvsD4AuMLjC8wvsD4AuMLjC8wvsD4Yq7H7wuMLzC+wPgC4wuM
LzC+mPvl9wXGFxhfsiTnv27jC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALj
C4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALji7kevy8wvsD4AuMLjC8wvsD4
Yu6X3xcYX2DnfAa3mM/gFvMZ3GI+g1vMZ3CL+QxuMZ/BLeYzuMV8BreYz+AW
8xncYj6DW8xncIv5DG4xn8Et5jO4xXwGt5jP4BbzGdxiPoNbzGdwi/kMbjGf
wS3mM7jFfAa3mM/gFvMZ3GI+g1vMZ3CL+QxuMZ/BLeYzuMV8BreYz2D7AjvX
T3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvX
T3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvX
T3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvXT3u0c/20RzvX
T3u0c/20RzvXT3u0c/20x/gCO9cfecT6I49Yf+QR6488Yv2RR6w/8oj1Rx6x
/sgj1h95xPojj1h/5BHrjzxi/ZFHrD/yiPVHHrH+yCPWH3nE+iOPWH/kEeuP
PGL9kUesP/KI9Ucesf7II9YfecT6I49Yf+QR6488Yv2RR6w/8oj1Rx6x/sgj
1h95xPoj2xcYX7okt6/LGl9gfIHxBcYXGF9gfIHxBcYXGF9gfIHxBcYXGF9g
fIHxBcYXGF9gfIHxBcYXGF9gfIHxBcYXGF/M9fh9gfEFxhcYX2B8gfEFxhdz
v/y+wPgC48t//1/O+ALjC4wvML7A+ALjC4wvML7A+ALjC4wvML7A+ALjC4wv
ML7A+ALjC4wvML7A+ALjC4wvML7A+GKux+8LjC8wvsD4AuMLjC8wvpj75fcF
/u/f0obDj1YZPLr5EX99Eq3Kd5p7LMX7NwxP+bNs4d6/Pzac5vd8TVtvemZ4
8JK3kz7b/9bws2N9rgV3Tanhckfav53tS2O4x8EvC2QflMHwyn11K4xPkcWw
r/WC34fvyWZ4ypXZf384zmU4ouW0vc/q5jR86N8Jp9ZnzW24Q/PRV3udymM4
1YWhDyNm5TO88KsBr283K2C4akzvjMuCChk+36RrvtbeIMNbu1jTszQKNpwh
/K85ceVCDDe7s2rRodyhhle8ez2z+VnHZX+NOV/E8CclFm9st7Wo4Z9v/rqt
2q/FDF9fNndP8PDi9v1rP/vwm9YlDI8sOjP6YvUww9HXpsZuKVbScPCSSVdm
pw033KvNhFv97ti8PWTcg8aHSxnOcnXUU8/qCPvzLBzxKtvkSMP48V/+Emf8
gPED5vj/9nNINMfDHA/jE8z5/80vD9CcD3M+zPkwnzco+VVWc382JI+vl9Xc
H5jjYefzIPfns+/Hfyz325LPTzWx35Ys94rnyyX245LPm9z/Tz5/cj9A+TzK
/QHl8yn3C5TPq9w/UD6/cj9B+TzL/QXtcuOT43mX+w/a8YDjnfFA7k9oxwuO
d8YLuX+hHU843hlP5P6GdrzheGe8kfsf2vGI453xSO6PaMcrjnfGK7l/oh3P
ON4Zz+T+ina843hnvJP7L9rxkOOd8VDuz2jHS453xku5f6MdTzneGU/l/o52
vOV4Z7yV+z/a8ZjjnfFY7g9px2uOd8ZruX+kHc853hnP5f6SdrzneGe8l/tP
2vUBxzvrA7k/pV1fcLyzvpD7V9r1Ccc76xO5v6Vd33C8s76R+1/a9RHHO+sj
uT+mXV9xvLO+kvtn2vWZ8c1Rn8n9Ne36TtZf/5X7zP2jfuL+wHx+mM8Hc/0w
1wdzPfJ6ZX34X/krcz71HcdLLphc/4UZrlP33auk4X7Jx4dr3m938vhKGVMO
8/mSp782cxt+lPxyaz4f5bwfzPvB3E/Od95fj6mvKXfeb4+pr+Xfh/n7MH8f
5vnh/WDyBed+Vx5zfZQ7v2/7emDn9+3Rzu/bo53fr0cTL3h/mHyE+EA5TDnx
gXI+D+XcP3n9MM8zzPXDXD/M9Zv75feTv0c+BBPvYO6nybf891uWy/aP/Dyy
PSTzO8r5PJTzeWA+D8zzKMt5P2c+4xX5ilfkI16Rb3hFPuEV+YJX5ANeUd97
RX3uFfW1V9THXlHfekV96hX1pVfUh15R33lFfeYV9ZVX1EdeUd94RX3iFfWF
V9QHXhHvvSKey7/nE3/PJ/6eT/w9n/h7PvH3fOLv2fupEm/xhXgLE29h4i3n
y/gqxx+Ilxwv4yf9yc762u5/JN5R/8K8P8z7y/j43+e14x/s3P/P/nuwc/8/
u78Tdu7/Z8c/+q/wC+Z6ZH8a8Yfrgfn7MH8f5u/L+CX7Y3j+eT+Y94N5P9g5
vhIn9qeNE/vTxon9aePE/rRxYn/aOLE/bZzYnzZO7E8bJ/anjRP708aJ/Wnj
xP60cWJ/2jixP22c2J82TuxPGyf2p40T+9PGif1p48T+tHFif9o4sT+t/f7k
S04/E5XTz0Tl9DNROf1MVE4/E1WGd/Ggyhl//nVRlc7XtUi1T7l/F9WQmI7h
we4iho/Maud+4ypqOH/T1h9cjLe5SeOk1xDW5z9Sy3N89rWnRUnD8Um1ZzYd
bvjjaXU6PwgpZXjaZzV7HUkZYdib7eP+K2/YPHTNtdx1vt/qz193m+uHKed6
XnZZYY1ffdWU92o/6e7ArbcN32z5XWiXww8Nl363bK77E8OdwoNrL4tPMLyk
RI72hYa8MHypaJoRM1O+MZxp6pBjY/YGaHhl1n4Xq40PNFxzUs+7b+qlMnwj
U+dnW7KlMTxyQps0/U+nNRycoXnOsrPTG9427ovQh19nNPx12k/LrCqc2fCz
0bWqdryWxXDdwJDlUxtlMzxnV6HVPd/Pbvj28Pzr6+dxGa6g8/xT6rnNo9/m
2J3+Qg7Dp7dnO3hra07DoUMzn9j7ay7DvatkOLdkeG7DO16luTSiTR7DWbam
vNHy47yGmw8OiKtSPJ/hVZVe+wqky2/4+bvXHZtrbU4IiDlcwPDPA56k3bi6
oH0/KzzKMmNyIcNlE+Ny9ekdZN/fjXcKNmxU2P78lZ5kn5U/2PCUOb1zjZlg
c/kXSRHqlc2XvupRsF33kP8rx7cxm+MKN7pkl/M8wZRz/OkBd4q7d9rlPG9w
0Q9uRmZdbDPPH9wn0Vvu/g828zzCuzderny4fTHDXXK3UFvO2pwtSc/faxY3
vOlMs09mb7K51fuxtceWLGE43cym9fvNsfnP+DMN22cMM8zzD79ZF920+n2b
iQdwvW+Ptwg5bjPxAZ7nOdL+7RqbiRfw3ccHuv07zWbiB1xp7d5v//nOZuIJ
PK7X7kG/NIk0HHlCDx2332ZnfGkj2s+7Rfv1ougvlfHGI/pHZbxxif5SGW8C
RX+pjDeBor9UxptA0V8q402g6C+V8SZQ9JfKeBMo+ktlvAkU/aUy3gSK9oaM
N4Gi/SHjTaBoj8h4EyjaJzLeBIr2iow3gaL9IuNNoGjP2OX/1be3RPwJFO0d
Oz5xvDMeBYr2kIxP0eZ4znfGq0DRftot4lW0OZ7znfErULS3ZHyLNsz5zngW
KNpnMt5Fm3goz4ed8S9QtO9kfIw28VOeDzvjZaBoH8p4Gm3irTwfdsbXQNG+
tOMvxzvjbaBof9rxmOOd8TdQtE/t+MzxzngcKNqTdrzmeOK5zN8439n+tOM5
5xPvZb7H+c72qh3/OZ/jYcplvsj7Odu7dn3B+RwPUy7zTd7P2V626xfO53iY
cpmv8n7O9rZdH3E+x8OU837O+ihQtNft+ovzYc7n+02uZyKfmu8L5n7D3C+Y
zwtzvbAzH5fjibtF/i3HC2X+LX8PTObfcnxQ5t9yfFDm33J8UObfcnxQ5t9y
fFDm33J8UObfcnxQ5t9yPFDm33L8T+bfcrxP5t9yfE/m33I8T+bfcvxO5t9y
vM6u/8iPnPWlV+TncvzOrg8531l/ekX+Lsfz7Hye8531qVfUn3J8z873Od9Z
n3pF/SnH+2T96BX5vhzvk/WhV+T/crxP1nde0R6Q432yPvOK9oEc77PrKz6/
s37zivaDHP+z6y/Od9Z3XtG+kOOBdn3G+c76zyvaH3J80K7fZP8E5zvbJ3K8
0K7fON9ZH3pF+0WOH9rtGc531ode0b6R44l2e4fznfWfV7R/5Pii3R7ifGd9
5xXtIzneaLeXON9Zv3lF+0mOP9rtKc6Hqa84HqY99V/9ktr0X8r+TPpLqX+S
u4/Pl9V8vzDfF8zfh53z2eNMe4/60/n7PYlifpD9e2L0lzvbh4Fi/nycqQ/5
vM72oP17dvw9jk9eTvjzG1Pfcj7XC1PfcL+d9U+0aY9RTv0jmeNpn1FOfSTZ
5O/+9hrl1E+SOZ72G+XUV5I5nvYc5dRfkjme9h3l1GeSOZ72HuXUb5I53lmf
RZv6jOOd9Vu0qL+iTf1l7r+jPosW9VW0qH/s9hLnO+sXu/1DubM+sdszlDvr
j2hTP1DurC+iRX0QbeoDjnfWD3L+wisTD2S+y/PijA+Jppz80zm/wf59OMZ7
nPM37PEeOd9ZjkczXkL7Cub5y/ZuOdVkO97A1CfEF64fxgeeV75vEw/8+QhM
fgE7v1+ZH8j6367fOZ/vA6b+5fuCZXuQcli29yiHZfuNcmd9add/lDvrQ7t+
o9xZ39n1F+XO+syunyh31ldeE0/5fp3tLa+Jr8uTxy9TmPFy9jPi+DfJ+zPa
+xvJ+oj3pz6Sfw+mfwffnf09PtN/Y8ZvHP05PtM/Q7mzv8Zn+l8od/bH+Ex/
CuXO/hWf6R+h3Nlf4jP9HZQ7+z98pn+Dcmd/h085568kiv4Nn+lP9SbvD/Rc
zMe9ZepL4oOz/zFa9DdGi/7FaNGfGC36D6NFf2G06B+05xty/c7+PZ953ol3
PO8wzzvM8w7zvMM87zDPO8zzDvN8w87fw0s0/UPkM87x+Fem/4dy5/j8K9O/
Q7kz/r4y/TWUO+fLvTL9L5Q758e9Ms833z/xlc/D80058SY5fcrt0cSvPe+m
J1Qvq7k/PK/cH5h4xvPprM9l+1O2J2X7ULa3ZPtJtodk+0a2V7ymPuyUXJ/Z
8zNg4hX7aXH8f/vh28x8DvIN7if5Bkx7Fqa9CtMehWlvwuQLMO1BmPadZNnf
RLlzvDdO9Ed5xfiNV5145+uGk/74cMOMp3C+c3zFa8ZTKHeOr3jN+Av1C+Mr
HO8cb/Ga8RiOZ7yF453jL14zPsPxjL9wvHM8xmvGazie8RiOd47PeM34DceT
n8r+Q54n6i+Y9ixM+xSmvSmfV/yj/UN7j/YPzPf333mpxO+HJpr8GD+cvyea
aPyl3Pn7oonGZ8qdvzeaaPym3Pn7o4nGd8qdv0eaaPyn3Pn7pInmeaDc+Xul
ieb5oNzZXgzU1HfkJ+uTwsPM+nuN34wf8v06f4810XzfvL/z9xUCTP5C+9P5
ewsBJp+h3Pn7CwEaPyh3/h5DgMYXyp2/zxCg8Ydy4lWp5OsNN58fP2DOd64/
jzP3g3zBuR49zjzPlDvXp8eZ55dy53r1OPO8Uu5cvx5nnk/KnevZ48zzSDmf
l/hN+4l4TX8NTP1HPur8PZOk+tafP+ELPsE8n5zvHH+OFuPN0WJ8OVqMJ0eL
8eNoMV5st5eJN9R3xAvqO1mfw7QXYNoHcPH+7zU4tf0P//VbiucDrnGpf/ZV
e2IMUz/A/8R8U3vuqcuGZ99ZtLNG72uGs1wf++z94XcNn7o54+K2ZzcN17o6
KOefaR8YrvawfN7p+x8ZHhJXslzGT+MNX+5epvinE3yG8yeFp/2uBMN/Jz2u
P5xNNOy7mbXby29eGm7cKSmgzHlueHL79IP+DnltOOJ64Lhvb7yx78ejFyf7
lme8xFLt3W8OzWocYDhwTWJMo7yBhj/rGX/Z/cLmB/eTXttSGV5Y+vHNrBdT
Gq66+m784QWpDU/sduvl7yPSGA6/dyV9hxrpDF8olXSBbdMaHrDy32wfl0hv
eH/n83lC02cw3O72qWKXjmQ0nLvkuaCAe3b5+t9ORGz9M5P9eToeLTtnSmb7
em/s+6hJ46z25yt+qNKAPlkM949uXTR/gWyGgzxXSqSfaHOPpOhwq3t2w/um
tij17JVdnjMpPJ69ZJdvXRP7/t5PXYYz9Dr74RJ3DvvzZPuy4vqddrl1vLGe
ttgu//K9U9VH5MhpeMWD43VaPrU5YHJSwBxlc4N3rw65DCesPvJZlXM2f9w9
KYHYnNvwr5nrfhFRy+a4IzWbZwjPY3haxL6Wz+fY7L23u8O5IXkNV5r4cdvb
GW0eV/ejLvvu21xm1Y7uG1rkMzy0y9bvpuv8hmMyVO299Lhd/u7rGLnWLj9S
cvPg3qEFDBe8s2Hkp6kKGv5ufIVhrabb5btrlRtTta9d/q56iLxp86aOf03J
eKCQYVc6908Fm9rcan/kjBcfBBlOk5Qe3Pnd5iY3V/y6f0Jhw3+OCZ8bk9/m
VzWSGsivbE7+p3yw4UGez87u+s3m5YHTGtfpaXO9NklCXLE5eNrx2DV5Qwwf
eFz/3wXjbY7fNenrsM9snheSuWWe3Tb3+uzIlUkvbM67ts7177uGGv54RFIA
L2vz3aTH8+kSm981l7tdtLlDr5r3vq5fxPA0Pa7z9Zw2V1qYpvup0TZnObH3
QZ3tNm9872NfxfeKGva+HdVrd4JdPq5lyu/WdrTLm0/e/TRsoc2pHurnebIX
M1xmx4j+C2Ps8piggMGTa9vlfzTY8SrNSJsb/1klIMFn8/ChSa8tNhe/9GpE
91LFDb/IvDXljbY2L+5eKe3p0zYfe9cdMc/mfvOfj6ubuYThOkc3ZYiqYbMv
okIWa6PNQa/7T6w01OY9zRMml3xo8+yJG7IvKhFmWMeVzTVlts3dkh6nvK1s
zlnwyc9pT9p8u66Vd1j6koanrCpTsMcgm7cO7j0n4SOb21x4OP+GZXP5jH8V
/uaezZfepevNww1nqNxj0ekiNltz4pZGzbB5zKFVxSsftbl0eNKrainDzV4k
PaGpbQ5414HVz+bT41dE5vvL5iF3irvTBUcYXrE56YG+ZZc3zHfTGvalXV60
9rJyiVNsPrKiyAc3U0Qafjag3cYeB+3yX2O8m7+pZJf3Tre48pk+Nien09ds
/viD1tvqrbLZ2f60xPxAS8wPtMR8QEvM/7NE/mWJ/MsS+Zcl8i9L5F+W6B+z
RP+YJfrHLNE/Zon+MUv0j1mif8wS4yWWGA+xxHiHJcY7LDGebonxckuMh1ti
vNsS4xWWGI+2xPiyJcaLLTH+a4nxXEuMz1pivNUS46eWmN9jif4LS8yfscR8
GUvMj7HEfBhLzH+xxHwXS8xvscR8FkuMH1pifNAS43+WGN+zxPidJcbnLDH+
ZonxNUuMn1miv80S/W2W6G+zxHiJJcZLLDFeYon+OUv0z1mif84S/XOW6J+z
xHiHJcY3LDGeYYnxC0uMV1hifpUl5lNZYv6UJeZLWWJ+lCXmQ1li/pMl5jtZ
Yn6TJeYzWWL+kiXmK1lifpIl5iNZYv6RJeYbWWJ+kSXmC1li/o8l5vNYYn6O
JebfWGJ+jSXmz1hifowl5rtYYv6KJeajWGJ+iSXmi1hi/ocl5nNYYn6GJeZb
WGJ+uiX6iywxv9wS/Z12/KC/yBlP5H4cdnwx/Y2OeCP357DjD8c745Hcr8OO
TxzvjFdy/w47fnG8M57J/TwsMR/dEvPPLTHf3BLzyy0xn9wS88ctMV/cEvPD
LTE+ZInxPkuM71liPM8S43eWGK+zxPicJcbjLDH+ZonxNkvMF7bE/F9LzOe1
xHxcS8yntcR8WEvMZ02Kd4OP3807d87/zSctemzunEMTx5h490HVLI/bfjRF
nc/4+Ya69+z1x8SXH/+amvF8jNfElzVhdVXo+usmviTmuPFDg8M3TXyJThib
fkv4HRNfdq+/sbq5957J16Zn/nVf64c+Ey/e/6rEhmNNnph40X/h3EcVg+JN
vEibJWFD9XPxJl7sXPnd6arD7P7dgVaKu0dzJJh48bTEgaUB0xNMvLjed8fI
ri8TTLy4UL/g6Qr17PV+BYO+mRc+OlHdK/UwomCW1f7+zLR6/rGCQTfnrVdV
kv3PpOM67XieK+wfNTC5fy2b9rjL1G6VchfrTfTs/eMz1fpxj0ruTk2K048m
Tn+eN/cBlfx2Y/PolPfW/Tt5xmGV3J12NZ9+1PqfE2vjj5nfV89TJqrTvhwn
ze9nN2vep0zrKdHm95E/Wp1jRud7p8zv3146Unz6zyFnzO+bhty7HxPoPqv4
fcP5mSv8mCbfOfP7hDNPLmiZ+vw58/tzfzzNfLdC3xjz+2L7WzQY2jcuxvx+
1OVRLecHVos1vw/U93Sm/B0GxNq/BzMp1YMa02LN73sErMu8tW4Ss7//sL3R
LbMNjjX784dFhs3K/Gms2X/927i4tTOyxZr9tZeWnFDp4K4Ys39ygaMnF//a
LsbsjzusZ6eiMS/Omf1P99UuEp5hzDmzv+VFT50OqzufNvPZ6vf5Ji5h/ikz
H6HM14HPFrxx6ReLJy6aveaiuvnii6YPfTn1zmL9Jg5ocUWdi5m28aOhIXrM
X+sTWkc8Vi/ONrx3a0io/u5q6YKdW/rU1nI1NlT+K0JXrPfVpErzE1WjbmFL
00yJ1M8HXEq9Z2qiujP8dY7+qVeq56+6zf85a1K9Hxgx6nq9dWpzMWtE27SZ
9Sej+7Rd8+EWVbrVmeUZU2bX30S916jLsZ2qf/TBqK2jcuhOJb566p27R7Vb
cmj4b2lz6w8Pzrm5ptsBFV/smyMbfsyrG32d6cKssCPqeJEHQTcyFdB9Mw4v
8PGW4+rvdksTP/upkB6Ssu97mcedVHrnoWoLUwfre43rjG+c5ZRqFpBvTbbq
Ifpyy5rBzbueVsPz9c57cGiontKmSrUf5p1R9RLufbt6UxH9pn6P724sPKu+
31atyvpHRfWWp9e9GQaeU1lXZwm5Vry4nvv5B7emF49Ry8f8MaDu1yV0hRtL
O95eFaMu1Cj6IM2kMO09+mjxo4yxKmXA3FHldpTUYzylws/XjlWxQWtCEx6E
650b8y+50ylWbZxccVmPQhG6wsASo77sFqsOzd3ae2edSJ0j48yyVZrGqrJL
N/bP1L+0HrZgzfLBEbHq41lTJ/Ze/J4uU6L5wq0PYtTBrUFpx3Qoo9s9+P5S
54Ux6tK5cv8OellGR1SrfWh19Ri1qeEvZ0KnuHVCwLWxfZN8z19scvlxRT36
9NRvRn/X4ZzanWq8a/0mj+7e9sxvOcefVlPz7cyeUpfV0+rOaLBm/yk1r8n7
4dOiy+qbnpVDpmwK0J3z/tK8xa0oVav3kAXd1gbqhJE5160ttU99ENJqV8+s
qXTQpusrIuL3q5g1s9fWGZBGp66zJaHmd4dVs14lGqVunlZfO5e+1oCLR9Tk
C3cK1micQV8rXafpInVSDV/eMueyXzLoCu1C0j0bcVKlif20cbXzmfW0huXz
Het7WjXZfOVGyKRs+qv7mT4+0uycsvY26LM3zKXfz/pmzZT959XQxxmvft9p
kgqvtbnDnEcv1cj+83ucbDdGHdwYMX1on1fqWKVSWWdl/VUdGbb0RZvRgWY+
5Yerao7aOGy4yWdeXmo/osORsSY/va6joyoVP6VeVvrXXXS7Pd5AvtpzzYNp
i/48Y/LVlVvSfdNwaYzJV4+lT7U2OuyiyVcTsrVJ07v8FXV31ZqGmZPqk20J
IY3bJtUnWWtUzeLx5dZDv2iVp2+sVzWJ2pv1w4l5dfvy9Vc+G3ddVbeWlDt+
K6+ueP/DC+PvX1d5h+RbOaFIfh3/3ZJb59vcVIUyXGqy8kZ+Xfpar/k/fnVL
NQw4tb3GxgI6OH7jhCXdb6vPx30eF3O/oO5gvc5slb2rVvRfO/aYKqQPj061
ZvD5uyosy4GfOp4I0hUO7V/x4mWc0u8ND53nDtbNyhyMOZn6oSrea+SJ4WXC
9PgpRe+l3JygDjYJ23Ti8zCdZcHw26lvJ6i2RYccvVKgpI7vF3qzZ1Ci+qFx
+3VNI0vq5dtndvi8fKL6tNhPbfemCtdfZOh6rHXnRJXGG3HxQPpwHbvt1Qt3
r0T1/ojKHT6/Ha6zePcd+nt6ohqwLzJh94FS+v2mXb70LU5UERUqRi1fGaEb
urvuWp/ECQ8udj/7U6Q+vWJF2iUzEtXyqB+bLJ4x3syf7ZjxYLeLH59WdTfF
zK88o6zZf+TnL7+q/CapHiAf67tw0byCn583+ViPmSXaZ3rvksnHZk968Hfp
fldNPvZg+srZK3dcM/nY5Y9WDBn39w2Tj52L+iUk9+NbJh+blrLl7aaD7pp8
p/PdmDzBhxJMvrN74uWzR4rb+yHd/6psmpVdE9X26Gvv13v///crGBW6Zdn9
9A9Me6T51o5pFud5ZNoj6Z8cav2m/GPTHom+GtrX19qnapYv0Kb/6P9fz799
VkK+/XPs9fz972386/pCez3/w39+uFopqXzd8qOfx4bFqy+m7hm5LsVG9btn
n7ffrz6VfcfJmKFd16sZ+4s2utQ4Qf29YPOzs403qUqVchz98odENeXXoLXF
d21WFYbl6Df57At1qa2ul7LgdvW8wR+Lc+V6oZa3f1l9dNZt6scfw7t0975W
6bKkLRXSe5dyRe2oERr8Rq2oeKJ7jcW7VKMhTd7OORWgv+q+vJn7bZQqfKp5
tmztA/X2ybtWFzi3V814E3Vm+7RUelzvnsPuLj6gUj9JOa/a36l1icHN9yyr
eUgNSbPx77Rt0+n1pTPEdFl/TJ0t91fLXK/T6Z3/tln73s7jpj9t2bE/bqfo
PNz0n326MsOiqIo/mvbJ1T3fp+zxdrfaWi/rsvw97fWwtEfG6KBfrDz7TXuj
wZuHXS+4j5j2xM9hV2Mj255USzN9tOl2YiHtndjmTr8r91TGZiNSf7siTJ9Y
uiLuZMpEtXt2jUfDppbUVQd2zdKnYaJakyLX1UZJ+dkC15Z1zZPyM/pzLnQ7
9nrAZ/1Mf86WiNKbt3qHm/6c7q5hbyaUW2Ta57l69fXtfrTHtM+7xLx3r9vQ
g6Z9/uXzc7tnVzuuVP8GE24W/EUlupfNyZYjpe78+oOV5TP8puZmf9m2Zda0
et7Ykq1HZz6j7ub5cG+/5x699Ez6HzpHzjXzB1b3m/zR8czZdKueiw4+7HrW
9Pd8/0WNSVPvnVULbxXK3SJNdh30V3jp9A1jVPMcv01v0Ty7jlmTMXbO6xjV
5qvCb86lcOmPzy75qH2f86Z/aMiVgLMrFp5X7Tt/sH1OvEvH1DlQf8X8i6pR
ndq7x0fl0GNOLiowx31JbVh0eODMxBz6k8EZ5ur5l1TTxgMulJuaU0dXvjPv
xyuX1ZRLs9b2+SaXnl+xiu/p2SuqUKHQH7I/zqVXDP2+0tsJV9XdDh+MyBGW
FI+nnRt88dhV075QRz7amn6Bvf/YlKZ5Su4el2jaG5n+rR24aVqiKh38bfVM
aYN0t/o9Vv2QcM+0v9KUPJKpUb6Hpv217acWSw4se2TaXyOXF1UFDz9WIyu8
X2b8+f+fXzkk8Nm82Q+SnrtFVxb81a+I7lDxaPNhLZ6Y9tmfHcN7Ftn6RA2q
lTCwTreiemh8x50Z3fGmvZZn5Igv/h4Sr3pXzFWmeatiOup8dPPyT+JVkasl
c3U+Vkx/UrvhgRujn5r2XOgProgJkU/VWRWVaebnxXWG0KA7fyx6qs4kRn7X
dUlx7Rr+SeGsWRNMey+m66SoXEeeqovDspa0qpXQ3orbNi+rmKASsuxI6x5U
Qg+s4a3VdXSCaQ+6a8/wRjRJMP3FqV6Gxo9dHWPar/0ujctYPsV9VSjt/udH
nhfWuU6GtRrV/4GK+qfgzdAXwdo7/UBg5amPVK6D68vVfxusV6ycPOj4z4/U
saXVoqruDdH3hu++ETDqsbocNLX4gNchOsrl2bluz2NVo//vFcpMCdXuGTsj
Jwyw9zcq0sW7p+k0e/+59hdyNfop6ft+nK9KvRNVI3S/jh923ZhU/5Q/PvJc
iuBInXnwjwPHzE1UcQPPubIPDdbdqm3+/uzJh+pt+GzfuZnBunfIjQ1tMjxS
xbYXm7KpZYg+/fO8AXUzPFaLr9WuuCU8VGeY2uNK2JvH6o9tHe4Hbyuhf1oQ
Fvbi1wT1XcTx+B/ez6QbXAsZXb7UKdO/kJAuW0TvFqdV4e87t2j3Xhadr5M+
+uqf02pL3fxFFw3JmpQnD43aGHtGqbSdGj1/FqTjMkVHVYu8ry7Pbdmg8JzC
enTd0Z/Pen1fXUo39fVPd8P1tj+rLAtLqm97taqbstmXpXTthiMrNk/K59dV
HTlyx9FSemTxqaENFiXFm7jsx8ZVjNA9yjcZ8/vSRHXkny6bwr8poiOaHqjS
sukT1WTfw1ObXobqLHm8scOe+NTXc6aUSBdRVH9fZ93aHKHxaum2W7lHxBfR
6T9rUubxrSfq+ifpqzx4WVQ/evBZ2l1X41XOt/1fVYorqrNOUL2DTsar1C/u
3j1xuZjuNL3esuBJT1WmbD+FTzpeXF8/3Orf/KEJZrxi3avCrx8/jjLjFUXb
bVncrNoBM14R9GGh3V+uPmrGK8JLdeudtoU9X6Tc1c1l+zY6o96WmBjapHkp
vcRafLHcvET1UbaiQSerblUJ6/LM/Hp9f1Vh8+pq7z07rIrHnshZS49Qdbu2
eXJ28Vb1JEvopSu7+qrzpeIf57x0QXVrHVfz+cAxKmz9nn7bR51RW75Inylv
teEqMsbT+MDaI2pG/1r9d7iGq3oV0uyr6jut7k8aplMcH64y3q3617GtF1X9
kkOGZLg5Rv09e8SxP4ddVWd33q10uulwVXnh5JYv46+r36aE5Pmi2Ri173m+
BqMvX1X1/115osmGEWpsx6KDrz25p3pVymvdu/+jerXi93I9c91RTabV1eOD
J6nvq+66OnTYDVUshT5Z98R4Fd5/xYum/W+r0r98O15NGKuODYrcv2pXnJpd
temKk1lnqpvfjold+eFDNXdQ2prrr89SXbePmN/rziP1+nz3L1OnWKPOlf93
8piVj1T9Anfy1Oq0RjXoUW7C7AHx6q+1ky83qr1RTR01+3zPgT61v2+nRYUb
rleDtiyofO3sU3VvWJZz00/8rXKknjtqetlnatcf67s0mLFFdRyQdmPM85eq
18z1rhIndqj+z071eRP5XA2vszKybcw/qnr32Lr/DHmlfn9zYH2L2jvNeFbt
gZv/zFt5gxnPmlJlTL2a87aZ8YvUzxv2m5V9s+lv7JH/60NlJuwy/dkhVtTX
/7j+Nv3ZR6IC87cqsNP0Z+4c06B/yjHr1Nb2Ix62u/Ho//o3u22+UKxSlX9M
/+Si9BsH+F7tNf2PP1buZ80/esj0L45e2Ptq1UEn1POWU/J+WjOTjvn1wuiq
H5wy/YnV47/eX+3yKfU/I3MqKg==
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNnQXUVcXXh++973vTbv3biYjYjYGBgN3dHSAIiAoGigqK3Y2BiordiIXd
3d3d2PXth/2cdb+17qzJM2dm7zkze/bs39wF9xiwxUGVUql010ylUkf4jVqp
9HdnqfRUuJvqpdKiEV+gWirdHOEuEV44wtdHeN4Izxrh6yI8d4RnivC6jVJp
rgjPEOEbI33hCM8b4WnCL4X/dNR5Q6QvGPH/RfzbiC8WWX3DXRxpP0Ran3CX
RfjH8DcMd0GEvw+/V7huUf8S4b6JOr6LZ7vEcxuEmxDx+aPcHFFmuvA7wn8m
8jeL9K4RXyzia8ZzM0S4GuFVIn3JcN9EmV6RtnGkfR7hdSO8QYQ/i/DaEe4d
4U8jvFaE14vwJxHeOMLbR/jrCG8Y4W0i/FWE+0Z4ywh/GeHeEd4swl9EeM9W
qTQLbQp/r3Cz0Ybwzw3/uyizTrg9Ij5TxMvhbxnt6hbhrpG+bYSXjvDSER4Q
/dww3Ebhukdflgz3XeSfFfnfRv5a4U6P8Dfhrx7ukAh/Fv4S4Q6P8Ofhdw/3
QrNUWi7qOCD8IyP9i0hbJtxzEV820vcP/5VwK0S4X/gvhVs+wgeGf1/4F4S7
MNwD4S6Cb+EWKMeYCf+fcItEuBSuHO79qHe2cEtH0mIRr4TrCLeo+cS3C7dC
uBXDdTG/M9yIaNtyOJ6Pvi4V7sfo7/LhLxfutwj/1Jk0OSjc7VH2F2gW7qYI
Twl/K8ZnhH8Of/NwV0X4p/A3CfdjZ46d/uGWirp+6MxxuGKEv49wnwjvzRgO
t0eUXzHeuUK4PyM+c8SXivzNwy0bacuEmxLpH0T6nNAz0k+Id30V4ZXCjYnw
1+GvGu6YCH8Z/vLhFo5+/ldKeh0X6SviIv3E8FcOt0qEp4+6pwt3UdQ/I2M4
3CURnif8ucPdEuHhUcW24bYLNyzcNsanjfxpwl0QZQ6P+NbmtSKtGe68SD83
4oPCDQ7XGWmnhX9ruNtKGT49XC3Sq+EWjfL3y394f364IeEOYd6I/Hq4c+pZ
16bhNjN/M2k1c+TPFG5slPmlM2lP/atBv4j3i/AykfdzhA+M8L4R3ifcnkGH
+4Mef4a/W7hzIu9g2312uIHGzyrld0L8TMfFANvH+7cId2i4LcNtFW6fqOvk
8G8Kd5hp0Og86UHbf+3Mes4IN9Q6eH6haPOC4R6K9t0X9ewNnxnn0Cnco5E+
PuLHhTs+3JXhjg43ItwV4Y4yfnm4I41fFu4I49eEG+nzV4c71vhV4Y4xPs76
iO8W7+sRNFoz2rFG+GuH/3Fn8mqo/T410lcN16Oa9No43CbScRN5Bu02Mm+b
qLN7lF+ymvw+VDpdrM+YmuQ4YF64Sx7AkzvlAfE7pB/x2+U58XulNc9PLOVY
JH5PKXlM/G7rI35pKcc3432sPvSaL+g9b7j7or2X2C7KLRBp84d7INIXCX/h
cA/Xs62HSJeF4tv7t5Tf4eLOPdVwXfVr4Z6NvGvDXRfuOf3rwz2vPyHcU/IJ
vj0pn4g/U8pxwPNPyDPynrYseZ+Geyjc5FLOoW+Ge8s2vR3unXDMEfjvlrK9
b5n3mc89HO6TcA9a1+OlHHPjjF8i/SbrQ78PSzmn801/pM+8/rE+db0nb+71
3fcY/0De8/z75hO/ONaJmxkf4b8Y/g3hbgz3gnS6wbby/svCfW78kXCPlvJ7
uML4ZcZb5ewnZR8zn76x5rwhvf4K97px1pZ3bfvP8on3T9GnXb/ovxTuB/kE
ny+Jdr8c/uHh/yS/ef5H84mfFgLTgeH6hTsjXP9wCFFd43urhquF6x6uGa4V
7nv5zTuWjvg04aYNt5T5xD+Ob2yRas7Py5g/XWfy/G7p/q1ji7H2pfSCHo1y
8p5x1CynD70Yyx/IZ9bV9+Ub6+578q1eTn7zPGP9I/nP2P/QcfFnuNek71e+
k/H1tT7j+ov/x8NvTKOtv4d7Jdyr4f7Qp67v7Ad0YRzfZT/Jv6WUa9BrpfZa
NHe05zfrm6ecPvXNW06fNs5RTn7D59nLyT/ilwYvfw1/WPhzljMf/i8b4enC
TR9u+XAzhJsxXO9yrs3IMhsqlzA3zFbOcUC9GztHLBFuI/OJP1jK+ZHvbRPz
u4XboJwyEHXNWs4xR12882tptlQ5x/o04ZbWnzbcMvrTWRc8a1h3zXj3cvKe
55c0n/iC5ZxTmDPmL+d3wnczXzlpRpw+f+P4ghZfyduZy8knxu9M5cwnvpw0
o+2zlDOf/jwQa8VfMYZ3D9dXOY8+b2abaOM65Xw3bVlXH/lxPX3au1Y5+Q2f
1wz3P+Nrl5PfPN/T/Hmly5eOTej0hd8H3zZzz02OXcYR68/YGAdzRbnhzZw7
WJ9Yr94wnzi0/9xx/Zb5jNFN5QH96VHOMceYWqmc9IIeW5dzbEGnbfQZX9vq
I+9uUU5+w+fNpQ3xreQ3z29pPvE+jkdoun451y3GaC9pRnxl38/4Qp6eyTat
6tjlm1jF/Nlsx4yWW818+rNkzDsN56/7gqd/BD93Dbe99dLXnayLunfWp45+
thX+72IadNo93Bryc095DA/3MI34XqbB530cK4yRffUZI/vp0+/99aHHAfp8
uwfq0469rY+6Lgt+rx7+EeFfEe7YCB8Vfn/byzc6sJzfM9/3wfp8xweZz3ww
yDTGwpByjm94OFS+wrdD9eHnYfqMi8P1GRcDrI/3DTONMXJ0uB2l8XDT2Ccd
WU4e7EC79Sl3hPnkjfA5eHKMPny4INwhtvG4cLvJk+P14cMJ+vBnlD48Ga0P
LU/Uhz9j5A08OVMa0aeTTYM/U8K9EO7FcKeYBq9Osg6eP9U0+HZ6OccQPDlD
n3pPM7+f/dhcWp/lO+HbOfIM/pwXbrD8uTx4vCv0C/9806jjQukBry7Sh1fn
WgfPX2wafLtEH15dqg9/LpMH8Odyffhztu2iTVeYBm/HySf4M9Y6eP5K88n7
NdxL4V62HYw1xtl4+QffbpbW0PU6+QffrteHb/dIF/o0wTR4eIvPQfsb5Qf8
vNU06H23feD5Z8Nd63tul0/w5w59+H+nPjy5S5/nb7M+nrnJ99DuG2wL737O
umn7w9IFut5XzrELr+7Xh1f3ymP4+YBp8OoRn4MPj+pD+8f0ofEz0pH+TJQ2
1DXJ+njf87YFmj3uc/DtqXBXh7sm3NP61HVljK2r4F/4v5RzvMO/z+0P7frS
Nj1m/g3S/iV9aPOB7bhP3t8kn1+VZ/DndWkKH97Qhw9v6sOHt/Tvsp+MF8bH
26bB29esj7reMY3x8p50gcbv69Omd82faL9HlnMsvmIbad+Hth1efRLuwXAP
hftUf3K4j8yHb5+ZBo2+kE7Q6CvpBO3HBU2fCH9E+N+G/6R8+E4fPnxsfbzv
e9Pg8wvyEFr/YBpj+adyjjn4/LM+ZX80nzzmV9Y61tWdQr5fJdyq4XYJt1q4
HuF+t//w5w996FqvZJugwZ+mwbe/5Rm8+lc+wZN/TCP+n2nwpFxJusOTSiV9
eNJRSZ/x0llJH9pXK+lD41olfdpRqmR91PWXbaEda0f6vOHmC9eoZHvh1TSV
HLvwZNpK+ozfZiXz4dt0lUyDVzNG+Jty8mfmSvIGPsxSSR/az1pJHxrPVkkf
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
68ioz1QzXOhZ0L+ge9lVmqOPerqa6ZRBJkRncoxyIToW0uAxOjL0YzxzqO3k
/iN0UKtbJ2H6sbPP7mR56iQNPeYAy/Ne9vbs69EFoQNC/8O3y3/H7Rsk7NPK
/3rdrpVzDOF9Ir13K8fSNuH/G/29v573DHysrMs9EN1a+Z+xF0V4UjXD+0Xe
E1F2r3r+n+8Q34vu7xXbw30pyO7I5cjkc9lmvgkculr0m11b2c4Lm6l/Jb2H
Miu8Y6+Nu8Cxx504jDX0IQPUh6A7YzycLM3HGaYM8THSn7FyimMHvQD74oes
p0s99SqjTL9U2ftsx/OV1kPdXSP9rGrqEbqqQ3i4M2X0Mx0z5FFmsmPpDGly
dzN1Nuc0s320hz79Usv/OWYO4h4J5hbujUBOndO092P8H4ntDvNaPe+w4X+m
36ylLoc4+2XuDuF/qb9q5nz1Yvhv13LfTN67tdw3cy8KeybmzD6l5Cc8Zu1g
/3GS38WXzbwv5XnsleL9x4frV8v9FHXwn9a0lTLMkc/VU7dyjuMSXRjf6MvV
pDt6sc9r+b/ayHzP1/OOFMJ93KPR/l7u/enjhu7xedcL9bwLBVn561r+Jzfh
Q+t5bww0/KmW/w893nFwgbxjP4R+h70S96+w70YW3a+Z7+G/u7+v5f95s06/
VM+7WajnxXre30L6B0GDY8IdEPGPww2qZV1/WD97r5eqOS9dYhj9FLop9H8n
2Qb0VaQ/KH2Oc+z1ryetGJ98Tyc4fo4wfITf2ijL817GKnvDg+qZztj7tpnf
9JvOdaOdH462HaRdbpj2XGaZqXt0ZOdwjyELNFMnNE0r94PcsfxMLe8zYU3a
O2g3yb0P4asN7xXhMfW8Ewe55JR6/g844ft8lrnoxHrewYRswR0yk5xn7lAO
YR5jrkVPzVw4dz3/m5x1ff56/mc5z96sHEWd9xvm2QeshzovUZbeo5R31LBX
2jPC9xqmzcgV3I2zcyllA+7SQZabAj3DvwCb+lb+L/yPzdy7EWZvgizNs6sp
Y3NPzm6llNWn/qd8KeVewrtGeKLt2dM+vugc9Uo9701Cbj7GdNYH5G3u89ml
lLIrYeQlxtpLjrHhvhf5/9V63seE/PdfLf/nnj0DY+kZx8Mgw4wrzkaerLbX
KMLMyW/WUz7gPwGY8591/FDmKdt2pOk7ul5xfsCaxXnUE4aHGl7N8s9V2+sk
4Z0M82yxlsL3Y1x7n3ZeGWb4CNdM2sCa+Fo976Ji71QP/4Ja9v2v8E9X1n+5
nvdZQYdR9bxribE0DfJMLZ99vZ73YbFvnwPZX7n8+HreJ0UY2Yq7VMYoQxFG
juqI/HNrybt9nVf3j/SR9bxXi/3/LMx5tQzPwD6olu/aqJV3Iv0U4+rncDvG
c+c3U5bm/qVVXB+4x2orw9xLtYxrBeEtDXNHFXIXaym6bNaxA5s5j7KvJx29
NmssawX/nbyNczl3YzGfQ+dXnGf6NXO+RFfAHPO28wzzKvWzbu/vXMp6cUAz
53LWoDMsP9b5mPeOcz1HJ848fV3MK0tF2bnimTsjvCzntBEebzp7x3ER7t7M
PeiFEV4iwrNFmdstj+x/a4SXifDckX6zYfayN0Z4afBbkf5sLe9451zgAtvw
hHMsZzPMhegK2FsuFt60jdyP8P1PsB723NwvxN1E3C00SlqNVcZ4WbqdXM/z
m7equR/h/ij2cZ2Gma/Y93E3FDoc9v7cl8Vem73/D84P7BOnOKcd0sw05Fjk
N+50OqGUe0Du4OpVyv0mYwndy5LoUyLcv5n7Qe7gYm/+ieHdS7m/o/71SrkH
pB7mzE9tD3Mm3zJnzOxN0GvRtp6l1H3R/r1LuZ68Vm2vOYQvN/yqc85I56tL
lBFeNozs8bpjFfmIM7BCvnvTcUL4DecE9F3co8W8PbSZPnuicaaju0NHRd/R
UyHHve7cMsZ6GIfotLhDDZ0Wcih2A8x77JnYjyG/sw/D5oP9HGsL/IAXrBu0
g3dDA2iBfo95Hf7Bp7tNhz7QFfpOvTOtmuOAMXCv6dCcsyT0sdzV/KP1o9ND
91o3faNG6nAbtTyPaphOGZ5dBNkm+P5ghGduJW9pM3vhn30vuoUhjdSTzlvL
+/fYp3N+cYR7c841Lm7kHn65Wn6PfIur1vI8ZDnLXNbIffWKtTzrWNF6pgl+
XBF5v9by/kB0R5xf7O07X+E7Y46LMq853qEb+i7uGGSfzpkOZykrG54WnH6U
/8M54Tfz1qinLpo62Vv86ffC3uUvxzP35/H98x8Q9zXzTGzaVp7FTVPL7/7v
Rs4P/BfEfo3UX88R7h/kvnAvIAM3U6fNOVm/RuqU56rledpcpp/cSt35JL5T
9CXhXor4A808f5su8lerpy6aczXO2eY2/F+UHRTulYgPbKSefW7l0eWl+Smt
nMPub6bOvmX7t23l/03/2sw93x/OM6yD6AGRQ7ZvJX1+izK/N3Mdu9B6OANg
LPE/G4QXRT6ppW6L9/5kGLloYNQzOeKzhH9cLXUo8H2zRupeoekvpiMX/V5L
XQ9yy6m2h/Fwounw99FqyiXsuVvRpkujrp/5Jpo57/9QyzO9brU8gzu9kTpl
4tUoc1LEP6jlXYvotDlfG91IHXeXcPUoc2bEv4jwyY3UKXet5V2L6KU5E+TO
RnTvnANynyT7Js4ZB1gH4bMbqaPvXstzxe4+24j6z428byJ+fiP1XEuHq0X6
qRH/pJb3Qy5h+w/2/bRzgPMPe+X+zj/Mtx2N1JXwHz3oSPjPjj7qlpiX5rI8
8/NO1oMdGHIRMttj1ZTNBhtmzw4vxtRSt4m+5ffwR5dSZ89+h7UD/Ql3D44q
pc3Po/JlkGHqGei7aEM5+jgs6nojnj+ikXvUBWt5Tyn6+deizAzNXKc767me
spb2qOU5JD7nntM1Uyb4O+LTN3P9LtXVK9fyrJN1nzV/rVraa6xl+kxRfmLk
TVvPM9VVHWPcZbqa9SMbIBesEfEZmylzNCJ+dyP17GvX0u4Dn7NU9Ik9DS/t
N4g8xtksdXAOy72I0PDQZp5pL2h/ucOWc6hXGVeNPKuYP1xnlDsh4u/V8vx8
fstU2LNF+lu1vLeWPT7n4CMauZ9fuJbn4YvW8kzzGvnFWB3uWCPM/aur27YD
fY56uGt0EZ89rpF6AerqiPceG/F3asnbg6ttuy7C2HqtLr/RXT3SSN1xb77/
eHZyxGf1mzvY8YxuGh0154+ce29smDMrzr84L0Z/j74VXSvn0r1qeQb9YCPP
yYg/0Uhdc99a6qnRV3PuPGu897HIm7OeZ9S9rZOzt/WsZ3Z0/lFmAfZDrXzX
6PC3a+QZEcOfswXOGzhf2LKZ50r04TXPyDgrY65izuL8Ap0/ezDmMfZhhDlH
YL5k/Wb+fDnq2KCRZ6esyaRzxrpq1LVxI9ftEa1870nhb9XIMzqWROwONqzl
+ftqUX7zRq5RrP+bWv8LkbZgPWk61Y6klvM/+0v2O8zzzzTynIC6Zot6nor4
PPVce1iDWDtYM1mPWTc3buZZKnHGKmdZ00U9mzdT/8O469XMszNsTUZ7DjBT
KddR1lPWu3Waec6FbQrrI+e6HNcgb3BOO20pz5E5w8VGh3WWs1zIjK4BnQNn
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
Aa1rupk=
            "]], 
           PolygonBox[CompressedData["
1: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
79C7NGf1/4o+SF/UIem7/4e8e/8B+S/of3/RXAg=
            "]]}]}, {}, {}, {}, {}}, {{}, {
         GrayLevel[1], 
         Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJwV0kVTVnEYxuGDhWBhbyzs7m7EbrFbUaR5LcQW7HZnfhI7FnZ314zY3YnX
WVzze/73MCzeOfHJkaScqCAICkmJCYK02CCoRAbpnLRlaw7RZJHJHHtE51KZ
+czjlD1XF1GahSwg1Z6ni6nCUpawiY0s55e/Wa0/dZmuZwW/vdfqH12pm8nn
n/ca/aurdAMFFHmv04BYYthvS9YoqlKMLRywl9GDOkuLU40SbOWQvawe1tla
kuqUYhtH7OX0qKboGR2pp3W77uCYe5Qmhb8bozlrq6E1Oe5+Ri13L2pzzruO
xnPCXUhd9049Tz13fZ67G+guvUBDdyNeuBtrml4knUu85DIZXOEVV8nkGq+5
ThY3eMNNyvtf2dpcP+gtervHMJaP3gl6W1voEIbyybuPJtKSYey2faavux+t
GM4e2xf6u1vThslMImJvq+2YypTw27O11w5MZ1r4Ddo6amc6MSP8Nm1dtBtd
mRl+k7bu2pMejAi/Vdsd3nKXCrZcvcc77hMXftv6gPc8pKItT7/yiAHe4xjP
N+9UfawDdQIT+e49SJ9oE92rPxjsfqrNdJ821f9hB3dO
          "], VertexColors -> None], 
         LineBox[{2414, 2499, 2531, 2500, 2501, 2587, 2584, 2585, 2424, 2460, 
          2425, 2461, 2426, 2462, 2427, 2463, 2428, 2464, 2429, 2465, 2430, 
          2466, 2431, 2467, 2432, 2468, 2433, 2469, 2434, 2470, 2435, 2471, 
          2436, 2472, 2437, 2473, 2438, 2474, 2439, 2475, 2440, 2476, 2441, 
          2477, 2442, 2478, 2443, 2479, 2444, 2480, 2445, 2481, 2446, 2482, 
          2447, 2483, 2448, 2484, 2449, 2485, 2450, 2486, 2451, 2586, 2487, 
          2452, 2532, 2488, 2453}, VertexColors -> None]}, {}, {}}}, 
      VertexColors -> CompressedData["
1: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
grXuCXL+0a2B/IU1KKDxNy8+ysXfjt/SgmpUqBnpyol41OLyB5nYu3e5OFI4
k3KAzI9VqanlzvN1uOX38GLiey7u7XstasxHhTWn49jzT/U4dHAda045F5pJ
Q8+2f6fgyZ9lrkbLqfgWvitXicvF6SWSh5mNFGxkvHIoEachfMj8lMVCHr6M
GPyK/ExBx7LiNw3r6VicHH+ahBbMOV7weEMEBWlbahc6h5K8uYiyc/oWD9yI
jC0bz1Pg9vyfu79OI35FV+jJVvNgL3D16PZ9FCwsEs6cb9wMkVlaoYb8ACL/
PBVRk6BCcgnf+fzoVpjpGxzomeEhQ5vpsOUxFfK7JS/k3e6A6gOrICadB8kZ
yZMyh2k4NKqSqc3phr7gze6iSzywLTo+zy2no6WsI7Epvxc7j+35smY/F1sn
TB3qrEiP7tjsY6NA+t3DzYUOJSz4Ht5hf5bknMnIbbWfSM6p87rTsYvkHPmR
Z76ZDnS4NXt4PrlZCvdQhRWuz9j4vEHbYO0KOoKC/tVH2pWhO6jjSUAtG7d+
K3+4OUSDUI/s2HzVckzJms2f+U32at6jkRdfaPhwt3zeZ3o5+ux1zjmsInNY
tXU5I4SGBbvWe5e5VSBfaG69jhkHAulvmn870nA78b2gmVAl2nDDM/AyB+PK
05UbdWnI1JgOuBVeibXpA+7iTzm4UGCumC5Dg84afZbs8iocMtud5vGJg4ke
ff+SUSreXdB5E5dQhT/TdAubJg5+3lc/nFVNxQZlrfOJ66txN9JQzmGS7D3G
kuGKWCpk9xlQivOqsUd5R+0qOS6q/xP7vOUGFbM7pNeVmtYg462g2XEdLlbM
k/+iYE7F1St87WWsGkR4amwssOfik4HNkvvKVAz77timH1yLyld029VBXIRH
Zoslk/n8ela16P3JOoRE13KcyH6LyA6cthegIvh8UW2IbT0643lRzwq5CFPe
YPd0goJ5fz8buPtSkPD+3uirZi7un16n5MymoPvFrw9zT1PRZNlbpz7Oxfmk
OI8aBgWx3SNdq1RpaH70a9WcxWRO6E7JOoUUyAQ501z/7zMN87UkdvDQuSwm
RfEdBefqqjzl+Rkwt6BrOTnzUJ5n/yLzPgW5a/jNEtc2oDzG4/f+FzxE9oX1
L3OioL7HPf5fSCNCtI5JHmnhQX7BM9orQwq+HUy/E7SuGe7/Dt69pTCAN4s+
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
rvfgIT7Dlc/nFgUPWMlLg3wbkEe/L1P7noej4hM7NGwpSHrHxyyracSJkG2O
TX08ZCqyvGd3USDx+pHwlU2kX3+/fmUv6dcX4g8lbCZ5L7nl9e2tr1vQJXjT
94nQAI4/MtRe9R/Ri/aTmNgNbfDIlt3d95OH9pE9K2c9qeh9Vqn7dLAd6U7K
1J9tPGz8WpUnVEcFRSDl3prGTux6ESXm842Hn/KJgWZ7aZDNdna7UtGNG4fP
FrR5kfuU13MMmU9HksmqiVXUHrjyc9si+rnw8eROKbfRsWbboueNjb1IZPL3
GutxIcBQqfRtYOBQjgPDmd2HGHVq3A8yp0PXpoQitzZi+Hjy8ttVTKwpCF7a
bchGi5HsusAvpKcbmibvK+2HlcgFJ4nxfgTtYzm0kz7R5y/BXPyQBanxxedK
bJjw6VszuFa5HR3XPrVtJrmt5FHYOf2nvXAsCah0V+/Cx6yBaDaHjd//PdCl
numGa5it0t/mHsStbD/1/99fL2idaDhwox2um/YkpP3qQ3ny79jjpC+Vu4id
u1HTDH/LU/VKh1n4pfR7yUg5B5HNmVMacQ04n3tN5grJOy+ctx2WID4leUbu
ylsxOszPaTzS1xqAw1ZxwXW32JAZuPrpmAoVa/IV19WLD0G1YOJr0NV+7FaM
h4ptHUTdHJvj24dw16vRidneg6TLEzpXj1ejuuNJQs0IA9JClA1ysoU4EjJO
+28nC6ufHVsf/4COrs3ObJ3BEkS6PalnXWaDTRX9pN9FQ/IF3nP24XLM7BS1
PyjEwTXVOobuARqMHz59xXe4Egdifc1O3+VAI2DeV5F6KgQuLpvOW1ENgZWH
Wr3HOfD+ITL56CAVg0M/qedba8BdbrOw8CQXdNsl9CjSX+6Evd/7L6MOR27M
cU/9yMWFBBWJlJ8UeL/QGtCmUdAXKPTGr4uL/nXb/vk1U+Dgpa6nMUvFa8f0
6iviPNzOGdqw8wuF5PsRhf//vSgkoPiS1U4eNolXRHkQvVzf/0XpyAEGxI+r
BXHdSW553Bybc5OCSg+njx+eNEDxfuaf7x94GG+/p/HiBDlHc46N5mgjuuYu
bFHm8dB03uyD/mEK3LbMGwo9RfrIwX8iMXID2DP+1cqynfSX/BVbVbtasEN0
9ZDGvAH8mSnPN9lGRcDS9rWuN9rw9Gf11+Zh8rkBNwVryT4pCF1C2mIHHi1Y
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
aZvT8CrJ9X58Szc07hkFn/LgofUOdY27DB3lVTctkvp6IONu843RQjz9Vq7N
OQ4dJ//63DzK7oXxeYHrVZu5GP0qeCy0kQHL4cbNizl9GLsdeEv4Csn1p3cv
91rUiDVZ/I6bs5i4XGes4mhH8vNvp81jjk0YvvpDIzq4H09Xl5x4o/f///+F
rsQ08VcNnZlPpNdsStfvXjTDxNDRJ/NON7TCOeTdzVg2C46WJb2Cj/sAVYai
TnM7JNgRsWV32Ki0YxjQlvRi7tVrJkcsutC4nn7ScJiNr2c+PXm3oxt3f7hp
fPDswZMZx8dVJKcJjuz52kVy2o1VkWn+fH1Ez7kd7uEc1BfkW8R5tiKgReqc
7ysmYk/s9ZpXywHdXGzju/wmuI9t+OZkzUKhpKVfRzkHq3aIbr8X3QDt23ni
25Q5SHpc2e/+hoM1RXnPexPp6Pr8WdKpm4vZXLucV1s5OBpzVixlDQ0zBz4L
ZzgNwGb8W/+MDell070UWzJPvV8oH5S/DeK6lEWh8AYWhIqG3qycX49lfxQN
ux8P4c5PVYN1u5jQagt03WFcC65ZC9ujYwirou0ObIvtgdpTdxfz9dWIdih5
XJEzhJrv39V/17bB3f2X6Lv0CmwrKRxgLRuCnfBkR7IIA9EbvVuc4kthdz9s
zt/ng2jOeHvGfqoM28bPvGPTirD9wtO2hXHN+LX1YEuUcQE2btbZlv+eiXu7
qx4kdtKxU9xTSa28GO2Fk7+/riG5QlFr9sILGkT3THZ+MqqAzBHPy/tIz/uO
rNb396mQn1giAKUa3DA/HvxgI9nD5/JG3UgPuiLu42G/iYIjVKPMatKDdvY9
mrUuocBPyfbLglqSjzY+kJ9D8hvlte+4VzAFj2rTrBv+MDA34xunO4wHVx31
NywrCrh1fT9KtzRh1e0rytPjPFherZo3lErBTobQHrptC8w3vHfgEx2Ad5d1
wKgWFd+iDnz3DmrDjP3cI/OHecjtKj256RUVvg7fvyRUd8D9CLejv56HpcLh
F2nzafjxeTI3YUU3BM1+t7uk8iBobLVWnEKDBD/FZjSwB+zJLW81F/LQf+Xp
njVv6Ji/V9O59mEvcrvDN0u6crHnxLrT0TcYCHz+7dXtV33w3+8+WVjIwViF
tIdLagNM9S62h7gxUajV2rgnlw01r402m2Ya4ZChLTNm3I8zlpreoVEs9NQd
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
NvMdF3lHeryzVFqhPF0wbi7Pgr+fG/0+4c4b0+eex9SaYSw7KjHTi3Cx3eVV
COGOj+jm9jqfRvB7bvY9I7nLquNPt+d7LiQdl/G9hhqQdcowRFG8Hyu+5u/N
Os1FzfZrIUf66rFjS0fzFMmXiXPnnChV5GJmXPnpQ000NEzT4U9uGkBTv6UD
7xoHzT5twsrKNAwPlJe8UuGj9f6vaTw6yYlFQ6sqx+pw/EPMgUWtfCwyHKK1
/WYhJyqtaIxeCxl1SkqWlQAbTsf+PNbDRMvJE9cjG2uQWOa1glokgBz9kPPZ
esLbs1rbPndXY/ChQD2+TQDePKPj5Wf7sHaWrfqMiiqEXf87ntVNOPI7JIQ9
sxcvBkwLLHMqkeJhuN2NKcAkVevJqctdiJaxnfb4SwU8HZ5IyL8TYGbweWfj
iHY0G0/tbogvx0HFo9qL/ARYwZinfKWnBTEL1ePj75bh+d5xzgOyznnJvye2
BDSBdjM84V5iKbDV8+Puy50onCb8hr0xD7tl7e6JktyWVpVzVze7AdeDhXQ8
jhUjwqI04rI1OW96o2fjj9JQmKqxtP1VNbJjX1y/YNOP+ct2FYV9oaI7wdVy
rnoD3ug/OHjPmAenp7enKdtQkflo9pembc3Y4xM9uugPDyHBp1Z1KNFQYD3v
TtF4G/pPrKjM/8nDrYbYe6cI79xm9o3H3O7CWf2u9ZklhGsm2wb9kurht+WK
03zrXjyZsfnUpB4P/a/eq/A/N+DE7D27al/3Qe7p2JrP+/sxJyWoyo9Hx/M3
0Q+4Iwzc+jn9RvcxLk6/790z4NKEQhulQXU+E2qZuVq0hRz4PJebxRpoxn4z
288UBguVTQ7O5tUseH+yca2uakV4e1bNiXA29uom55ceZMJRPDsr9GM7Hgxe
Cy9bw8HBRVppYPdBe30R81p3J7RGNd+MZ3KwwrXTm+nTi8uFe3sGdHpwzSva
nSrDRVDr9w+L13RjWsC/9RY1vdB0vjfdxoWLuZtOIOteBz4HPlv/UY6B+y9k
XHYmcOGr6+4jsoNwp2x+fIUzE4xj0w7MJXlnclRl2VuRFpRxjWln8lk47qDt
967i//p6ezrIsQl+Vct1NKU4EAp2Giwn3Ply1emXGoWOid3Zwd27uJAr8rtY
/IDUKTrOJfk3YFeSr4eWbz/Ort5edpR8XqJa4Ur69XqE9e3O843lgbmqqfT5
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
a/+jgbSrD31dKQkJ/jG+O+wIaNJrrz45T4Oc5dOb15WRoMoUexbuQEC/Wav9
mt80MK2ivRQtwTqg8qeu8CQBP9021DGmaPBVP3xy5Xs8b19sbTedwueNOfhA
GPuHfPpSm29vSRBVOGI35oj363HFQBD6d00B5bAlxSTY69Q0nHXG9dxq0fEA
OV+duiq4s4iE7ZpGb16ivy4wZt3n6aeBa+jmwTL017VK7N+GZwm4QDmk9qKd
Bivez5+6XIDn6uiUyOwZAl7pCZc49dCAq+vvtaQ3JEhffWif7op+HCSmP7fS
YHZTxGXD1+ivE9JMOd3wXsRcHeZopEGvcU6pFHKp1NUDUw3uWJ8f7eReVkkD
v+IQekEeCb4uPW3O5wn4evXNDwHsjys8Tm8by0f+3Lo8R8MDz6d9B9c4hQbx
svF+Prm4nt7xPPmeeB/dmnrKimkgtlHKQOUFCZpFlz6ke6Ev/rfhrUw+DTL9
7m1LySJhbaifwKZLBCzVSfL2f0ODTvczKuPZJHDLX9q91YcAdnD8jaIsGigp
Pt1unInzH4h1LvQl4MHAw+ZdaTSIc3FS+ZtOwlfDIMlufwLS+B9a/3pIg/dn
0pS10kjIuyhure2HdcPqP++nyTR4ez5a9clzEsTPnHjrE0jA2ta3Lqr3aHCj
VmBd1zPsR4UBCqLB2L8yckOdbtGgO4/324UUvO8fr7e4hRFw+vFHu8AwGlwt
+aYWnUyCaw/zBjUE+7jkiuv+12nguCMvfeEJxt26Vm74v50zf6fi/9+4d5tS
2ZUllRZka1HJ+hRCkZA9UrKEEiFR6o3KEmVvoShSWZMtxZyZkijeZI41S2i0
KC1KQnye5/tffK/r/Hpfc801Z+Z1P+/Hfc55TTjmV8Cejx4hJKjoZ94USsfr
cQGTjghcP1+9+CAAn3uqV0vidQZqhnvfOkbieut9kpDvQULBCuOI81fQX7VW
l66cx/mpYHubx4eEmAttr/ivMXByc4OJfDT2VqHCR3oHSehtmvk2lsIADKl2
/ImhQfjug7GnDiQsiZVcfCiZgd96aSFFl2hwrJJUDduN62G31gbFBAbCeW0u
v46l4WRfqYKyFQl6IwlN9Yl4ntfJWUnxNAybF38hDEkYpRtkIy/j/D88JXIm
EZ/v33JsXSRYRtG5PXHILUTtD7dUGuwCt37+thHPr8LeFhLDgNeG0lafZBqW
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
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.0010000000000000022`, 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           TagBox["g", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox[
          TagBox[
           TagBox["\[Beta]", HoldForm], HoldForm], HoldForm], 
         TraditionalForm], None}}, DisplayFunction -> Identity, AspectRatio -> 
     1, AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> True,
      FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox["g", HoldForm], HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox["\[Beta]", HoldForm], HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{0.001, 15}, {0, 20}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
/wEdeLt3
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -96.0747392815759}, 
                    Offset[{4., 0}, {7.5, -96.0747392815759}]}, {{
                    7.5, -43.93105446118192}, 
                    Offset[{4., 0}, {7.5, -43.93105446118192}]}, {{7.5, 
                    8.212630359212051}, 
                    Offset[{4., 0}, {7.5, 8.212630359212051}]}, {{7.5, 
                    60.35631517960602}, 
                    Offset[{4., 0}, {7.5, 60.35631517960602}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -109.11066048667439`}, 
                    Offset[{2.5, 0.}, {7.5, -109.11066048667439`}]}, {{
                    7.5, -83.0388180764774}, 
                    Offset[{2.5, 0.}, {7.5, -83.0388180764774}]}, {{
                    7.5, -70.00289687137891}, 
                    Offset[{2.5, 0.}, {7.5, -70.00289687137891}]}, {{
                    7.5, -56.96697566628042}, 
                    Offset[{2.5, 0.}, {7.5, -56.96697566628042}]}, {{
                    7.5, -30.89513325608343}, 
                    Offset[{2.5, 0.}, {7.5, -30.89513325608343}]}, {{
                    7.5, -17.859212050984937`}, 
                    Offset[{2.5, 0.}, {7.5, -17.859212050984937`}]}, {{
                    7.5, -4.823290845886443}, 
                    Offset[{2.5, 0.}, {7.5, -4.823290845886443}]}, {{7.5, 
                    21.248551564310546`}, 
                    Offset[{2.5, 0.}, {7.5, 21.248551564310546`}]}, {{7.5, 
                    34.284472769409035`}, 
                    Offset[{2.5, 0.}, {7.5, 34.284472769409035`}]}, {{7.5, 
                    47.32039397450753}, 
                    Offset[{2.5, 0.}, {7.5, 47.32039397450753}]}, {{7.5, 
                    73.39223638470452}, 
                    Offset[{2.5, 0.}, {7.5, 73.39223638470452}]}, {{7.5, 
                    86.428157589803}, 
                    Offset[{2.5, 0.}, {7.5, 86.428157589803}]}, {{7.5, 
                    99.46407879490151}, 
                    Offset[{2.5, 0.}, {7.5, 99.46407879490151}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -96.0747392815759}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -43.93105446118192}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["400", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 8.212630359212051}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["600", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 60.35631517960602}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["800", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "63.49662158529481`"}], ",", 
                   "804.7696244451162`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9327430974346237`*^9, 3.9327431294663525`*^9, 3.932743218764162*^9, {
   3.9327433637302647`*^9, 3.9327433827101936`*^9}, 3.9327436058365917`*^9, {
   3.9327437051536503`*^9, 3.932743737770504*^9}, 3.932920093667946*^9, 
   3.934378713200987*^9, 3.935918935179186*^9, 3.936019078138721*^9, 
   3.936711775430935*^9, 3.936714046776127*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"602fb3b8-acbe-4cc4-a871-fc900220f3d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1082, 1302},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.1 Inherited,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6c6b21a8-fc3e-734f-8a20-a90ab20d634c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 263, 4, 46, "Input",ExpressionUUID->"081d0261-24be-d04b-b5a4-01bd8bbc0a17"],
Cell[CellGroupData[{
Cell[846, 28, 230, 4, 106, "Title",ExpressionUUID->"f9a79562-215e-bc4a-9044-3635053324e9"],
Cell[1079, 34, 558, 10, 61, "Text",ExpressionUUID->"8b07a863-b14b-dc46-8522-808f22765afd"],
Cell[CellGroupData[{
Cell[1662, 48, 161, 3, 72, "Section",ExpressionUUID->"555cdbed-604c-8a41-adbf-098cbae06c74"],
Cell[1826, 53, 5870, 158, 364, "Input",ExpressionUUID->"a5d7a4dd-0dfc-6d49-afa6-7e65a13daf36"],
Cell[7699, 213, 4762, 130, 333, "Input",ExpressionUUID->"87cc1c85-a298-404e-b0a2-66f55126ea90"],
Cell[12464, 345, 1782, 44, 116, "Input",ExpressionUUID->"fb588a36-25c3-384e-b99f-0dae1e465de1"],
Cell[14249, 391, 1904, 50, 138, "Input",ExpressionUUID->"9dbb3040-353f-e148-a65c-62a8e361d9da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16190, 446, 226, 4, 72, "Section",ExpressionUUID->"5f74fc80-f33d-e246-9a51-8ea5ef757ce9"],
Cell[16419, 452, 1546, 38, 130, "Input",ExpressionUUID->"706a0990-fa32-0943-b470-c0b2ff980d4b"],
Cell[CellGroupData[{
Cell[17990, 494, 1616, 41, 146, "Input",ExpressionUUID->"a3d399ca-b3ea-a743-b1df-9f721c7f33c3"],
Cell[19609, 537, 1109, 25, 61, "Output",ExpressionUUID->"167a8ee3-1f9d-4b3c-a5a8-0a7e829bb47e"],
Cell[20721, 564, 1341, 32, 60, "Output",ExpressionUUID->"bb54c753-6cde-4c25-820d-98c2e15d32f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22099, 601, 4500, 114, 394, "Input",ExpressionUUID->"00ada7e1-fafe-8446-b79e-46271c6e3094"],
Cell[26602, 717, 1010, 19, 55, "Output",ExpressionUUID->"c2910303-7faf-4289-baec-f5e73b560a56"],
Cell[27615, 738, 1080, 22, 55, "Output",ExpressionUUID->"3935dfb9-0842-4d0d-9eb3-8a27bd8b6cd9"],
Cell[28698, 762, 1127, 23, 58, "Output",ExpressionUUID->"2c0c29df-b545-46ae-80bf-65af20f0b31c"],
Cell[29828, 787, 1067, 21, 55, "Output",ExpressionUUID->"92abb891-4353-4a42-a2c2-11c6996f2152"],
Cell[30898, 810, 902, 15, 36, "Output",ExpressionUUID->"972054ec-d5a0-4cae-a9a1-1872af2f62a6"],
Cell[31803, 827, 1851, 46, 58, "Output",ExpressionUUID->"f8e3d2e1-0f74-4a00-94e8-4de541d311ee"],
Cell[33657, 875, 1562, 38, 60, "Output",ExpressionUUID->"aa0ae52e-1c03-4e4e-899e-6bff84bf9856"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35256, 918, 828, 22, 108, "Input",ExpressionUUID->"893d071d-83ed-e749-8af8-7e534737f4b9"],
Cell[36087, 942, 1103, 35, 59, "Output",ExpressionUUID->"de09ba65-7da0-4319-879a-1d6c124e6f67"],
Cell[37193, 979, 626, 18, 57, "Output",ExpressionUUID->"e56d2746-b0b5-4f05-b075-714406eea87e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37868, 1003, 233, 4, 72, "Section",ExpressionUUID->"b3dad37d-520a-0e41-a585-e6c26b6f77b6"],
Cell[CellGroupData[{
Cell[38126, 1011, 2307, 46, 130, "Input",ExpressionUUID->"83b58570-1bdc-fc4e-b747-27327dc2838f"],
Cell[40436, 1059, 425, 7, 36, "Output",ExpressionUUID->"75d11d4a-b3d9-4da8-914a-9c83838a78e8"],
Cell[40864, 1068, 526, 12, 54, "Output",ExpressionUUID->"0bf1623f-b720-43c6-825b-fde722918e66"],
Cell[41393, 1082, 549, 13, 54, "Output",ExpressionUUID->"953d7139-e737-4f8c-8649-a7c94053f62e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41979, 1100, 3502, 75, 169, "Input",ExpressionUUID->"7c0f0a3b-3ac2-db4b-8df7-4a95a4d621a2"],
Cell[45484, 1177, 4557, 129, 138, "Output",ExpressionUUID->"f9298ed5-24bb-45d8-880f-a0c11393a235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50078, 1311, 3706, 95, 334, "Input",ExpressionUUID->"89923b8a-ff21-46d4-8214-6554d1f77587"],
Cell[53787, 1408, 4533, 125, 113, "Output",ExpressionUUID->"46e9fd8c-9094-4459-ba07-6a840d975a2b"],
Cell[58323, 1535, 2077, 71, 110, "Output",ExpressionUUID->"e346f285-f8d7-4f45-a549-cec64ba333c5"],
Cell[60403, 1608, 285, 6, 36, "Output",ExpressionUUID->"fadb316e-6996-4827-aca0-eb7b6d797ba4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60725, 1619, 8252, 217, 626, "Input",ExpressionUUID->"435e0a67-17e5-6842-85a5-454c7ff86d0d"],
Cell[68980, 1838, 1280, 22, 54, "Output",ExpressionUUID->"6397ee6f-a348-455f-828e-889709853583"],
Cell[70263, 1862, 2267, 54, 61, "Output",ExpressionUUID->"481fccd0-e846-441d-8547-3a7677f02ca3"],
Cell[72533, 1918, 4483, 123, 115, "Output",ExpressionUUID->"30116b42-5965-4b98-b840-a3cdedb3c3be"],
Cell[77019, 2043, 4355, 118, 115, "Output",ExpressionUUID->"500673bc-d654-4c69-8d72-9d870ceb0079"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81411, 2166, 8061, 224, 751, "Input",ExpressionUUID->"8d378cf9-2c2c-874b-a89c-d59007985f84"],
Cell[89475, 2392, 625, 10, 36, "Output",ExpressionUUID->"bc6a1b32-8023-4fea-84a0-df77372d848d"],
Cell[90103, 2404, 2415, 66, 61, "Output",ExpressionUUID->"f301c97b-7f47-49f0-90b6-1cb1b85b8ea0"],
Cell[92521, 2472, 5155, 147, 138, "Output",ExpressionUUID->"1b01cac2-c2de-4106-a0ac-1e5c3cc13470"],
Cell[97679, 2621, 5258, 150, 138, "Output",ExpressionUUID->"f295dec2-7a90-4e25-b5b0-e8d7534bcd79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102974, 2776, 4294, 125, 386, "Input",ExpressionUUID->"79250d2c-18d3-5c43-b1a3-e5ca9571a778"],
Cell[107271, 2903, 1326, 36, 61, "Output",ExpressionUUID->"adfe0e11-78d1-42e3-b685-22af8c239890"],
Cell[108600, 2941, 1326, 36, 61, "Output",ExpressionUUID->"780bb4b3-dbd1-4c1c-b96d-128d98ab7e20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109963, 2982, 2355, 55, 152, "Input",ExpressionUUID->"ba8857f9-02cc-9b44-ac99-1f45ad4b5add"],
Cell[112321, 3039, 15233, 397, 363, "Output",ExpressionUUID->"9c6e7cbb-fdf1-4020-a3b5-03a13f2f5120"],
Cell[127557, 3438, 40488, 1086, 1211, "Output",ExpressionUUID->"3989867c-0607-42e4-9ff6-9003b131e431"]
}, Open  ]],
Cell[168060, 4527, 1987, 52, 146, "Input",ExpressionUUID->"977b4283-f49b-674c-ae45-238f620febe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170084, 4584, 187, 3, 72, "Section",ExpressionUUID->"bd84672c-ae67-42ff-b850-4b6f041e4473"],
Cell[170274, 4589, 544, 10, 85, "Text",ExpressionUUID->"61532387-f42a-46a3-885b-82017ce9b890"],
Cell[CellGroupData[{
Cell[170843, 4603, 177, 3, 58, "Subsection",ExpressionUUID->"1d79fa19-0843-42cc-9c3b-46036a3d7a04"],
Cell[CellGroupData[{
Cell[171045, 4610, 2275, 60, 191, "Input",ExpressionUUID->"733c0e2f-ee0e-434e-b534-db1f5d9f26ed"],
Cell[173323, 4672, 1433, 43, 61, "Output",ExpressionUUID->"a893b61f-07c8-4bb0-9dfa-8e1166dee68c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174793, 4720, 1664, 42, 71, "Input",ExpressionUUID->"70744bec-e976-cb4e-9a9a-def5bf008c7b"],
Cell[176460, 4764, 318, 5, 36, "Output",ExpressionUUID->"8f1ea981-7f0a-4a17-ae4e-93fc0e03d1be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176815, 4774, 3432, 83, 239, "Input",ExpressionUUID->"b60096f8-3c36-2c44-80c1-107afbc567fc"],
Cell[180250, 4859, 621, 13, 28, "Message",ExpressionUUID->"0b045c86-e051-48d7-95a8-1a1af2a57c50"],
Cell[180874, 4874, 903, 25, 58, "Output",ExpressionUUID->"617930f2-acff-4c29-9750-e3b128cfcaca"],
Cell[181780, 4901, 549, 13, 36, "Output",ExpressionUUID->"73278366-61bb-408d-af65-8e37d655b0c3"],
Cell[182332, 4916, 28352, 516, 270, "Output",ExpressionUUID->"1797f976-d5e6-41b4-99df-f7486a644168"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210733, 5438, 178, 3, 58, "Subsection",ExpressionUUID->"1101f7f3-e31a-4ed7-ad5f-f886f6579073"],
Cell[CellGroupData[{
Cell[210936, 5445, 2781, 51, 69, "Input",ExpressionUUID->"4e552f16-3e07-4cff-81cf-662050d6b8a4"],
Cell[213720, 5498, 17344, 319, 229, "Output",ExpressionUUID->"8cc30d22-a0ad-4b74-b117-a76b00f5d768"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231101, 5822, 2956, 59, 90, "Input",ExpressionUUID->"835ed874-23cb-b945-8866-7784b13323d4"],
Cell[234060, 5883, 1415, 21, 36, "Output",ExpressionUUID->"df7958c7-58a9-4e93-9b58-fd4cf2a09b7a"]
}, Open  ]],
Cell[235490, 5907, 1194, 33, 108, "Input",ExpressionUUID->"42b4daca-c8c5-fa4c-a1f3-08fc8853f371"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236733, 5946, 274, 4, 72, "Section",ExpressionUUID->"747df1b9-e8bb-a74b-a773-968027f5eae2"],
Cell[237010, 5952, 288, 6, 37, "Text",ExpressionUUID->"db63f7c5-cb0a-4b4a-81f1-604e64e28331"],
Cell[CellGroupData[{
Cell[237323, 5962, 683, 18, 77, "Input",ExpressionUUID->"365b5747-b9b8-0944-a29e-8034d86128a9"],
Cell[238009, 5982, 390, 8, 36, "Output",ExpressionUUID->"72b04f10-d892-41a6-92ff-582f8eff8ecb"],
Cell[238402, 5992, 391, 8, 36, "Output",ExpressionUUID->"aa2ca4ab-9ed9-4d9e-8a16-74a628fa171a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238830, 6005, 5962, 170, 565, "Input",ExpressionUUID->"e368b1f8-2399-d14a-8984-c810f26c10c0"],
Cell[244795, 6177, 3641, 111, 115, "Output",ExpressionUUID->"510d0f05-fdbf-4d8b-821a-4302f8fc043f"],
Cell[248439, 6290, 3868, 114, 115, "Output",ExpressionUUID->"6f5e9f36-dc22-4164-b66b-d6cdc047d1ba"],
Cell[252310, 6406, 3756, 111, 115, "Output",ExpressionUUID->"b775cc8f-7ff1-41de-8590-14681d72cf73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256103, 6522, 5101, 141, 501, "Input",ExpressionUUID->"21dc05f8-492a-ec49-a187-b431e8a1bef4"],
Cell[261207, 6665, 366, 7, 36, "Output",ExpressionUUID->"e793668c-5051-4f16-819e-b6b6c7985157"],
Cell[261576, 6674, 5067, 146, 163, "Output",ExpressionUUID->"22fd553f-7cfb-426c-a633-c2d696932723"],
Cell[266646, 6822, 5091, 147, 163, "Output",ExpressionUUID->"3d721e22-24e0-47b3-8108-7af268c7a663"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271774, 6974, 2358, 67, 247, "Input",ExpressionUUID->"bb3e48f2-3022-c54c-959a-6432eefb26ba"],
Cell[274135, 7043, 1204, 35, 61, "Output",ExpressionUUID->"fc5c0933-62bd-4206-9d03-a174970f6862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275376, 7083, 984, 24, 69, "Input",ExpressionUUID->"e57db3a4-1491-fc45-8ba9-6bb6e1ee5fb2"],
Cell[276363, 7109, 19788, 545, 537, "Output",ExpressionUUID->"a77c96af-66ea-4c91-8178-de941ad3c727"]
}, Open  ]],
Cell[296166, 7657, 774, 20, 69, "Input",ExpressionUUID->"7046d8f7-0fc9-8c4e-b640-45cf53a001d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296977, 7682, 184, 3, 72, "Section",ExpressionUUID->"c80c3020-1896-b246-8863-ede63c702782"],
Cell[297164, 7687, 651, 17, 61, "Text",ExpressionUUID->"6f4db470-b3ff-424f-b568-316ad161b5e5"],
Cell[CellGroupData[{
Cell[297840, 7708, 466, 14, 58, "Subsection",ExpressionUUID->"c53b6062-ec5d-0b46-8a52-6cbe48e003d7"],
Cell[CellGroupData[{
Cell[298331, 7726, 2589, 61, 247, "Input",ExpressionUUID->"8c5dfb5c-c773-fe41-a27f-2ef154d3ecd5"],
Cell[300923, 7789, 127881, 2197, 414, "Output",ExpressionUUID->"3625816c-cae4-46dc-9c60-606aa1277e93"],
Cell[428807, 9988, 145501, 2451, 432, "Output",ExpressionUUID->"602fb3b8-acbe-4cc4-a871-fc900220f3d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

